<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20233.23.1017.0948                               -->
<workbook original-version='18.1' source-build='2023.3.0 (20233.23.1017.0948)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.PatternedLineMarks.true...PatternedLineMarks />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='mean_eps_0.15' inline='true' name='federated.0frlki006il9ol10vv7fi1j3ln61' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='mean_eps_0.15' name='textscan.0z10pfq1576g1p1dcqfcc1t4xxte'>
            <connection class='textscan' directory='C:/Users/theos/OneDrive/Desktop/College/5th year/Thesis/Results/Fairness Regularisation/Charts/eps0.15/Regularisation_plots_0.15' filename='mean_eps_0.15.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0z10pfq1576g1p1dcqfcc1t4xxte' name='mean_eps_0.15.csv' table='[mean_eps_0.15#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=' '>
            <column datatype='string' name='F1' ordinal='0' />
            <column datatype='real' name='Layer' ordinal='1' />
            <column datatype='real' name='Neurons' ordinal='2' />
            <column datatype='real' name='BNNAccuracy' ordinal='3' />
            <column datatype='real' name='BNNFairTrainingAccuracy' ordinal='4' />
            <column datatype='real' name='BNNMaxDifference' ordinal='5' />
            <column datatype='real' name='BNNFairTrainingMaxDifference' ordinal='6' />
            <column datatype='real' name='BNNMinDifference' ordinal='7' />
            <column datatype='real' name='BNNFairTrainingMinDifference' ordinal='8' />
            <column datatype='real' name='BNNFairnessScore' ordinal='9' />
            <column datatype='real' name='BNNFairTrainingFairnessScore' ordinal='10' />
            <column datatype='real' name='BNNAvgDiff' ordinal='11' />
            <column datatype='real' name='BNNFairTrainingAvgDiff' ordinal='12' />
            <column datatype='real' name='BNNRecall' ordinal='13' />
            <column datatype='real' name='BNNFairTrainingRecall' ordinal='14' />
            <column datatype='real' name='BNNPrecision' ordinal='15' />
            <column datatype='real' name='BNNFairTrainingPrecision' ordinal='16' />
            <column datatype='real' name='BNNMeanEntropy' ordinal='17' />
            <column datatype='real' name='BNNFairTrainingMeanEntropy' ordinal='18' />
            <column datatype='real' name='BNNTime' ordinal='19' />
            <column datatype='real' name='BNNFairTrainingTime' ordinal='20' />
            <column datatype='real' name='BNNAdversaryAccuracy' ordinal='21' />
            <column datatype='real' name='BNNAdversaryMaxDifference' ordinal='22' />
            <column datatype='real' name='BNNAdversaryMinDifference' ordinal='23' />
            <column datatype='real' name='BNNAdversaryFairnessScore' ordinal='24' />
            <column datatype='real' name='BNNAdversaryAvgDiff' ordinal='25' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0z10pfq1576g1p1dcqfcc1t4xxte' name='mean_eps_0.15.csv' table='[mean_eps_0.15#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=' '>
            <column datatype='string' name='F1' ordinal='0' />
            <column datatype='real' name='Layer' ordinal='1' />
            <column datatype='real' name='Neurons' ordinal='2' />
            <column datatype='real' name='BNNAccuracy' ordinal='3' />
            <column datatype='real' name='BNNFairTrainingAccuracy' ordinal='4' />
            <column datatype='real' name='BNNMaxDifference' ordinal='5' />
            <column datatype='real' name='BNNFairTrainingMaxDifference' ordinal='6' />
            <column datatype='real' name='BNNMinDifference' ordinal='7' />
            <column datatype='real' name='BNNFairTrainingMinDifference' ordinal='8' />
            <column datatype='real' name='BNNFairnessScore' ordinal='9' />
            <column datatype='real' name='BNNFairTrainingFairnessScore' ordinal='10' />
            <column datatype='real' name='BNNAvgDiff' ordinal='11' />
            <column datatype='real' name='BNNFairTrainingAvgDiff' ordinal='12' />
            <column datatype='real' name='BNNRecall' ordinal='13' />
            <column datatype='real' name='BNNFairTrainingRecall' ordinal='14' />
            <column datatype='real' name='BNNPrecision' ordinal='15' />
            <column datatype='real' name='BNNFairTrainingPrecision' ordinal='16' />
            <column datatype='real' name='BNNMeanEntropy' ordinal='17' />
            <column datatype='real' name='BNNFairTrainingMeanEntropy' ordinal='18' />
            <column datatype='real' name='BNNTime' ordinal='19' />
            <column datatype='real' name='BNNFairTrainingTime' ordinal='20' />
            <column datatype='real' name='BNNAdversaryAccuracy' ordinal='21' />
            <column datatype='real' name='BNNAdversaryMaxDifference' ordinal='22' />
            <column datatype='real' name='BNNAdversaryMinDifference' ordinal='23' />
            <column datatype='real' name='BNNAdversaryFairnessScore' ordinal='24' />
            <column datatype='real' name='BNNAdversaryAvgDiff' ordinal='25' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[mean_eps_0.15.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot; &quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[mean_eps_0.15.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.15.csv_58FCEDAF50D64FDF8EB0DDED5B763985]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Layer</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Layer]</local-name>
            <parent-name>[mean_eps_0.15.csv]</parent-name>
            <remote-alias>Layer</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.15.csv_58FCEDAF50D64FDF8EB0DDED5B763985]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Neurons</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Neurons]</local-name>
            <parent-name>[mean_eps_0.15.csv]</parent-name>
            <remote-alias>Neurons</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.15.csv_58FCEDAF50D64FDF8EB0DDED5B763985]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNAccuracy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNAccuracy]</local-name>
            <parent-name>[mean_eps_0.15.csv]</parent-name>
            <remote-alias>BNNAccuracy</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.15.csv_58FCEDAF50D64FDF8EB0DDED5B763985]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNFairTrainingAccuracy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNFairTrainingAccuracy]</local-name>
            <parent-name>[mean_eps_0.15.csv]</parent-name>
            <remote-alias>BNNFairTrainingAccuracy</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.15.csv_58FCEDAF50D64FDF8EB0DDED5B763985]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNMaxDifference</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNMaxDifference]</local-name>
            <parent-name>[mean_eps_0.15.csv]</parent-name>
            <remote-alias>BNNMaxDifference</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.15.csv_58FCEDAF50D64FDF8EB0DDED5B763985]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNFairTrainingMaxDifference</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNFairTrainingMaxDifference]</local-name>
            <parent-name>[mean_eps_0.15.csv]</parent-name>
            <remote-alias>BNNFairTrainingMaxDifference</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.15.csv_58FCEDAF50D64FDF8EB0DDED5B763985]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNMinDifference</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNMinDifference]</local-name>
            <parent-name>[mean_eps_0.15.csv]</parent-name>
            <remote-alias>BNNMinDifference</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.15.csv_58FCEDAF50D64FDF8EB0DDED5B763985]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNFairTrainingMinDifference</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNFairTrainingMinDifference]</local-name>
            <parent-name>[mean_eps_0.15.csv]</parent-name>
            <remote-alias>BNNFairTrainingMinDifference</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.15.csv_58FCEDAF50D64FDF8EB0DDED5B763985]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNFairnessScore</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNFairnessScore]</local-name>
            <parent-name>[mean_eps_0.15.csv]</parent-name>
            <remote-alias>BNNFairnessScore</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.15.csv_58FCEDAF50D64FDF8EB0DDED5B763985]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNFairTrainingFairnessScore</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNFairTrainingFairnessScore]</local-name>
            <parent-name>[mean_eps_0.15.csv]</parent-name>
            <remote-alias>BNNFairTrainingFairnessScore</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.15.csv_58FCEDAF50D64FDF8EB0DDED5B763985]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNAvgDiff</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNAvgDiff]</local-name>
            <parent-name>[mean_eps_0.15.csv]</parent-name>
            <remote-alias>BNNAvgDiff</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.15.csv_58FCEDAF50D64FDF8EB0DDED5B763985]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNFairTrainingAvgDiff</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNFairTrainingAvgDiff]</local-name>
            <parent-name>[mean_eps_0.15.csv]</parent-name>
            <remote-alias>BNNFairTrainingAvgDiff</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.15.csv_58FCEDAF50D64FDF8EB0DDED5B763985]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNRecall</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNRecall]</local-name>
            <parent-name>[mean_eps_0.15.csv]</parent-name>
            <remote-alias>BNNRecall</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.15.csv_58FCEDAF50D64FDF8EB0DDED5B763985]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNFairTrainingRecall</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNFairTrainingRecall]</local-name>
            <parent-name>[mean_eps_0.15.csv]</parent-name>
            <remote-alias>BNNFairTrainingRecall</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.15.csv_58FCEDAF50D64FDF8EB0DDED5B763985]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNPrecision</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNPrecision]</local-name>
            <parent-name>[mean_eps_0.15.csv]</parent-name>
            <remote-alias>BNNPrecision</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.15.csv_58FCEDAF50D64FDF8EB0DDED5B763985]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNFairTrainingPrecision</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNFairTrainingPrecision]</local-name>
            <parent-name>[mean_eps_0.15.csv]</parent-name>
            <remote-alias>BNNFairTrainingPrecision</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.15.csv_58FCEDAF50D64FDF8EB0DDED5B763985]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNMeanEntropy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNMeanEntropy]</local-name>
            <parent-name>[mean_eps_0.15.csv]</parent-name>
            <remote-alias>BNNMeanEntropy</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.15.csv_58FCEDAF50D64FDF8EB0DDED5B763985]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNFairTrainingMeanEntropy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNFairTrainingMeanEntropy]</local-name>
            <parent-name>[mean_eps_0.15.csv]</parent-name>
            <remote-alias>BNNFairTrainingMeanEntropy</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.15.csv_58FCEDAF50D64FDF8EB0DDED5B763985]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNTime</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNTime]</local-name>
            <parent-name>[mean_eps_0.15.csv]</parent-name>
            <remote-alias>BNNTime</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.15.csv_58FCEDAF50D64FDF8EB0DDED5B763985]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNFairTrainingTime</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNFairTrainingTime]</local-name>
            <parent-name>[mean_eps_0.15.csv]</parent-name>
            <remote-alias>BNNFairTrainingTime</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.15.csv_58FCEDAF50D64FDF8EB0DDED5B763985]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNAdversaryAccuracy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNAdversaryAccuracy]</local-name>
            <parent-name>[mean_eps_0.15.csv]</parent-name>
            <remote-alias>BNNAdversaryAccuracy</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.15.csv_58FCEDAF50D64FDF8EB0DDED5B763985]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNAdversaryMaxDifference</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNAdversaryMaxDifference]</local-name>
            <parent-name>[mean_eps_0.15.csv]</parent-name>
            <remote-alias>BNNAdversaryMaxDifference</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.15.csv_58FCEDAF50D64FDF8EB0DDED5B763985]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNAdversaryMinDifference</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNAdversaryMinDifference]</local-name>
            <parent-name>[mean_eps_0.15.csv]</parent-name>
            <remote-alias>BNNAdversaryMinDifference</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.15.csv_58FCEDAF50D64FDF8EB0DDED5B763985]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNAdversaryFairnessScore</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNAdversaryFairnessScore]</local-name>
            <parent-name>[mean_eps_0.15.csv]</parent-name>
            <remote-alias>BNNAdversaryFairnessScore</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.15.csv_58FCEDAF50D64FDF8EB0DDED5B763985]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNAdversaryAvgDiff</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNAdversaryAvgDiff]</local-name>
            <parent-name>[mean_eps_0.15.csv]</parent-name>
            <remote-alias>BNNAdversaryAvgDiff</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.15.csv_58FCEDAF50D64FDF8EB0DDED5B763985]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='BNN Accuracy' datatype='real' name='[BNNAccuracy]' role='measure' type='quantitative' />
      <column caption='BNN Adversary Accuracy' datatype='real' hidden='true' name='[BNNAdversaryAccuracy]' role='measure' type='quantitative' />
      <column caption='BNN Adversary Avg Diff' datatype='real' hidden='true' name='[BNNAdversaryAvgDiff]' role='measure' type='quantitative' />
      <column caption='BNN Adversary Fairness Score' datatype='real' hidden='true' name='[BNNAdversaryFairnessScore]' role='measure' type='quantitative' />
      <column caption='BNN Adversary Max Difference' datatype='real' hidden='true' name='[BNNAdversaryMaxDifference]' role='measure' type='quantitative' />
      <column caption='BNN Adversary Min Difference' datatype='real' hidden='true' name='[BNNAdversaryMinDifference]' role='measure' type='quantitative' />
      <column caption='BNN Avg Diff' datatype='real' name='[BNNAvgDiff]' role='measure' type='quantitative' />
      <column caption='BNN Fair Training Accuracy' datatype='real' name='[BNNFairTrainingAccuracy]' role='measure' type='quantitative' />
      <column caption='BNN Fair Training Avg Diff' datatype='real' name='[BNNFairTrainingAvgDiff]' role='measure' type='quantitative' />
      <column caption='BNN Fair Training Fairness Score' datatype='real' name='[BNNFairTrainingFairnessScore]' role='measure' type='quantitative' />
      <column caption='BNN Fair Training Max Difference' datatype='real' name='[BNNFairTrainingMaxDifference]' role='measure' type='quantitative' />
      <column caption='BNN Fair Training Mean Entropy' datatype='real' name='[BNNFairTrainingMeanEntropy]' role='measure' type='quantitative' />
      <column caption='BNN Fair Training Min Difference' datatype='real' name='[BNNFairTrainingMinDifference]' role='measure' type='quantitative' />
      <column caption='BNN Fair Training Precision' datatype='real' name='[BNNFairTrainingPrecision]' role='measure' type='quantitative' />
      <column caption='BNN Fair Training Recall' datatype='real' name='[BNNFairTrainingRecall]' role='measure' type='quantitative' />
      <column caption='BNN Fair Training Time' datatype='real' name='[BNNFairTrainingTime]' role='measure' type='quantitative' />
      <column caption='BNN Fairness Score' datatype='real' name='[BNNFairnessScore]' role='measure' type='quantitative' />
      <column caption='BNN Max Difference' datatype='real' name='[BNNMaxDifference]' role='measure' type='quantitative' />
      <column caption='BNN Mean Entropy' datatype='real' name='[BNNMeanEntropy]' role='measure' type='quantitative' />
      <column caption='BNN Min Difference' datatype='real' name='[BNNMinDifference]' role='measure' type='quantitative' />
      <column caption='BNN Precision' datatype='real' name='[BNNPrecision]' role='measure' type='quantitative' />
      <column caption='BNN Recall' datatype='real' name='[BNNRecall]' role='measure' type='quantitative' />
      <column caption='BNN Time' datatype='real' name='[BNNTime]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='mean_eps_0.15.csv' datatype='table' name='[__tableau_internal_object_id__].[mean_eps_0.15.csv_58FCEDAF50D64FDF8EB0DDED5B763985]' role='measure' type='quantitative' />
      <column-instance column='[BNNAccuracy]' derivation='Sum' name='[sum:BNNAccuracy:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BNNAvgDiff]' derivation='Sum' name='[sum:BNNAvgDiff:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BNNFairTrainingAccuracy]' derivation='Sum' name='[sum:BNNFairTrainingAccuracy:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BNNFairTrainingAvgDiff]' derivation='Sum' name='[sum:BNNFairTrainingAvgDiff:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BNNFairTrainingFairnessScore]' derivation='Sum' name='[sum:BNNFairTrainingFairnessScore:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BNNFairTrainingMeanEntropy]' derivation='Sum' name='[sum:BNNFairTrainingMeanEntropy:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BNNFairTrainingPrecision]' derivation='Sum' name='[sum:BNNFairTrainingPrecision:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BNNFairTrainingRecall]' derivation='Sum' name='[sum:BNNFairTrainingRecall:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BNNFairTrainingTime]' derivation='Sum' name='[sum:BNNFairTrainingTime:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BNNFairnessScore]' derivation='Sum' name='[sum:BNNFairnessScore:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BNNMeanEntropy]' derivation='Sum' name='[sum:BNNMeanEntropy:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BNNPrecision]' derivation='Sum' name='[sum:BNNPrecision:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BNNRecall]' derivation='Sum' name='[sum:BNNRecall:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BNNTime]' derivation='Sum' name='[sum:BNNTime:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairTrainingAvgDiff:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairTrainingFairnessScore:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairTrainingTime:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNAccuracy:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairTrainingAccuracy:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNPrecision:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNRecall:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairTrainingPrecision:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairTrainingRecall:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0frlki006il9ol10vv7fi1j3ln61]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNAvgDiff:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairnessScore:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNTime:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairTrainingMeanEntropy:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNMeanEntropy:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Ireland&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='mean_eps_0.15.csv' id='mean_eps_0.15.csv_58FCEDAF50D64FDF8EB0DDED5B763985'>
            <properties context=''>
              <relation connection='textscan.0z10pfq1576g1p1dcqfcc1t4xxte' name='mean_eps_0.15.csv' table='[mean_eps_0.15#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=' '>
                  <column datatype='string' name='F1' ordinal='0' />
                  <column datatype='real' name='Layer' ordinal='1' />
                  <column datatype='real' name='Neurons' ordinal='2' />
                  <column datatype='real' name='BNNAccuracy' ordinal='3' />
                  <column datatype='real' name='BNNFairTrainingAccuracy' ordinal='4' />
                  <column datatype='real' name='BNNMaxDifference' ordinal='5' />
                  <column datatype='real' name='BNNFairTrainingMaxDifference' ordinal='6' />
                  <column datatype='real' name='BNNMinDifference' ordinal='7' />
                  <column datatype='real' name='BNNFairTrainingMinDifference' ordinal='8' />
                  <column datatype='real' name='BNNFairnessScore' ordinal='9' />
                  <column datatype='real' name='BNNFairTrainingFairnessScore' ordinal='10' />
                  <column datatype='real' name='BNNAvgDiff' ordinal='11' />
                  <column datatype='real' name='BNNFairTrainingAvgDiff' ordinal='12' />
                  <column datatype='real' name='BNNRecall' ordinal='13' />
                  <column datatype='real' name='BNNFairTrainingRecall' ordinal='14' />
                  <column datatype='real' name='BNNPrecision' ordinal='15' />
                  <column datatype='real' name='BNNFairTrainingPrecision' ordinal='16' />
                  <column datatype='real' name='BNNMeanEntropy' ordinal='17' />
                  <column datatype='real' name='BNNFairTrainingMeanEntropy' ordinal='18' />
                  <column datatype='real' name='BNNTime' ordinal='19' />
                  <column datatype='real' name='BNNFairTrainingTime' ordinal='20' />
                  <column datatype='real' name='BNNAdversaryAccuracy' ordinal='21' />
                  <column datatype='real' name='BNNAdversaryMaxDifference' ordinal='22' />
                  <column datatype='real' name='BNNAdversaryMinDifference' ordinal='23' />
                  <column datatype='real' name='BNNAdversaryFairnessScore' ordinal='24' />
                  <column datatype='real' name='BNNAdversaryAvgDiff' ordinal='25' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Accuracy'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Accuracy for BNN and BNN with fair training, epsilon = 0.15</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='mean_eps_0.15' name='federated.0frlki006il9ol10vv7fi1j3ln61' />
          </datasources>
          <datasource-dependencies datasource='federated.0frlki006il9ol10vv7fi1j3ln61'>
            <column caption='BNN Accuracy' datatype='real' name='[BNNAccuracy]' role='measure' type='quantitative' />
            <column caption='BNN Fair Training Accuracy' datatype='real' name='[BNNFairTrainingAccuracy]' role='measure' type='quantitative' />
            <column caption='BNN Fair Training Fairness Score' datatype='real' name='[BNNFairTrainingFairnessScore]' role='measure' type='quantitative' />
            <column caption='BNN Fairness Score' datatype='real' name='[BNNFairnessScore]' role='measure' type='quantitative' />
            <column datatype='real' name='[Layer]' role='measure' type='quantitative' />
            <column datatype='real' name='[Neurons]' role='measure' type='quantitative' />
            <column-instance column='[Layer]' derivation='None' name='[none:Layer:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Neurons]' derivation='None' name='[none:Neurons:ok]' pivot='key' type='ordinal' />
            <column-instance column='[BNNAccuracy]' derivation='Sum' name='[sum:BNNAccuracy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNFairTrainingAccuracy]' derivation='Sum' name='[sum:BNNFairTrainingAccuracy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNFairTrainingFairnessScore]' derivation='Sum' name='[sum:BNNFairTrainingFairnessScore:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNFairnessScore]' derivation='Sum' name='[sum:BNNFairnessScore:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairnessScore:qk]' field-type='quantitative' max='1.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairnessScore:qk]' scope='rows' value='BNN' />
            <format attr='title' class='0' field='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairTrainingFairnessScore:qk]' scope='rows' value='BNN Fair Training' />
            <encoding attr='space' class='0' field='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNAccuracy:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' field='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairTrainingAccuracy:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='0' field='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNAccuracy:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairTrainingAccuracy:qk]' scope='rows' value='' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-color' scope='cols' value='#b07aa1' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='font-size' id='refline1' value='7' />
            <format attr='color' id='refline1' value='#4e79a7' />
            <format attr='stroke-color' id='refline1' value='#4e79a74b' />
            <format attr='font-size' id='refline0' value='7' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='color' id='refline0' value='#000000a7' />
            <format attr='color' id='refline2' value='#555555a7' />
            <format attr='font-size' id='refline2' value='7' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='fill-color' id='refline0' value='#e9ebe0' />
            <format attr='fill-color' id='refline2' value='#e9ebe0' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='cols' value='#e6e6e6' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-color' scope='cols' value='#c0c0c0' />
          </style-rule>
        </style>
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0frlki006il9ol10vv7fi1j3ln61].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNAccuracy:qk]' enable-instant-analytics='true' formula='min' id='refline0' label-type='value' paired-id='refline1' scope='per-pane' symmetric='false' value-column='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNAccuracy:qk]' z-order='1' />
            <reference-line axis-column='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNAccuracy:qk]' enable-instant-analytics='true' formula='max' id='refline1' label-type='value' paired-id='refline0' scope='per-pane' symmetric='false' value-column='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNAccuracy:qk]' z-order='2' />
            <reference-line axis-column='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairTrainingAccuracy:qk]' enable-instant-analytics='true' formula='min' id='refline2' label-type='value' paired-id='refline3' scope='per-pane' symmetric='false' value-column='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairTrainingAccuracy:qk]' z-order='3' />
            <reference-line axis-column='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairTrainingAccuracy:qk]' enable-instant-analytics='true' formula='max' id='refline3' label-type='value' paired-id='refline2' scope='per-pane' symmetric='false' value-column='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairTrainingAccuracy:qk]' z-order='4' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairnessScore:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0frlki006il9ol10vv7fi1j3ln61].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='dotted' />
              </style-rule>
            </style>
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairTrainingFairnessScore:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0frlki006il9ol10vv7fi1j3ln61].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='dotted' />
              </style-rule>
            </style>
          </pane>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNAccuracy:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0frlki006il9ol10vv7fi1j3ln61].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
          <pane id='9' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairTrainingAccuracy:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0frlki006il9ol10vv7fi1j3ln61].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairnessScore:qk] + ([federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNAccuracy:qk] + ([federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairTrainingFairnessScore:qk] + [federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairTrainingAccuracy:qk])))</rows>
        <cols>([federated.0frlki006il9ol10vv7fi1j3ln61].[none:Layer:ok] / [federated.0frlki006il9ol10vv7fi1j3ln61].[none:Neurons:ok])</cols>
      </table>
      <simple-id uuid='{6240A07A-AC48-42D9-B21A-9B1355CC4681}' />
    </worksheet>
    <worksheet name='Average Difference'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average Difference for BNN and BNN with fair training, epsilon = 0.15</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='mean_eps_0.15' name='federated.0frlki006il9ol10vv7fi1j3ln61' />
          </datasources>
          <datasource-dependencies datasource='federated.0frlki006il9ol10vv7fi1j3ln61'>
            <column caption='BNN Avg Diff' datatype='real' name='[BNNAvgDiff]' role='measure' type='quantitative' />
            <column caption='BNN Fair Training Avg Diff' datatype='real' name='[BNNFairTrainingAvgDiff]' role='measure' type='quantitative' />
            <column datatype='real' name='[Layer]' role='measure' type='quantitative' />
            <column datatype='real' name='[Neurons]' role='measure' type='quantitative' />
            <column-instance column='[Layer]' derivation='None' name='[none:Layer:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Neurons]' derivation='None' name='[none:Neurons:ok]' pivot='key' type='ordinal' />
            <column-instance column='[BNNAvgDiff]' derivation='Sum' name='[sum:BNNAvgDiff:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNFairTrainingAvgDiff]' derivation='Sum' name='[sum:BNNFairTrainingAvgDiff:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-color' scope='cols' value='#b07aa1' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <encoding attr='space' class='0' field='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairTrainingAvgDiff:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' field='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNAvgDiff:qk]' field-type='quantitative' max='1.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNAvgDiff:qk]' scope='rows' value='Average Difference' />
            <format attr='title' class='0' field='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairTrainingAvgDiff:qk]' scope='rows' value='' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='font-size' id='refline1' value='7' />
            <format attr='color' id='refline1' value='#4e79a7' />
            <format attr='stroke-color' id='refline1' value='#4e79a74b' />
            <format attr='stroke-color' id='refline0' value='#e157594b' />
            <format attr='color' id='refline0' value='#e15759' />
            <format attr='font-size' id='refline0' value='7' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='cols' value='#e6e6e6' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-color' scope='cols' value='#c0c0c0' />
          </style-rule>
        </style>
        <panes>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0frlki006il9ol10vv7fi1j3ln61].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNAvgDiff:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0frlki006il9ol10vv7fi1j3ln61].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
          <pane id='9' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairTrainingAvgDiff:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0frlki006il9ol10vv7fi1j3ln61].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNAvgDiff:qk] + [federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairTrainingAvgDiff:qk])</rows>
        <cols>([federated.0frlki006il9ol10vv7fi1j3ln61].[none:Layer:ok] / [federated.0frlki006il9ol10vv7fi1j3ln61].[none:Neurons:ok])</cols>
      </table>
      <simple-id uuid='{5BB87933-6B08-46A9-856D-AB817D2B75F3}' />
    </worksheet>
    <worksheet name='Entropy'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Mean Predictive Entropy for BNN and BNN with fair training, epsilon = 0.15</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='mean_eps_0.15' name='federated.0frlki006il9ol10vv7fi1j3ln61' />
          </datasources>
          <datasource-dependencies datasource='federated.0frlki006il9ol10vv7fi1j3ln61'>
            <column caption='BNN Fair Training Fairness Score' datatype='real' name='[BNNFairTrainingFairnessScore]' role='measure' type='quantitative' />
            <column caption='BNN Fair Training Mean Entropy' datatype='real' name='[BNNFairTrainingMeanEntropy]' role='measure' type='quantitative' />
            <column caption='BNN Fairness Score' datatype='real' name='[BNNFairnessScore]' role='measure' type='quantitative' />
            <column caption='BNN Mean Entropy' datatype='real' name='[BNNMeanEntropy]' role='measure' type='quantitative' />
            <column datatype='real' name='[Layer]' role='measure' type='quantitative' />
            <column datatype='real' name='[Neurons]' role='measure' type='quantitative' />
            <column-instance column='[Layer]' derivation='None' name='[none:Layer:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Neurons]' derivation='None' name='[none:Neurons:ok]' pivot='key' type='ordinal' />
            <column-instance column='[BNNFairTrainingFairnessScore]' derivation='Sum' name='[sum:BNNFairTrainingFairnessScore:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNFairTrainingMeanEntropy]' derivation='Sum' name='[sum:BNNFairTrainingMeanEntropy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNFairnessScore]' derivation='Sum' name='[sum:BNNFairnessScore:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNMeanEntropy]' derivation='Sum' name='[sum:BNNMeanEntropy:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairnessScore:qk]' field-type='quantitative' max='1.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairnessScore:qk]' scope='rows' value='BNN' />
            <format attr='title' class='0' field='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairTrainingFairnessScore:qk]' scope='rows' value='BNN Fair Training' />
            <encoding attr='space' class='0' field='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNMeanEntropy:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' field='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairTrainingMeanEntropy:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='0' field='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNMeanEntropy:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairTrainingMeanEntropy:qk]' scope='rows' value='' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-color' scope='cols' value='#b07aa1' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='font-size' id='refline1' value='7' />
            <format attr='color' id='refline1' value='#4e79a7' />
            <format attr='stroke-color' id='refline1' value='#4e79a74b' />
            <format attr='font-size' id='refline0' value='7' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='color' id='refline0' value='#000000a7' />
            <format attr='color' id='refline2' value='#555555a7' />
            <format attr='font-size' id='refline2' value='7' />
            <format attr='font-size' id='refline4' value='7' />
            <format attr='color' id='refline4' value='#555555a7' />
            <format attr='font-size' id='refline6' value='7' />
            <format attr='color' id='refline6' value='#555555a7' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='fill-color' id='refline0' value='#e9ebe0' />
            <format attr='fill-color' id='refline2' value='#e9ebe0' />
            <format attr='fill-color' id='refline4' value='#f5eddc' />
            <format attr='fill-color' id='refline6' value='#f5eddc' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='cols' value='#e6e6e6' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-color' scope='cols' value='#c0c0c0' />
          </style-rule>
        </style>
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0frlki006il9ol10vv7fi1j3ln61].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairTrainingMeanEntropy:qk]' enable-instant-analytics='true' formula='min' id='refline4' label-type='value' paired-id='refline5' scope='per-pane' symmetric='false' value-column='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairTrainingMeanEntropy:qk]' z-order='1' />
            <reference-line axis-column='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairTrainingMeanEntropy:qk]' enable-instant-analytics='true' formula='max' id='refline5' label-type='value' paired-id='refline4' scope='per-pane' symmetric='false' value-column='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairTrainingMeanEntropy:qk]' z-order='2' />
            <reference-line axis-column='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNMeanEntropy:qk]' enable-instant-analytics='true' formula='min' id='refline6' label-type='value' paired-id='refline7' scope='per-pane' symmetric='false' value-column='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNMeanEntropy:qk]' z-order='3' />
            <reference-line axis-column='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNMeanEntropy:qk]' enable-instant-analytics='true' formula='max' id='refline7' label-type='value' paired-id='refline6' scope='per-pane' symmetric='false' value-column='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNMeanEntropy:qk]' z-order='4' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairnessScore:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0frlki006il9ol10vv7fi1j3ln61].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='dotted' />
              </style-rule>
            </style>
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairTrainingFairnessScore:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0frlki006il9ol10vv7fi1j3ln61].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='dotted' />
              </style-rule>
            </style>
          </pane>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNMeanEntropy:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0frlki006il9ol10vv7fi1j3ln61].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
          <pane id='9' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairTrainingMeanEntropy:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0frlki006il9ol10vv7fi1j3ln61].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairnessScore:qk] + ([federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNMeanEntropy:qk] + ([federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairTrainingFairnessScore:qk] + [federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairTrainingMeanEntropy:qk])))</rows>
        <cols>([federated.0frlki006il9ol10vv7fi1j3ln61].[none:Layer:ok] / [federated.0frlki006il9ol10vv7fi1j3ln61].[none:Neurons:ok])</cols>
      </table>
      <simple-id uuid='{DB8F631B-3826-47D4-8D20-6BDD47B4B342}' />
    </worksheet>
    <worksheet name='Precision'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Precision for BNN and BNN with fair training, epsilon = 0.15</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='mean_eps_0.15' name='federated.0frlki006il9ol10vv7fi1j3ln61' />
          </datasources>
          <datasource-dependencies datasource='federated.0frlki006il9ol10vv7fi1j3ln61'>
            <column caption='BNN Fair Training Fairness Score' datatype='real' name='[BNNFairTrainingFairnessScore]' role='measure' type='quantitative' />
            <column caption='BNN Fair Training Precision' datatype='real' name='[BNNFairTrainingPrecision]' role='measure' type='quantitative' />
            <column caption='BNN Fairness Score' datatype='real' name='[BNNFairnessScore]' role='measure' type='quantitative' />
            <column caption='BNN Precision' datatype='real' name='[BNNPrecision]' role='measure' type='quantitative' />
            <column datatype='real' name='[Layer]' role='measure' type='quantitative' />
            <column datatype='real' name='[Neurons]' role='measure' type='quantitative' />
            <column-instance column='[Layer]' derivation='None' name='[none:Layer:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Neurons]' derivation='None' name='[none:Neurons:ok]' pivot='key' type='ordinal' />
            <column-instance column='[BNNFairTrainingFairnessScore]' derivation='Sum' name='[sum:BNNFairTrainingFairnessScore:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNFairTrainingPrecision]' derivation='Sum' name='[sum:BNNFairTrainingPrecision:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNFairnessScore]' derivation='Sum' name='[sum:BNNFairnessScore:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNPrecision]' derivation='Sum' name='[sum:BNNPrecision:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairnessScore:qk]' field-type='quantitative' max='1.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairnessScore:qk]' scope='rows' value='BNN' />
            <format attr='title' class='0' field='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairTrainingFairnessScore:qk]' scope='rows' value='BNN Fair Training' />
            <encoding attr='space' class='0' field='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairTrainingPrecision:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' field='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNPrecision:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='0' field='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNPrecision:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairTrainingPrecision:qk]' scope='rows' value='' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-color' scope='cols' value='#b07aa1' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='font-size' id='refline1' value='7' />
            <format attr='color' id='refline1' value='#4e79a7' />
            <format attr='stroke-color' id='refline1' value='#4e79a74b' />
            <format attr='font-size' id='refline0' value='7' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='color' id='refline0' value='#000000a7' />
            <format attr='color' id='refline2' value='#555555a7' />
            <format attr='font-size' id='refline2' value='7' />
            <format attr='font-size' id='refline4' value='7' />
            <format attr='color' id='refline4' value='#555555a7' />
            <format attr='color' id='refline6' value='#555555a7' />
            <format attr='font-size' id='refline6' value='7' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='fill-color' id='refline0' value='#e9ebe0' />
            <format attr='fill-color' id='refline2' value='#e9ebe0' />
            <format attr='fill-color' id='refline4' value='#e9ebe0' />
            <format attr='fill-color' id='refline6' value='#dfe7e8' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='cols' value='#e6e6e6' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-color' scope='cols' value='#c0c0c0' />
          </style-rule>
        </style>
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0frlki006il9ol10vv7fi1j3ln61].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNPrecision:qk]' enable-instant-analytics='true' formula='min' id='refline4' label-type='value' paired-id='refline5' scope='per-pane' symmetric='false' value-column='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNPrecision:qk]' z-order='1' />
            <reference-line axis-column='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNPrecision:qk]' enable-instant-analytics='true' formula='max' id='refline5' label-type='value' paired-id='refline4' scope='per-pane' symmetric='false' value-column='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNPrecision:qk]' z-order='2' />
            <reference-line axis-column='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairTrainingPrecision:qk]' enable-instant-analytics='true' formula='min' id='refline6' label-type='value' paired-id='refline7' scope='per-pane' symmetric='false' value-column='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairTrainingPrecision:qk]' z-order='3' />
            <reference-line axis-column='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairTrainingPrecision:qk]' enable-instant-analytics='true' formula='max' id='refline7' label-type='value' paired-id='refline6' scope='per-pane' symmetric='false' value-column='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairTrainingPrecision:qk]' z-order='4' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairnessScore:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0frlki006il9ol10vv7fi1j3ln61].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='dotted' />
              </style-rule>
            </style>
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairTrainingFairnessScore:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0frlki006il9ol10vv7fi1j3ln61].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='dotted' />
              </style-rule>
            </style>
          </pane>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairTrainingPrecision:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0frlki006il9ol10vv7fi1j3ln61].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
          <pane id='9' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNPrecision:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0frlki006il9ol10vv7fi1j3ln61].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairnessScore:qk] + ([federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNPrecision:qk] + ([federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairTrainingFairnessScore:qk] + [federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairTrainingPrecision:qk])))</rows>
        <cols>([federated.0frlki006il9ol10vv7fi1j3ln61].[none:Layer:ok] / [federated.0frlki006il9ol10vv7fi1j3ln61].[none:Neurons:ok])</cols>
      </table>
      <simple-id uuid='{60461A60-4D41-45D4-9010-19318DFFC8BA}' />
    </worksheet>
    <worksheet name='Recall'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Recall for BNN and BNN with fair training, epsilon = 0.15</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='mean_eps_0.15' name='federated.0frlki006il9ol10vv7fi1j3ln61' />
          </datasources>
          <datasource-dependencies datasource='federated.0frlki006il9ol10vv7fi1j3ln61'>
            <column caption='BNN Fair Training Fairness Score' datatype='real' name='[BNNFairTrainingFairnessScore]' role='measure' type='quantitative' />
            <column caption='BNN Fair Training Recall' datatype='real' name='[BNNFairTrainingRecall]' role='measure' type='quantitative' />
            <column caption='BNN Fairness Score' datatype='real' name='[BNNFairnessScore]' role='measure' type='quantitative' />
            <column caption='BNN Recall' datatype='real' name='[BNNRecall]' role='measure' type='quantitative' />
            <column datatype='real' name='[Layer]' role='measure' type='quantitative' />
            <column datatype='real' name='[Neurons]' role='measure' type='quantitative' />
            <column-instance column='[Layer]' derivation='None' name='[none:Layer:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Neurons]' derivation='None' name='[none:Neurons:ok]' pivot='key' type='ordinal' />
            <column-instance column='[BNNFairTrainingFairnessScore]' derivation='Sum' name='[sum:BNNFairTrainingFairnessScore:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNFairTrainingRecall]' derivation='Sum' name='[sum:BNNFairTrainingRecall:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNFairnessScore]' derivation='Sum' name='[sum:BNNFairnessScore:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNRecall]' derivation='Sum' name='[sum:BNNRecall:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairnessScore:qk]' field-type='quantitative' max='1.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairnessScore:qk]' scope='rows' value='BNN' />
            <format attr='title' class='0' field='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairTrainingFairnessScore:qk]' scope='rows' value='BNN Fair Training' />
            <encoding attr='space' class='0' field='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNRecall:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' field='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairTrainingRecall:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-color' scope='cols' value='#b07aa1' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='title' class='0' field='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNRecall:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairTrainingRecall:qk]' scope='rows' value='' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='font-size' id='refline1' value='7' />
            <format attr='color' id='refline1' value='#4e79a7' />
            <format attr='stroke-color' id='refline1' value='#4e79a74b' />
            <format attr='font-size' id='refline0' value='7' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='color' id='refline0' value='#000000a7' />
            <format attr='color' id='refline2' value='#555555a7' />
            <format attr='font-size' id='refline2' value='7' />
            <format attr='font-size' id='refline4' value='7' />
            <format attr='color' id='refline4' value='#555555a7' />
            <format attr='font-size' id='refline6' value='7' />
            <format attr='color' id='refline6' value='#555555a7' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='fill-color' id='refline0' value='#e9ebe0' />
            <format attr='fill-color' id='refline2' value='#e9ebe0' />
            <format attr='fill-color' id='refline4' value='#e9ebe0' />
            <format attr='fill-color' id='refline6' value='#dfe7e8' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='cols' value='#e6e6e6' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-color' scope='cols' value='#c0c0c0' />
          </style-rule>
        </style>
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0frlki006il9ol10vv7fi1j3ln61].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNRecall:qk]' enable-instant-analytics='true' formula='min' id='refline4' label-type='value' paired-id='refline5' scope='per-pane' symmetric='false' value-column='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNRecall:qk]' z-order='1' />
            <reference-line axis-column='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNRecall:qk]' enable-instant-analytics='true' formula='max' id='refline5' label-type='value' paired-id='refline4' scope='per-pane' symmetric='false' value-column='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNRecall:qk]' z-order='2' />
            <reference-line axis-column='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairTrainingRecall:qk]' enable-instant-analytics='true' formula='min' id='refline6' label-type='value' paired-id='refline7' scope='per-pane' symmetric='false' value-column='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairTrainingRecall:qk]' z-order='3' />
            <reference-line axis-column='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairTrainingRecall:qk]' enable-instant-analytics='true' formula='max' id='refline7' label-type='value' paired-id='refline6' scope='per-pane' symmetric='false' value-column='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairTrainingRecall:qk]' z-order='4' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairnessScore:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0frlki006il9ol10vv7fi1j3ln61].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='dotted' />
              </style-rule>
            </style>
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairTrainingFairnessScore:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0frlki006il9ol10vv7fi1j3ln61].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='dotted' />
              </style-rule>
            </style>
          </pane>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNRecall:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0frlki006il9ol10vv7fi1j3ln61].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
          <pane id='9' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairTrainingRecall:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0frlki006il9ol10vv7fi1j3ln61].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairnessScore:qk] + ([federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNRecall:qk] + ([federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairTrainingFairnessScore:qk] + [federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairTrainingRecall:qk])))</rows>
        <cols>([federated.0frlki006il9ol10vv7fi1j3ln61].[none:Layer:ok] / [federated.0frlki006il9ol10vv7fi1j3ln61].[none:Neurons:ok])</cols>
      </table>
      <simple-id uuid='{85BA0CF3-7643-47A2-B4B5-B7FD78E2EC46}' />
    </worksheet>
    <worksheet name='Threshold-Fairness'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Threshold-Fairness Score for BNN and BNN with fair training, epsilon = 0.15</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='mean_eps_0.15' name='federated.0frlki006il9ol10vv7fi1j3ln61' />
          </datasources>
          <datasource-dependencies datasource='federated.0frlki006il9ol10vv7fi1j3ln61'>
            <column caption='BNN Fair Training Fairness Score' datatype='real' name='[BNNFairTrainingFairnessScore]' role='measure' type='quantitative' />
            <column caption='BNN Fairness Score' datatype='real' name='[BNNFairnessScore]' role='measure' type='quantitative' />
            <column datatype='real' name='[Layer]' role='measure' type='quantitative' />
            <column datatype='real' name='[Neurons]' role='measure' type='quantitative' />
            <column-instance column='[Layer]' derivation='None' name='[none:Layer:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Neurons]' derivation='None' name='[none:Neurons:ok]' pivot='key' type='ordinal' />
            <column-instance column='[BNNFairTrainingFairnessScore]' derivation='Sum' name='[sum:BNNFairTrainingFairnessScore:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNFairnessScore]' derivation='Sum' name='[sum:BNNFairnessScore:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairTrainingFairnessScore:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' field='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairnessScore:qk]' field-type='quantitative' max='1.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairnessScore:qk]' scope='rows' value='Threshold-Fairness Score' />
            <format attr='title' class='0' field='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairTrainingFairnessScore:qk]' scope='rows' value='' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-color' scope='cols' value='#b07aa1' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='font-size' id='refline1' value='7' />
            <format attr='color' id='refline1' value='#4e79a7' />
            <format attr='stroke-color' id='refline1' value='#4e79a74b' />
            <format attr='stroke-color' id='refline0' value='#e157594b' />
            <format attr='color' id='refline0' value='#e15759' />
            <format attr='font-size' id='refline0' value='7' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='cols' value='#e6e6e6' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-color' scope='cols' value='#c0c0c0' />
          </style-rule>
        </style>
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0frlki006il9ol10vv7fi1j3ln61].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairnessScore:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='value' probability='95' scope='per-pane' value-column='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairnessScore:qk]' z-order='1' />
            <reference-line axis-column='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairTrainingFairnessScore:qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='value' probability='95' scope='per-pane' value-column='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairTrainingFairnessScore:qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairnessScore:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0frlki006il9ol10vv7fi1j3ln61].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairTrainingFairnessScore:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0frlki006il9ol10vv7fi1j3ln61].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairnessScore:qk] + [federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairTrainingFairnessScore:qk])</rows>
        <cols>([federated.0frlki006il9ol10vv7fi1j3ln61].[none:Layer:ok] / [federated.0frlki006il9ol10vv7fi1j3ln61].[none:Neurons:ok])</cols>
      </table>
      <simple-id uuid='{D0701DF7-C36F-4B9A-BC56-9C2C9C8B774E}' />
    </worksheet>
    <worksheet name='Time'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Training Time for BNN and BNN with fair training, epsilon = 0.15
</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='mean_eps_0.15' name='federated.0frlki006il9ol10vv7fi1j3ln61' />
          </datasources>
          <datasource-dependencies datasource='federated.0frlki006il9ol10vv7fi1j3ln61'>
            <column caption='BNN Fair Training Time' datatype='real' name='[BNNFairTrainingTime]' role='measure' type='quantitative' />
            <column caption='BNN Time' datatype='real' name='[BNNTime]' role='measure' type='quantitative' />
            <column datatype='real' name='[Layer]' role='measure' type='quantitative' />
            <column datatype='real' name='[Neurons]' role='measure' type='quantitative' />
            <column-instance column='[Layer]' derivation='None' name='[none:Layer:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Neurons]' derivation='None' name='[none:Neurons:ok]' pivot='key' type='ordinal' />
            <column-instance column='[BNNFairTrainingTime]' derivation='Sum' name='[sum:BNNFairTrainingTime:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNTime]' derivation='Sum' name='[sum:BNNTime:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairTrainingTime:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' field='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNTime:qk]' field-type='quantitative' max='700.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNTime:qk]' scope='rows' value='Time (s) ' />
            <format attr='title' class='0' field='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairTrainingTime:qk]' scope='rows' value='' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-color' scope='cols' value='#b07aa1' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0frlki006il9ol10vv7fi1j3ln61].[none:Neurons:ok]' value='35' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='font-size' id='refline1' value='7' />
            <format attr='color' id='refline1' value='#4e79a7' />
            <format attr='stroke-color' id='refline1' value='#4e79a74b' />
            <format attr='stroke-color' id='refline0' value='#e157594b' />
            <format attr='color' id='refline0' value='#e15759' />
            <format attr='font-size' id='refline0' value='7' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='cols' value='#e6e6e6' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-color' scope='cols' value='#c0c0c0' />
          </style-rule>
        </style>
        <panes>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0frlki006il9ol10vv7fi1j3ln61].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNTime:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='value' probability='95' scope='per-pane' value-column='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNTime:qk]' z-order='1' />
            <reference-line axis-column='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairTrainingTime:qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='value' probability='95' scope='per-pane' value-column='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairTrainingTime:qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNTime:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0frlki006il9ol10vv7fi1j3ln61].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
          <pane id='9' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairTrainingTime:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0frlki006il9ol10vv7fi1j3ln61].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNTime:qk] + [federated.0frlki006il9ol10vv7fi1j3ln61].[sum:BNNFairTrainingTime:qk])</rows>
        <cols>([federated.0frlki006il9ol10vv7fi1j3ln61].[none:Layer:ok] / [federated.0frlki006il9ol10vv7fi1j3ln61].[none:Neurons:ok])</cols>
      </table>
      <simple-id uuid='{5D32B19A-A924-4336-AE0F-8B441B078CBC}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' name='Time'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
          </strip>
          <strip size='100'>
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='8' param='[federated.0frlki006il9ol10vv7fi1j3ln61].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0frlki006il9ol10vv7fi1j3ln61].[none:Layer:ok]</field>
            <field>[federated.0frlki006il9ol10vv7fi1j3ln61].[none:Neurons:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D07568AF-F9F2-44BD-9A77-92B719D55612}' />
    </window>
    <window class='worksheet' name='Threshold-Fairness'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='6' param='[federated.0frlki006il9ol10vv7fi1j3ln61].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0frlki006il9ol10vv7fi1j3ln61].[none:Layer:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7D34C16C-9135-45C7-83D2-E8455035D1CD}' />
    </window>
    <window class='worksheet' name='Accuracy'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='6' param='[federated.0frlki006il9ol10vv7fi1j3ln61].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0frlki006il9ol10vv7fi1j3ln61].[none:Layer:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FD3FBE4D-374F-4C08-BFB0-0B76B9E0236E}' />
    </window>
    <window class='worksheet' name='Entropy'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='6' param='[federated.0frlki006il9ol10vv7fi1j3ln61].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0frlki006il9ol10vv7fi1j3ln61].[none:Layer:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8B017D80-E7F4-4895-9D85-B5CB66849D79}' />
    </window>
    <window class='worksheet' name='Recall'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='6' param='[federated.0frlki006il9ol10vv7fi1j3ln61].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0frlki006il9ol10vv7fi1j3ln61].[none:Layer:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B1122598-854E-47ED-8533-D9F3CF975F5E}' />
    </window>
    <window class='worksheet' name='Precision'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='6' param='[federated.0frlki006il9ol10vv7fi1j3ln61].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0frlki006il9ol10vv7fi1j3ln61].[none:Layer:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E73A952D-44DE-42BB-B887-67D98BD56B54}' />
    </window>
    <window class='worksheet' maximized='true' name='Average Difference'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='8' param='[federated.0frlki006il9ol10vv7fi1j3ln61].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0frlki006il9ol10vv7fi1j3ln61].[none:Layer:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{22E067ED-8BDB-4660-95D2-C0377061B47D}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Accuracy' width='192'>
      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
      /w/YPpTuH3MwFwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Average Difference' width='192'>
      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
      fEOL+EY4AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Entropy' width='192'>
      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
      8z8KpwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Precision' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Recall' width='192'>
      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
      ixBDAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Threshold-Fairness' width='192'>
      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
      BP7WZ87y/wPEcymdrRJnwAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Time' width='192'>
      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
      gpXD/wdgL7L85RKjKgAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
