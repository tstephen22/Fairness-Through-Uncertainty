>>Using  32561  data points
Running  Adversary Regularisation ------------------------------------------
> Testing epsilon= 0.0

  0%|          | 0/5 [00:00<?, ?it/s]2024-02-20 18:50:41.548175: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory
2024-02-20 18:50:41.548226: W tensorflow/compiler/xla/stream_executor/cuda/cuda_driver.cc:265] failed call to cuInit: UNKNOWN ERROR (303)
2024-02-20 18:50:41.548263: I tensorflow/compiler/xla/stream_executor/cuda/cuda_diagnostics.cc:156] kernel driver does not appear to be running on this host (tstephen): /proc/driver/nvidia/version does not exist
2024-02-20 18:50:41.548646: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
 20%|██        | 1/5 [06:41<26:47, 401.94s/it]Network : L 1 N 64
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 64) 0.1
(64, 2) 0.125
deepbayes: Using implicit prior
(100, 64) 0.1
(64, 2) 0.125
Epoch 1, loss: 0.646, acc: 0.670, val_loss: 0.533, val_acc: 0.759
Epoch 2, loss: 0.467, acc: 0.756, val_loss: 0.436, val_acc: 0.769
Epoch 3, loss: 0.429, acc: 0.781, val_loss: 0.403, val_acc: 0.815
Epoch 4, loss: 0.409, acc: 0.791, val_loss: 0.380, val_acc: 0.826
Epoch 5, loss: 0.396, acc: 0.819, val_loss: 0.372, val_acc: 0.829
Epoch 6, loss: 0.388, acc: 0.818, val_loss: 0.372, val_acc: 0.830
Epoch 7, loss: 0.384, acc: 0.820, val_loss: 0.374, val_acc: 0.823
Epoch 8, loss: 0.374, acc: 0.823, val_loss: 0.366, val_acc: 0.823
Epoch 9, loss: 0.371, acc: 0.829, val_loss: 0.369, val_acc: 0.826
Epoch 10, loss: 0.366, acc: 0.829, val_loss: 0.359, val_acc: 0.823
Epoch 11, loss: 0.364, acc: 0.830, val_loss: 0.356, val_acc: 0.827
Epoch 12, loss: 0.360, acc: 0.829, val_loss: 0.350, val_acc: 0.831
Epoch 13, loss: 0.358, acc: 0.833, val_loss: 0.348, val_acc: 0.832
Epoch 14, loss: 0.355, acc: 0.834, val_loss: 0.345, val_acc: 0.834
Epoch 15, loss: 0.353, acc: 0.834, val_loss: 0.343, val_acc: 0.833
Epoch 16, loss: 0.351, acc: 0.836, val_loss: 0.341, val_acc: 0.835
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.8347919545524336 

139 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.9786580684784277 

Threshold adjusted fairness score :  0.7931621074676514
Maximum Difference: 0.20683789
Minimum Difference: 0.0
Average (Mean) Difference: 0.018922681 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 64) 0.1
(64, 2) 0.125
deepbayes: Using implicit prior
(100, 64) 0.1
(64, 2) 0.125
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.604, acc: 0.738, val_loss: 0.619, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.581, acc: 0.759, val_loss: 0.581, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.567, acc: 0.759, val_loss: 0.643, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.567, acc: 0.759, val_loss: 0.574, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.559, acc: 0.759, val_loss: 0.565, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.555, acc: 0.759, val_loss: 0.559, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.558, acc: 0.759, val_loss: 0.565, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.555, acc: 0.759, val_loss: 0.556, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.554, acc: 0.759, val_loss: 0.557, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.554, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.553, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.554, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9768773317337036
Maximum Difference: 0.023122668
Minimum Difference: 0.0
Average (Mean) Difference: 0.0003244511 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 2 N 64
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 64) 0.1
(64, 64) 0.125
(64, 2) 0.125
deepbayes: Using implicit prior
(100, 64) 0.1
(64, 64) 0.125
(64, 2) 0.125
Epoch 1, loss: 0.699, acc: 0.622, val_loss: 0.620, val_acc: 0.759
Epoch 2, loss: 0.546, acc: 0.759, val_loss: 0.526, val_acc: 0.759
Epoch 3, loss: 0.505, acc: 0.759, val_loss: 0.472, val_acc: 0.759
Epoch 4, loss: 0.436, acc: 0.768, val_loss: 0.417, val_acc: 0.787
Epoch 5, loss: 0.422, acc: 0.781, val_loss: 0.417, val_acc: 0.815
Epoch 6, loss: 0.402, acc: 0.805, val_loss: 0.379, val_acc: 0.823
Epoch 7, loss: 0.388, acc: 0.822, val_loss: 0.384, val_acc: 0.827
Epoch 8, loss: 0.378, acc: 0.825, val_loss: 0.365, val_acc: 0.825
Epoch 9, loss: 0.370, acc: 0.828, val_loss: 0.356, val_acc: 0.827
Epoch 10, loss: 0.365, acc: 0.829, val_loss: 0.355, val_acc: 0.831
Epoch 11, loss: 0.364, acc: 0.832, val_loss: 0.352, val_acc: 0.832
Epoch 12, loss: 0.360, acc: 0.831, val_loss: 0.349, val_acc: 0.836
Epoch 13, loss: 0.357, acc: 0.833, val_loss: 0.346, val_acc: 0.838
Epoch 14, loss: 0.353, acc: 0.835, val_loss: 0.344, val_acc: 0.839
Epoch 15, loss: 0.350, acc: 0.837, val_loss: 0.339, val_acc: 0.837
Epoch 16, loss: 0.347, acc: 0.838, val_loss: 0.338, val_acc: 0.838
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.8377091969906341 

582 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.9106402579456472 

Threshold adjusted fairness score :  0.7829512655735016
Maximum Difference: 0.21704873
Minimum Difference: 0.0
Average (Mean) Difference: 0.042080615 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 64) 0.1
(64, 64) 0.125
(64, 2) 0.125
deepbayes: Using implicit prior
(100, 64) 0.1
(64, 64) 0.125
(64, 2) 0.125
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.607, acc: 0.725, val_loss: 0.637, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.575, acc: 0.759, val_loss: 0.569, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.568, acc: 0.759, val_loss: 0.557, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.558, acc: 0.759, val_loss: 0.572, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.564, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.554, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.558, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.553, acc: 0.759, val_loss: 0.556, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.556, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.554, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.553, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
 40%|████      | 2/5 [14:02<21:14, 424.72s/it] 60%|██████    | 3/5 [22:22<15:18, 459.04s/it]Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9869468212127686
Maximum Difference: 0.013053179
Minimum Difference: 0.0
Average (Mean) Difference: 0.00050287443 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 3 N 64
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 64) 0.1
(64, 64) 0.125
(64, 64) 0.125
(64, 2) 0.125
deepbayes: Using implicit prior
(100, 64) 0.1
(64, 64) 0.125
(64, 64) 0.125
(64, 2) 0.125
Epoch 1, loss: 0.580, acc: 0.756, val_loss: 0.548, val_acc: 0.759
Epoch 2, loss: 0.486, acc: 0.759, val_loss: 0.459, val_acc: 0.759
Epoch 3, loss: 0.434, acc: 0.771, val_loss: 0.421, val_acc: 0.783
Epoch 4, loss: 0.422, acc: 0.784, val_loss: 0.403, val_acc: 0.811
Epoch 5, loss: 0.397, acc: 0.817, val_loss: 0.389, val_acc: 0.819
Epoch 6, loss: 0.389, acc: 0.817, val_loss: 0.377, val_acc: 0.823
Epoch 7, loss: 0.378, acc: 0.825, val_loss: 0.371, val_acc: 0.825
Epoch 8, loss: 0.373, acc: 0.827, val_loss: 0.361, val_acc: 0.828
Epoch 9, loss: 0.371, acc: 0.829, val_loss: 0.364, val_acc: 0.827
Epoch 10, loss: 0.364, acc: 0.829, val_loss: 0.354, val_acc: 0.829
Epoch 11, loss: 0.361, acc: 0.830, val_loss: 0.355, val_acc: 0.831
Epoch 12, loss: 0.359, acc: 0.833, val_loss: 0.348, val_acc: 0.834
Epoch 13, loss: 0.354, acc: 0.834, val_loss: 0.346, val_acc: 0.834
Epoch 14, loss: 0.351, acc: 0.836, val_loss: 0.341, val_acc: 0.837
Epoch 15, loss: 0.348, acc: 0.837, val_loss: 0.339, val_acc: 0.839
Epoch 16, loss: 0.347, acc: 0.838, val_loss: 0.338, val_acc: 0.839
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.8393981268232765 

397 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.9390449869491786 

Threshold adjusted fairness score :  0.8102168440818787
Maximum Difference: 0.18978316
Minimum Difference: 0.0
Average (Mean) Difference: 0.029947031 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 64) 0.1
(64, 64) 0.125
(64, 64) 0.125
(64, 2) 0.125
deepbayes: Using implicit prior
(100, 64) 0.1
(64, 64) 0.125
(64, 64) 0.125
(64, 2) 0.125
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.626, acc: 0.703, val_loss: 0.654, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.566, acc: 0.759, val_loss: 0.564, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.557, acc: 0.759, val_loss: 0.559, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.559, acc: 0.759, val_loss: 0.558, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.553, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.555, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.554, acc: 0.759, val_loss: 0.556, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.554, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.553, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.553, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.552, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9931766390800476
Maximum Difference: 0.006823361
Minimum Difference: 0.0
Average (Mean) Difference: 0.00038895133 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 4 N 64
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 64) 0.1
(64, 64) 0.125
(64, 64) 0.125
(64, 64) 0.125
(64, 2) 0.125
deepbayes: Using implicit prior
(100, 64) 0.1
(64, 64) 0.125
(64, 64) 0.125
(64, 64) 0.125
(64, 2) 0.125
Epoch 1, loss: 0.576, acc: 0.759, val_loss: 0.553, val_acc: 0.759
Epoch 2, loss: 0.505, acc: 0.759, val_loss: 0.474, val_acc: 0.759
Epoch 3, loss: 0.447, acc: 0.759, val_loss: 0.435, val_acc: 0.759
Epoch 4, loss: 0.441, acc: 0.729, val_loss: 0.433, val_acc: 0.715
Epoch 5, loss: 0.424, acc: 0.765, val_loss: 0.409, val_acc: 0.759
Epoch 6, loss: 0.412, acc: 0.801, val_loss: 0.395, val_acc: 0.814
Epoch 7, loss: 0.398, acc: 0.809, val_loss: 0.387, val_acc: 0.811
Epoch 8, loss: 0.390, acc: 0.811, val_loss: 0.385, val_acc: 0.827
Epoch 9, loss: 0.380, acc: 0.825, val_loss: 0.366, val_acc: 0.829
Epoch 10, loss: 0.371, acc: 0.828, val_loss: 0.362, val_acc: 0.829
Epoch 11, loss: 0.368, acc: 0.828, val_loss: 0.360, val_acc: 0.829
Epoch 12, loss: 0.364, acc: 0.831, val_loss: 0.355, val_acc: 0.828
Epoch 13, loss: 0.359, acc: 0.832, val_loss: 0.351, val_acc: 0.832
Epoch 14, loss: 0.355, acc: 0.833, val_loss: 0.349, val_acc: 0.834
Epoch 15, loss: 0.355, acc: 0.834, val_loss: 0.346, val_acc: 0.832
Epoch 16, loss: 0.350, acc: 0.835, val_loss: 0.344, val_acc: 0.833
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.8327959465684016 

157 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.975894365115922 

Threshold adjusted fairness score :  0.7722221612930298
Maximum Difference: 0.22777784
Minimum Difference: 0.0
Average (Mean) Difference: 0.018972665 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 64) 0.1
(64, 64) 0.125
(64, 64) 0.125
(64, 64) 0.125
(64, 2) 0.125
deepbayes: Using implicit prior
(100, 64) 0.1
(64, 64) 0.125
(64, 64) 0.125
(64, 64) 0.125
(64, 2) 0.125
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.618, acc: 0.674, val_loss: 0.643, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.584, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.556, acc: 0.759, val_loss: 0.556, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.553, acc: 0.759, val_loss: 0.557, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.555, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.553, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.554, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.553, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.553, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.553, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.552, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
 80%|████████  | 4/5 [31:58<08:25, 505.25s/it]100%|██████████| 5/5 [42:43<00:00, 555.79s/it]100%|██████████| 5/5 [42:43<00:00, 512.80s/it]
Epoch 14, loss: 0.553, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.552, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.552, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9932301044464111
Maximum Difference: 0.0067698956
Minimum Difference: 0.0
Average (Mean) Difference: 0.0014105814 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 5 N 64
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 64) 0.1
(64, 64) 0.125
(64, 64) 0.125
(64, 64) 0.125
(64, 64) 0.125
(64, 2) 0.125
deepbayes: Using implicit prior
(100, 64) 0.1
(64, 64) 0.125
(64, 64) 0.125
(64, 64) 0.125
(64, 64) 0.125
(64, 2) 0.125
Epoch 1, loss: 0.601, acc: 0.754, val_loss: 0.562, val_acc: 0.759
Epoch 2, loss: 0.578, acc: 0.759, val_loss: 0.545, val_acc: 0.759
Epoch 3, loss: 0.543, acc: 0.759, val_loss: 0.540, val_acc: 0.759
Epoch 4, loss: 0.499, acc: 0.759, val_loss: 0.474, val_acc: 0.759
Epoch 5, loss: 0.440, acc: 0.753, val_loss: 0.441, val_acc: 0.701
Epoch 6, loss: 0.447, acc: 0.715, val_loss: 0.428, val_acc: 0.760
Epoch 7, loss: 0.430, acc: 0.760, val_loss: 0.427, val_acc: 0.759
Epoch 8, loss: 0.427, acc: 0.759, val_loss: 0.414, val_acc: 0.759
Epoch 9, loss: 0.407, acc: 0.781, val_loss: 0.390, val_acc: 0.816
Epoch 10, loss: 0.388, acc: 0.819, val_loss: 0.379, val_acc: 0.822
Epoch 11, loss: 0.381, acc: 0.824, val_loss: 0.371, val_acc: 0.825
Epoch 12, loss: 0.375, acc: 0.827, val_loss: 0.360, val_acc: 0.831
Epoch 13, loss: 0.369, acc: 0.827, val_loss: 0.359, val_acc: 0.830
Epoch 14, loss: 0.366, acc: 0.829, val_loss: 0.359, val_acc: 0.829
Epoch 15, loss: 0.363, acc: 0.831, val_loss: 0.356, val_acc: 0.829
Epoch 16, loss: 0.359, acc: 0.833, val_loss: 0.352, val_acc: 0.831
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.8309534776600644 

141 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.9783509903270382 

Threshold adjusted fairness score :  0.7145971655845642
Maximum Difference: 0.28540283
Minimum Difference: 0.0
Average (Mean) Difference: 0.017847154 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 64) 0.1
(64, 64) 0.125
(64, 64) 0.125
(64, 64) 0.125
(64, 64) 0.125
(64, 2) 0.125
deepbayes: Using implicit prior
(100, 64) 0.1
(64, 64) 0.125
(64, 64) 0.125
(64, 64) 0.125
(64, 64) 0.125
(64, 2) 0.125
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.607, acc: 0.734, val_loss: 0.612, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.578, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.558, acc: 0.759, val_loss: 0.557, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.554, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.557, acc: 0.759, val_loss: 0.557, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.554, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.554, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.997780442237854
Maximum Difference: 0.0022195578
Minimum Difference: 0.0
Average (Mean) Difference: 0.00015062583 

>> Writing out to dataframe ...
> Done.
Trial complete!

  0%|          | 0/5 [00:00<?, ?it/s] 20%|██        | 1/5 [05:52<23:29, 352.27s/it]Network : L 1 N 32
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 32) 0.1
(32, 2) 0.1767766952966369
deepbayes: Using implicit prior
(100, 32) 0.1
(32, 2) 0.1767766952966369
Epoch 1, loss: 0.642, acc: 0.622, val_loss: 0.590, val_acc: 0.759
Epoch 2, loss: 0.534, acc: 0.761, val_loss: 0.449, val_acc: 0.796
Epoch 3, loss: 0.458, acc: 0.789, val_loss: 0.415, val_acc: 0.802
Epoch 4, loss: 0.421, acc: 0.782, val_loss: 0.386, val_acc: 0.825
Epoch 5, loss: 0.407, acc: 0.799, val_loss: 0.383, val_acc: 0.826
Epoch 6, loss: 0.401, acc: 0.820, val_loss: 0.379, val_acc: 0.828
Epoch 7, loss: 0.384, acc: 0.819, val_loss: 0.371, val_acc: 0.826
Epoch 8, loss: 0.382, acc: 0.820, val_loss: 0.379, val_acc: 0.820
Epoch 9, loss: 0.377, acc: 0.823, val_loss: 0.370, val_acc: 0.827
Epoch 10, loss: 0.372, acc: 0.827, val_loss: 0.369, val_acc: 0.824
Epoch 11, loss: 0.366, acc: 0.827, val_loss: 0.362, val_acc: 0.830
Epoch 12, loss: 0.365, acc: 0.830, val_loss: 0.363, val_acc: 0.826
Epoch 13, loss: 0.361, acc: 0.829, val_loss: 0.357, val_acc: 0.828
Epoch 14, loss: 0.360, acc: 0.832, val_loss: 0.357, val_acc: 0.828
Epoch 15, loss: 0.356, acc: 0.832, val_loss: 0.351, val_acc: 0.829
Epoch 16, loss: 0.355, acc: 0.834, val_loss: 0.351, val_acc: 0.830
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.8301857822815907 

163 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.9749731306617534 

Threshold adjusted fairness score :  0.8440285921096802
Maximum Difference: 0.15597141
Minimum Difference: 0.0
Average (Mean) Difference: 0.014485067 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 32) 0.1
(32, 2) 0.1767766952966369
deepbayes: Using implicit prior
(100, 32) 0.1
(32, 2) 0.1767766952966369
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.584, acc: 0.756, val_loss: 0.596, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.570, acc: 0.759, val_loss: 0.568, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.568, acc: 0.759, val_loss: 0.571, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.562, acc: 0.759, val_loss: 0.593, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.556, acc: 0.759, val_loss: 0.559, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.558, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.554, acc: 0.759, val_loss: 0.550, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.557, acc: 0.759, val_loss: 0.550, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.554, acc: 0.759, val_loss: 0.542, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.555, acc: 0.759, val_loss: 0.542, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.554, acc: 0.759, val_loss: 0.547, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.553, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.552, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9679030776023865
Maximum Difference: 0.032096922
Minimum Difference: 0.0
Average (Mean) Difference: 0.0012260528 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 2 N 32
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 32) 0.1
(32, 32) 0.1767766952966369
(32, 2) 0.1767766952966369
deepbayes: Using implicit prior
(100, 32) 0.1
(32, 32) 0.1767766952966369
(32, 2) 0.1767766952966369
Epoch 1, loss: 0.569, acc: 0.756, val_loss: 0.498, val_acc: 0.759
Epoch 2, loss: 0.442, acc: 0.784, val_loss: 0.400, val_acc: 0.804
Epoch 3, loss: 0.414, acc: 0.804, val_loss: 0.416, val_acc: 0.784
Epoch 4, loss: 0.401, acc: 0.818, val_loss: 0.375, val_acc: 0.824
Epoch 5, loss: 0.390, acc: 0.819, val_loss: 0.392, val_acc: 0.816
Epoch 6, loss: 0.380, acc: 0.822, val_loss: 0.364, val_acc: 0.824
Epoch 7, loss: 0.369, acc: 0.831, val_loss: 0.361, val_acc: 0.826
Epoch 8, loss: 0.368, acc: 0.829, val_loss: 0.363, val_acc: 0.826
Epoch 9, loss: 0.364, acc: 0.832, val_loss: 0.358, val_acc: 0.831
Epoch 10, loss: 0.360, acc: 0.832, val_loss: 0.351, val_acc: 0.831
Epoch 11, loss: 0.356, acc: 0.833, val_loss: 0.350, val_acc: 0.834
Epoch 12, loss: 0.353, acc: 0.835, val_loss: 0.346, val_acc: 0.835
Epoch 13, loss: 0.351, acc: 0.837, val_loss: 0.344, val_acc: 0.835
Epoch 14, loss: 0.349, acc: 0.838, val_loss: 0.343, val_acc: 0.836
Epoch 15, loss: 0.346, acc: 0.837, val_loss: 0.339, val_acc: 0.837
Epoch 16, loss: 0.345, acc: 0.839, val_loss: 0.338, val_acc: 0.838
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.8378627360663289 

378 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.9419622293873791 

Threshold adjusted fairness score :  0.7254873514175415
Maximum Difference: 0.27451265
Minimum Difference: 0.0
Average (Mean) Difference: 0.029778713 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 32) 0.1
(32, 32) 0.1767766952966369
(32, 2) 0.1767766952966369
deepbayes: Using implicit prior
(100, 32) 0.1
(32, 32) 0.1767766952966369
(32, 2) 0.1767766952966369
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.589, acc: 0.759, val_loss: 0.639, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.572, acc: 0.759, val_loss: 0.571, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.568, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.560, acc: 0.759, val_loss: 0.571, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.561, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.554, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.554, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.553, acc: 0.759, val_loss: 0.558, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.553, acc: 0.759, val_loss: 0.558, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.553, acc: 0.759, val_loss: 0.556, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.553, acc: 0.759, val_loss: 0.556, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.552, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.553, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.553, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.552, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.552, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.
 40%|████      | 2/5 [12:54<19:39, 393.17s/it] 60%|██████    | 3/5 [21:06<14:37, 438.68s/it]
 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9753152132034302
Maximum Difference: 0.024684787
Minimum Difference: 0.0
Average (Mean) Difference: 0.0015901234 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 3 N 32
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 32) 0.1
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 2) 0.1767766952966369
deepbayes: Using implicit prior
(100, 32) 0.1
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 2) 0.1767766952966369
Epoch 1, loss: 0.585, acc: 0.759, val_loss: 0.565, val_acc: 0.759
Epoch 2, loss: 0.521, acc: 0.759, val_loss: 0.493, val_acc: 0.759
Epoch 3, loss: 0.464, acc: 0.759, val_loss: 0.428, val_acc: 0.759
Epoch 4, loss: 0.423, acc: 0.776, val_loss: 0.417, val_acc: 0.771
Epoch 5, loss: 0.420, acc: 0.783, val_loss: 0.399, val_acc: 0.816
Epoch 6, loss: 0.403, acc: 0.811, val_loss: 0.397, val_acc: 0.817
Epoch 7, loss: 0.398, acc: 0.812, val_loss: 0.381, val_acc: 0.825
Epoch 8, loss: 0.383, acc: 0.819, val_loss: 0.373, val_acc: 0.829
Epoch 9, loss: 0.376, acc: 0.823, val_loss: 0.365, val_acc: 0.826
Epoch 10, loss: 0.370, acc: 0.828, val_loss: 0.363, val_acc: 0.827
Epoch 11, loss: 0.366, acc: 0.831, val_loss: 0.358, val_acc: 0.828
Epoch 12, loss: 0.362, acc: 0.830, val_loss: 0.355, val_acc: 0.828
Epoch 13, loss: 0.360, acc: 0.832, val_loss: 0.354, val_acc: 0.830
Epoch 14, loss: 0.358, acc: 0.833, val_loss: 0.350, val_acc: 0.832
Epoch 15, loss: 0.354, acc: 0.834, val_loss: 0.348, val_acc: 0.833
Epoch 16, loss: 0.351, acc: 0.837, val_loss: 0.344, val_acc: 0.835
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.8354061108552127 

282 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.9567019806540764 

Threshold adjusted fairness score :  0.7797977924346924
Maximum Difference: 0.22020221
Minimum Difference: 0.0
Average (Mean) Difference: 0.024208043 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 32) 0.1
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 2) 0.1767766952966369
deepbayes: Using implicit prior
(100, 32) 0.1
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 2) 0.1767766952966369
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.606, acc: 0.726, val_loss: 0.602, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.578, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.559, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.555, acc: 0.759, val_loss: 0.560, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.556, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.554, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.554, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.554, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.553, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.553, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9888594746589661
Maximum Difference: 0.011140525
Minimum Difference: 0.0
Average (Mean) Difference: 0.00052173965 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 4 N 32
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 32) 0.1
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 2) 0.1767766952966369
deepbayes: Using implicit prior
(100, 32) 0.1
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 2) 0.1767766952966369
Epoch 1, loss: 0.610, acc: 0.697, val_loss: 0.564, val_acc: 0.759
Epoch 2, loss: 0.575, acc: 0.759, val_loss: 0.542, val_acc: 0.759
Epoch 3, loss: 0.530, acc: 0.759, val_loss: 0.513, val_acc: 0.759
Epoch 4, loss: 0.479, acc: 0.759, val_loss: 0.449, val_acc: 0.759
Epoch 5, loss: 0.426, acc: 0.757, val_loss: 0.423, val_acc: 0.730
Epoch 6, loss: 0.440, acc: 0.723, val_loss: 0.429, val_acc: 0.735
Epoch 7, loss: 0.419, acc: 0.780, val_loss: 0.396, val_acc: 0.826
Epoch 8, loss: 0.404, acc: 0.790, val_loss: 0.406, val_acc: 0.765
Epoch 9, loss: 0.407, acc: 0.791, val_loss: 0.394, val_acc: 0.822
Epoch 10, loss: 0.390, acc: 0.819, val_loss: 0.379, val_acc: 0.825
Epoch 11, loss: 0.382, acc: 0.819, val_loss: 0.372, val_acc: 0.824
Epoch 12, loss: 0.373, acc: 0.826, val_loss: 0.365, val_acc: 0.827
Epoch 13, loss: 0.372, acc: 0.828, val_loss: 0.363, val_acc: 0.825
Epoch 14, loss: 0.367, acc: 0.829, val_loss: 0.363, val_acc: 0.827
Epoch 15, loss: 0.365, acc: 0.830, val_loss: 0.355, val_acc: 0.826
Epoch 16, loss: 0.362, acc: 0.831, val_loss: 0.354, val_acc: 0.827
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.8274220789190849 

209 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.9679103331797942 

Threshold adjusted fairness score :  0.876669704914093
Maximum Difference: 0.123330295
Minimum Difference: 0.0
Average (Mean) Difference: 0.015477464 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 32) 0.1
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 2) 0.1767766952966369
deepbayes: Using implicit prior
(100, 32) 0.1
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 2) 0.1767766952966369
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.602, acc: 0.740, val_loss: 0.620, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.576, acc: 0.759, val_loss: 0.556, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.560, acc: 0.759, val_loss: 0.559, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.554, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.557, acc: 0.759, val_loss: 0.557, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.554, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.554, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.554, acc: 0.759, val_loss: 0.550, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
 80%|████████  | 4/5 [30:34<08:09, 489.51s/it]100%|██████████| 5/5 [41:07<00:00, 541.23s/it]100%|██████████| 5/5 [41:07<00:00, 493.45s/it]
Epoch 9, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.554, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.552, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.553, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9961444735527039
Maximum Difference: 0.0038555264
Minimum Difference: 0.0
Average (Mean) Difference: 0.00018833647 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 5 N 32
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 32) 0.1
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 2) 0.1767766952966369
deepbayes: Using implicit prior
(100, 32) 0.1
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 2) 0.1767766952966369
Epoch 1, loss: 0.618, acc: 0.709, val_loss: 0.563, val_acc: 0.759
Epoch 2, loss: 0.568, acc: 0.759, val_loss: 0.542, val_acc: 0.759
Epoch 3, loss: 0.533, acc: 0.759, val_loss: 0.513, val_acc: 0.759
Epoch 4, loss: 0.461, acc: 0.761, val_loss: 0.428, val_acc: 0.782
Epoch 5, loss: 0.430, acc: 0.786, val_loss: 0.434, val_acc: 0.809
Epoch 6, loss: 0.406, acc: 0.811, val_loss: 0.397, val_acc: 0.818
Epoch 7, loss: 0.396, acc: 0.813, val_loss: 0.379, val_acc: 0.824
Epoch 8, loss: 0.386, acc: 0.826, val_loss: 0.380, val_acc: 0.822
Epoch 9, loss: 0.382, acc: 0.825, val_loss: 0.369, val_acc: 0.828
Epoch 10, loss: 0.376, acc: 0.828, val_loss: 0.364, val_acc: 0.827
Epoch 11, loss: 0.366, acc: 0.830, val_loss: 0.362, val_acc: 0.829
Epoch 12, loss: 0.362, acc: 0.832, val_loss: 0.355, val_acc: 0.830
Epoch 13, loss: 0.362, acc: 0.831, val_loss: 0.352, val_acc: 0.833
Epoch 14, loss: 0.357, acc: 0.834, val_loss: 0.349, val_acc: 0.835
Epoch 15, loss: 0.354, acc: 0.835, val_loss: 0.346, val_acc: 0.837
Epoch 16, loss: 0.353, acc: 0.836, val_loss: 0.345, val_acc: 0.836
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.8355596499309074 

247 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.9620758483033932 

Threshold adjusted fairness score :  0.8041489124298096
Maximum Difference: 0.19585109
Minimum Difference: 0.0
Average (Mean) Difference: 0.023327716 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 32) 0.1
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 2) 0.1767766952966369
deepbayes: Using implicit prior
(100, 32) 0.1
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 2) 0.1767766952966369
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.607, acc: 0.746, val_loss: 0.587, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.589, acc: 0.759, val_loss: 0.562, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.554, acc: 0.759, val_loss: 0.557, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.556, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.555, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9935583472251892
Maximum Difference: 0.006441653
Minimum Difference: 0.0
Average (Mean) Difference: 0.0003504422 

>> Writing out to dataframe ...
> Done.
Trial complete!

  0%|          | 0/5 [00:00<?, ?it/s] 20%|██        | 1/5 [05:54<23:36, 354.17s/it]Network : L 1 N 16
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 16) 0.1
(16, 2) 0.25
deepbayes: Using implicit prior
(100, 16) 0.1
(16, 2) 0.25
Epoch 1, loss: 0.563, acc: 0.737, val_loss: 0.526, val_acc: 0.759
Epoch 2, loss: 0.454, acc: 0.771, val_loss: 0.447, val_acc: 0.744
Epoch 3, loss: 0.418, acc: 0.794, val_loss: 0.424, val_acc: 0.808
Epoch 4, loss: 0.410, acc: 0.814, val_loss: 0.390, val_acc: 0.811
Epoch 5, loss: 0.399, acc: 0.798, val_loss: 0.380, val_acc: 0.821
Epoch 6, loss: 0.390, acc: 0.820, val_loss: 0.391, val_acc: 0.814
Epoch 7, loss: 0.384, acc: 0.822, val_loss: 0.372, val_acc: 0.827
Epoch 8, loss: 0.380, acc: 0.820, val_loss: 0.369, val_acc: 0.827
Epoch 9, loss: 0.374, acc: 0.829, val_loss: 0.374, val_acc: 0.830
Epoch 10, loss: 0.371, acc: 0.827, val_loss: 0.363, val_acc: 0.826
Epoch 11, loss: 0.369, acc: 0.828, val_loss: 0.360, val_acc: 0.830
Epoch 12, loss: 0.367, acc: 0.830, val_loss: 0.364, val_acc: 0.830
Epoch 13, loss: 0.363, acc: 0.831, val_loss: 0.358, val_acc: 0.828
Epoch 14, loss: 0.363, acc: 0.830, val_loss: 0.355, val_acc: 0.832
Epoch 15, loss: 0.360, acc: 0.832, val_loss: 0.357, val_acc: 0.831
Epoch 16, loss: 0.358, acc: 0.832, val_loss: 0.353, val_acc: 0.832
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.8321817902656226 

169 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.9740518962075848 

Threshold adjusted fairness score :  0.8118901252746582
Maximum Difference: 0.18810987
Minimum Difference: 0.0
Average (Mean) Difference: 0.019000443 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 16) 0.1
(16, 2) 0.25
deepbayes: Using implicit prior
(100, 16) 0.1
(16, 2) 0.25
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.607, acc: 0.719, val_loss: 0.643, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.594, acc: 0.759, val_loss: 0.570, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.572, acc: 0.759, val_loss: 0.568, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.559, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.558, acc: 0.759, val_loss: 0.559, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.558, acc: 0.759, val_loss: 0.541, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.557, acc: 0.759, val_loss: 0.541, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.555, acc: 0.759, val_loss: 0.547, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.559, acc: 0.759, val_loss: 0.550, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.555, acc: 0.759, val_loss: 0.542, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.556, acc: 0.759, val_loss: 0.543, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.554, acc: 0.759, val_loss: 0.550, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.555, acc: 0.759, val_loss: 0.547, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.553, acc: 0.759, val_loss: 0.545, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.553, acc: 0.759, val_loss: 0.546, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.553, acc: 0.759, val_loss: 0.549, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9623393416404724
Maximum Difference: 0.03766066
Minimum Difference: 0.0
Average (Mean) Difference: 0.0068071373 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 2 N 16
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 16) 0.1
(16, 16) 0.25
(16, 2) 0.25
deepbayes: Using implicit prior
(100, 16) 0.1
(16, 16) 0.25
(16, 2) 0.25
Epoch 1, loss: 0.652, acc: 0.585, val_loss: 0.538, val_acc: 0.759
Epoch 2, loss: 0.552, acc: 0.759, val_loss: 0.543, val_acc: 0.759
Epoch 3, loss: 0.501, acc: 0.760, val_loss: 0.484, val_acc: 0.772
Epoch 4, loss: 0.432, acc: 0.778, val_loss: 0.417, val_acc: 0.807
Epoch 5, loss: 0.426, acc: 0.796, val_loss: 0.421, val_acc: 0.820
Epoch 6, loss: 0.405, acc: 0.817, val_loss: 0.380, val_acc: 0.817
Epoch 7, loss: 0.392, acc: 0.816, val_loss: 0.395, val_acc: 0.818
Epoch 8, loss: 0.394, acc: 0.823, val_loss: 0.376, val_acc: 0.828
Epoch 9, loss: 0.373, acc: 0.825, val_loss: 0.368, val_acc: 0.825
Epoch 10, loss: 0.378, acc: 0.829, val_loss: 0.363, val_acc: 0.827
Epoch 11, loss: 0.367, acc: 0.828, val_loss: 0.362, val_acc: 0.823
Epoch 12, loss: 0.367, acc: 0.832, val_loss: 0.359, val_acc: 0.834
Epoch 13, loss: 0.360, acc: 0.832, val_loss: 0.350, val_acc: 0.835
Epoch 14, loss: 0.358, acc: 0.833, val_loss: 0.356, val_acc: 0.834
Epoch 15, loss: 0.357, acc: 0.834, val_loss: 0.347, val_acc: 0.834
Epoch 16, loss: 0.353, acc: 0.835, val_loss: 0.345, val_acc: 0.837
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.837095040687855 

467 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.9282972516505451 

Threshold adjusted fairness score :  0.8404590487480164
Maximum Difference: 0.15954095
Minimum Difference: 0.0
Average (Mean) Difference: 0.032783635 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 16) 0.1
(16, 16) 0.25
(16, 2) 0.25
deepbayes: Using implicit prior
(100, 16) 0.1
(16, 16) 0.25
(16, 2) 0.25
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.592, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.583, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.561, acc: 0.759, val_loss: 0.560, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.557, acc: 0.759, val_loss: 0.560, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.558, acc: 0.759, val_loss: 0.565, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.555, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.554, acc: 0.759, val_loss: 0.556, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.555, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.554, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.554, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

 40%|████      | 2/5 [12:53<19:36, 392.27s/it] 60%|██████    | 3/5 [20:59<14:30, 435.17s/it]Threshold adjusted fairness score :  0.9924659132957458
Maximum Difference: 0.0075340867
Minimum Difference: 0.0
Average (Mean) Difference: 0.00074672274 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 3 N 16
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 16) 0.1
(16, 16) 0.25
(16, 16) 0.25
(16, 2) 0.25
deepbayes: Using implicit prior
(100, 16) 0.1
(16, 16) 0.25
(16, 16) 0.25
(16, 2) 0.25
Epoch 1, loss: 0.663, acc: 0.592, val_loss: 0.563, val_acc: 0.759
Epoch 2, loss: 0.565, acc: 0.759, val_loss: 0.593, val_acc: 0.759
Epoch 3, loss: 0.594, acc: 0.759, val_loss: 0.576, val_acc: 0.759
Epoch 4, loss: 0.560, acc: 0.759, val_loss: 0.548, val_acc: 0.759
Epoch 5, loss: 0.542, acc: 0.759, val_loss: 0.532, val_acc: 0.759
Epoch 6, loss: 0.487, acc: 0.759, val_loss: 0.459, val_acc: 0.759
Epoch 7, loss: 0.443, acc: 0.770, val_loss: 0.427, val_acc: 0.743
Epoch 8, loss: 0.441, acc: 0.735, val_loss: 0.410, val_acc: 0.801
Epoch 9, loss: 0.420, acc: 0.803, val_loss: 0.407, val_acc: 0.796
Epoch 10, loss: 0.414, acc: 0.812, val_loss: 0.417, val_acc: 0.827
Epoch 11, loss: 0.400, acc: 0.824, val_loss: 0.393, val_acc: 0.827
Epoch 12, loss: 0.394, acc: 0.821, val_loss: 0.386, val_acc: 0.818
Epoch 13, loss: 0.390, acc: 0.814, val_loss: 0.372, val_acc: 0.826
Epoch 14, loss: 0.384, acc: 0.820, val_loss: 0.382, val_acc: 0.817
Epoch 15, loss: 0.380, acc: 0.824, val_loss: 0.373, val_acc: 0.826
Epoch 16, loss: 0.375, acc: 0.826, val_loss: 0.368, val_acc: 0.829
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.828650391524643 

189 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.9709811146936895 

Threshold adjusted fairness score :  0.796031653881073
Maximum Difference: 0.20396835
Minimum Difference: 0.0
Average (Mean) Difference: 0.01612797 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 16) 0.1
(16, 16) 0.25
(16, 16) 0.25
(16, 2) 0.25
deepbayes: Using implicit prior
(100, 16) 0.1
(16, 16) 0.25
(16, 16) 0.25
(16, 2) 0.25
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.632, acc: 0.618, val_loss: 0.563, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.585, acc: 0.759, val_loss: 0.618, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.568, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.552, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.552, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.552, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.552, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9967273473739624
Maximum Difference: 0.0032726526
Minimum Difference: 0.0
Average (Mean) Difference: 0.00023849029 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 4 N 16
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 16) 0.1
(16, 16) 0.25
(16, 16) 0.25
(16, 16) 0.25
(16, 2) 0.25
deepbayes: Using implicit prior
(100, 16) 0.1
(16, 16) 0.25
(16, 16) 0.25
(16, 16) 0.25
(16, 2) 0.25
Epoch 1, loss: 0.621, acc: 0.751, val_loss: 0.553, val_acc: 0.759
Epoch 2, loss: 0.562, acc: 0.759, val_loss: 0.580, val_acc: 0.759
Epoch 3, loss: 0.565, acc: 0.759, val_loss: 0.537, val_acc: 0.759
Epoch 4, loss: 0.515, acc: 0.759, val_loss: 0.495, val_acc: 0.759
Epoch 5, loss: 0.464, acc: 0.759, val_loss: 0.431, val_acc: 0.759
Epoch 6, loss: 0.428, acc: 0.764, val_loss: 0.429, val_acc: 0.743
Epoch 7, loss: 0.429, acc: 0.755, val_loss: 0.408, val_acc: 0.789
Epoch 8, loss: 0.405, acc: 0.809, val_loss: 0.403, val_acc: 0.818
Epoch 9, loss: 0.409, acc: 0.813, val_loss: 0.402, val_acc: 0.813
Epoch 10, loss: 0.396, acc: 0.818, val_loss: 0.385, val_acc: 0.821
Epoch 11, loss: 0.386, acc: 0.820, val_loss: 0.377, val_acc: 0.822
Epoch 12, loss: 0.378, acc: 0.823, val_loss: 0.368, val_acc: 0.828
Epoch 13, loss: 0.373, acc: 0.829, val_loss: 0.367, val_acc: 0.827
Epoch 14, loss: 0.369, acc: 0.828, val_loss: 0.359, val_acc: 0.828
Epoch 15, loss: 0.366, acc: 0.827, val_loss: 0.359, val_acc: 0.829
Epoch 16, loss: 0.362, acc: 0.831, val_loss: 0.354, val_acc: 0.831
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.8309534776600644 

260 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.9600798403193613 

Threshold adjusted fairness score :  0.8407978415489197
Maximum Difference: 0.15920216
Minimum Difference: 0.0
Average (Mean) Difference: 0.024017232 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 16) 0.1
(16, 16) 0.25
(16, 16) 0.25
(16, 16) 0.25
(16, 2) 0.25
deepbayes: Using implicit prior
(100, 16) 0.1
(16, 16) 0.25
(16, 16) 0.25
(16, 16) 0.25
(16, 2) 0.25
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.613, acc: 0.691, val_loss: 0.575, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.582, acc: 0.759, val_loss: 0.573, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.556, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.554, acc: 0.759, val_loss: 0.557, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.554, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.553, acc: 0.759, val_loss: 0.557, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.553, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.552, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
 80%|████████  | 4/5 [30:10<08:00, 480.82s/it]100%|██████████| 5/5 [40:28<00:00, 530.32s/it]100%|██████████| 5/5 [40:28<00:00, 485.64s/it]
Epoch 15, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9994178414344788
Maximum Difference: 0.00058215857
Minimum Difference: 0.0
Average (Mean) Difference: 7.263026e-05 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 5 N 16
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 16) 0.1
(16, 16) 0.25
(16, 16) 0.25
(16, 16) 0.25
(16, 16) 0.25
(16, 2) 0.25
deepbayes: Using implicit prior
(100, 16) 0.1
(16, 16) 0.25
(16, 16) 0.25
(16, 16) 0.25
(16, 16) 0.25
(16, 2) 0.25
Epoch 1, loss: 0.648, acc: 0.673, val_loss: 0.575, val_acc: 0.759
Epoch 2, loss: 0.561, acc: 0.759, val_loss: 0.581, val_acc: 0.759
Epoch 3, loss: 0.604, acc: 0.759, val_loss: 0.608, val_acc: 0.759
Epoch 4, loss: 0.587, acc: 0.759, val_loss: 0.563, val_acc: 0.759
Epoch 5, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759
Epoch 6, loss: 0.557, acc: 0.759, val_loss: 0.550, val_acc: 0.759
Epoch 7, loss: 0.536, acc: 0.759, val_loss: 0.514, val_acc: 0.759
Epoch 8, loss: 0.484, acc: 0.785, val_loss: 0.450, val_acc: 0.806
Epoch 9, loss: 0.431, acc: 0.815, val_loss: 0.422, val_acc: 0.808
Epoch 10, loss: 0.412, acc: 0.822, val_loss: 0.388, val_acc: 0.822
Epoch 11, loss: 0.387, acc: 0.825, val_loss: 0.375, val_acc: 0.829
Epoch 12, loss: 0.381, acc: 0.824, val_loss: 0.371, val_acc: 0.826
Epoch 13, loss: 0.372, acc: 0.826, val_loss: 0.373, val_acc: 0.821
Epoch 14, loss: 0.372, acc: 0.828, val_loss: 0.369, val_acc: 0.824
Epoch 15, loss: 0.369, acc: 0.827, val_loss: 0.351, val_acc: 0.830
Epoch 16, loss: 0.365, acc: 0.827, val_loss: 0.350, val_acc: 0.831
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.8314140948871488 

398 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.9388914478734838 

Threshold adjusted fairness score :  0.8165987730026245
Maximum Difference: 0.18340123
Minimum Difference: 0.0
Average (Mean) Difference: 0.02790695 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 16) 0.1
(16, 16) 0.25
(16, 16) 0.25
(16, 16) 0.25
(16, 16) 0.25
(16, 2) 0.25
deepbayes: Using implicit prior
(100, 16) 0.1
(16, 16) 0.25
(16, 16) 0.25
(16, 16) 0.25
(16, 16) 0.25
(16, 2) 0.25
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.644, acc: 0.677, val_loss: 0.571, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.565, acc: 0.759, val_loss: 0.588, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.605, acc: 0.759, val_loss: 0.601, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.581, acc: 0.759, val_loss: 0.561, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.554, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.563, acc: 0.759, val_loss: 0.566, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.562, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.555, acc: 0.759, val_loss: 0.557, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.557, acc: 0.759, val_loss: 0.556, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.554, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.552, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.555, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.554, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  1.0
Maximum Difference: 0.0
Minimum Difference: 0.0
Average (Mean) Difference: 0.0 

>> Writing out to dataframe ...
> Done.
Trial complete!

  0%|          | 0/5 [00:00<?, ?it/s] 20%|██        | 1/5 [05:47<23:08, 347.22s/it]Network : L 1 N 8
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 8) 0.1
(8, 2) 0.3535533905932738
deepbayes: Using implicit prior
(100, 8) 0.1
(8, 2) 0.3535533905932738
Epoch 1, loss: 0.656, acc: 0.667, val_loss: 0.584, val_acc: 0.760
Epoch 2, loss: 0.550, acc: 0.759, val_loss: 0.550, val_acc: 0.759
Epoch 3, loss: 0.515, acc: 0.759, val_loss: 0.458, val_acc: 0.759
Epoch 4, loss: 0.459, acc: 0.774, val_loss: 0.436, val_acc: 0.776
Epoch 5, loss: 0.419, acc: 0.783, val_loss: 0.425, val_acc: 0.763
Epoch 6, loss: 0.412, acc: 0.797, val_loss: 0.420, val_acc: 0.765
Epoch 7, loss: 0.408, acc: 0.805, val_loss: 0.400, val_acc: 0.820
Epoch 8, loss: 0.392, acc: 0.822, val_loss: 0.374, val_acc: 0.824
Epoch 9, loss: 0.384, acc: 0.819, val_loss: 0.373, val_acc: 0.828
Epoch 10, loss: 0.383, acc: 0.822, val_loss: 0.373, val_acc: 0.829
Epoch 11, loss: 0.377, acc: 0.824, val_loss: 0.368, val_acc: 0.827
Epoch 12, loss: 0.371, acc: 0.829, val_loss: 0.367, val_acc: 0.827
Epoch 13, loss: 0.364, acc: 0.830, val_loss: 0.360, val_acc: 0.829
Epoch 14, loss: 0.363, acc: 0.832, val_loss: 0.359, val_acc: 0.829
Epoch 15, loss: 0.361, acc: 0.830, val_loss: 0.354, val_acc: 0.829
Epoch 16, loss: 0.361, acc: 0.832, val_loss: 0.353, val_acc: 0.830
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.8297251650545063 

328 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.9496391831721173 

Threshold adjusted fairness score :  0.8802421689033508
Maximum Difference: 0.11975783
Minimum Difference: 0.0
Average (Mean) Difference: 0.02514531 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 8) 0.1
(8, 2) 0.3535533905932738
deepbayes: Using implicit prior
(100, 8) 0.1
(8, 2) 0.3535533905932738
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.661, acc: 0.612, val_loss: 0.546, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.595, acc: 0.759, val_loss: 0.611, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.567, acc: 0.759, val_loss: 0.564, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.577, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.558, acc: 0.759, val_loss: 0.567, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.572, acc: 0.759, val_loss: 0.574, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.568, acc: 0.759, val_loss: 0.561, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.556, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.554, acc: 0.759, val_loss: 0.557, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.560, acc: 0.759, val_loss: 0.561, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.559, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.553, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.556, acc: 0.759, val_loss: 0.556, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.556, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9927204847335815
Maximum Difference: 0.0072795153
Minimum Difference: 0.0
Average (Mean) Difference: 3.894926e-05 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 2 N 8
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 8) 0.1
(8, 8) 0.3535533905932738
(8, 2) 0.3535533905932738
deepbayes: Using implicit prior
(100, 8) 0.1
(8, 8) 0.3535533905932738
(8, 2) 0.3535533905932738
Epoch 1, loss: 0.694, acc: 0.584, val_loss: 0.585, val_acc: 0.759
Epoch 2, loss: 0.561, acc: 0.759, val_loss: 0.572, val_acc: 0.759
Epoch 3, loss: 0.591, acc: 0.759, val_loss: 0.584, val_acc: 0.759
Epoch 4, loss: 0.539, acc: 0.759, val_loss: 0.512, val_acc: 0.759
Epoch 5, loss: 0.497, acc: 0.793, val_loss: 0.441, val_acc: 0.774
Epoch 6, loss: 0.441, acc: 0.768, val_loss: 0.415, val_acc: 0.804
Epoch 7, loss: 0.420, acc: 0.803, val_loss: 0.413, val_acc: 0.807
Epoch 8, loss: 0.420, acc: 0.816, val_loss: 0.421, val_acc: 0.818
Epoch 9, loss: 0.405, acc: 0.817, val_loss: 0.405, val_acc: 0.818
Epoch 10, loss: 0.397, acc: 0.824, val_loss: 0.402, val_acc: 0.815
Epoch 11, loss: 0.386, acc: 0.822, val_loss: 0.385, val_acc: 0.819
Epoch 12, loss: 0.382, acc: 0.826, val_loss: 0.386, val_acc: 0.817
Epoch 13, loss: 0.378, acc: 0.823, val_loss: 0.377, val_acc: 0.823
Epoch 14, loss: 0.377, acc: 0.827, val_loss: 0.375, val_acc: 0.823
Epoch 15, loss: 0.371, acc: 0.829, val_loss: 0.366, val_acc: 0.828
Epoch 16, loss: 0.368, acc: 0.830, val_loss: 0.365, val_acc: 0.827
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.8274220789190849 

230 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.9646860125902043 

Threshold adjusted fairness score :  0.9127453565597534
Maximum Difference: 0.08725464
Minimum Difference: 0.0
Average (Mean) Difference: 0.017396789 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 8) 0.1
(8, 8) 0.3535533905932738
(8, 2) 0.3535533905932738
deepbayes: Using implicit prior
(100, 8) 0.1
(8, 8) 0.3535533905932738
(8, 2) 0.3535533905932738
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.639, acc: 0.637, val_loss: 0.561, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.585, acc: 0.759, val_loss: 0.624, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.570, acc: 0.759, val_loss: 0.556, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.568, acc: 0.759, val_loss: 0.562, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.557, acc: 0.759, val_loss: 0.550, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.559, acc: 0.759, val_loss: 0.564, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.565, acc: 0.759, val_loss: 0.563, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.559, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.556, acc: 0.759, val_loss: 0.558, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.558, acc: 0.759, val_loss: 0.556, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.554, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.552, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.555, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.554, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.
 40%|████      | 2/5 [12:45<19:27, 389.03s/it] 60%|██████    | 3/5 [20:51<14:26, 433.11s/it]
 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9896522164344788
Maximum Difference: 0.010347784
Minimum Difference: 0.0
Average (Mean) Difference: 0.00013648231 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 3 N 8
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 8) 0.1
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 2) 0.3535533905932738
deepbayes: Using implicit prior
(100, 8) 0.1
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 2) 0.3535533905932738
Epoch 1, loss: 0.663, acc: 0.669, val_loss: 0.609, val_acc: 0.759
Epoch 2, loss: 0.569, acc: 0.759, val_loss: 0.551, val_acc: 0.759
Epoch 3, loss: 0.568, acc: 0.759, val_loss: 0.589, val_acc: 0.759
Epoch 4, loss: 0.603, acc: 0.759, val_loss: 0.607, val_acc: 0.759
Epoch 5, loss: 0.592, acc: 0.759, val_loss: 0.571, val_acc: 0.759
Epoch 6, loss: 0.545, acc: 0.759, val_loss: 0.528, val_acc: 0.759
Epoch 7, loss: 0.542, acc: 0.779, val_loss: 0.541, val_acc: 0.803
Epoch 8, loss: 0.505, acc: 0.769, val_loss: 0.489, val_acc: 0.759
Epoch 9, loss: 0.479, acc: 0.760, val_loss: 0.451, val_acc: 0.771
Epoch 10, loss: 0.432, acc: 0.798, val_loss: 0.440, val_acc: 0.782
Epoch 11, loss: 0.424, acc: 0.812, val_loss: 0.439, val_acc: 0.813
Epoch 12, loss: 0.411, acc: 0.818, val_loss: 0.416, val_acc: 0.809
Epoch 13, loss: 0.402, acc: 0.822, val_loss: 0.408, val_acc: 0.813
Epoch 14, loss: 0.390, acc: 0.821, val_loss: 0.386, val_acc: 0.820
Epoch 15, loss: 0.385, acc: 0.824, val_loss: 0.386, val_acc: 0.813
Epoch 16, loss: 0.380, acc: 0.822, val_loss: 0.379, val_acc: 0.824
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.8237371411024106 

432 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.9336711192998618 

Threshold adjusted fairness score :  0.8643796443939209
Maximum Difference: 0.13562036
Minimum Difference: 0.0
Average (Mean) Difference: 0.031928938 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 8) 0.1
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 2) 0.3535533905932738
deepbayes: Using implicit prior
(100, 8) 0.1
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 2) 0.3535533905932738
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.629, acc: 0.723, val_loss: 0.557, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.582, acc: 0.759, val_loss: 0.611, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.577, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.553, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.557, acc: 0.759, val_loss: 0.558, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.556, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.554, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.555, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.552, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9983536005020142
Maximum Difference: 0.0016463995
Minimum Difference: 0.0
Average (Mean) Difference: 5.5651173e-05 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 4 N 8
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 8) 0.1
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 2) 0.3535533905932738
deepbayes: Using implicit prior
(100, 8) 0.1
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 2) 0.3535533905932738
Epoch 1, loss: 0.558, acc: 0.759, val_loss: 0.542, val_acc: 0.759
Epoch 2, loss: 0.493, acc: 0.759, val_loss: 0.464, val_acc: 0.759
Epoch 3, loss: 0.461, acc: 0.759, val_loss: 0.437, val_acc: 0.759
Epoch 4, loss: 0.437, acc: 0.759, val_loss: 0.434, val_acc: 0.759
Epoch 5, loss: 0.436, acc: 0.759, val_loss: 0.417, val_acc: 0.759
Epoch 6, loss: 0.428, acc: 0.761, val_loss: 0.423, val_acc: 0.764
Epoch 7, loss: 0.425, acc: 0.764, val_loss: 0.412, val_acc: 0.759
Epoch 8, loss: 0.418, acc: 0.759, val_loss: 0.409, val_acc: 0.759
Epoch 9, loss: 0.408, acc: 0.789, val_loss: 0.400, val_acc: 0.809
Epoch 10, loss: 0.403, acc: 0.805, val_loss: 0.395, val_acc: 0.817
Epoch 11, loss: 0.396, acc: 0.820, val_loss: 0.392, val_acc: 0.821
Epoch 12, loss: 0.392, acc: 0.821, val_loss: 0.387, val_acc: 0.828
Epoch 13, loss: 0.387, acc: 0.823, val_loss: 0.378, val_acc: 0.831
Epoch 14, loss: 0.381, acc: 0.823, val_loss: 0.373, val_acc: 0.830
Epoch 15, loss: 0.378, acc: 0.822, val_loss: 0.369, val_acc: 0.828
Epoch 16, loss: 0.374, acc: 0.826, val_loss: 0.366, val_acc: 0.831
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.8306463995086749 

102 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.9843390142791341 

Threshold adjusted fairness score :  0.8605790138244629
Maximum Difference: 0.13942099
Minimum Difference: 0.0
Average (Mean) Difference: 0.01289127 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 8) 0.1
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 2) 0.3535533905932738
deepbayes: Using implicit prior
(100, 8) 0.1
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 2) 0.3535533905932738
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.612, acc: 0.756, val_loss: 0.584, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.580, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.554, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.553, acc: 0.759, val_loss: 0.557, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.554, acc: 0.759, val_loss: 0.557, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.553, acc: 0.759, val_loss: 0.557, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.553, acc: 0.759, val_loss: 0.556, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.552, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
 80%|████████  | 4/5 [29:58<07:58, 478.37s/it]100%|██████████| 5/5 [40:12<00:00, 527.14s/it]100%|██████████| 5/5 [40:12<00:00, 482.49s/it]
Epoch 9, loss: 0.553, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.552, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.552, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.552, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.552, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.552, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.552, acc: 0.759, val_loss: 0.550, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9899535775184631
Maximum Difference: 0.0100464225
Minimum Difference: 0.0
Average (Mean) Difference: 0.000638725 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 5 N 8
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 8) 0.1
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 2) 0.3535533905932738
deepbayes: Using implicit prior
(100, 8) 0.1
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 2) 0.3535533905932738
Epoch 1, loss: 0.661, acc: 0.625, val_loss: 0.599, val_acc: 0.759
Epoch 2, loss: 0.565, acc: 0.759, val_loss: 0.556, val_acc: 0.759
Epoch 3, loss: 0.582, acc: 0.759, val_loss: 0.605, val_acc: 0.759
Epoch 4, loss: 0.609, acc: 0.759, val_loss: 0.601, val_acc: 0.759
Epoch 5, loss: 0.582, acc: 0.759, val_loss: 0.563, val_acc: 0.759
Epoch 6, loss: 0.555, acc: 0.759, val_loss: 0.553, val_acc: 0.759
Epoch 7, loss: 0.561, acc: 0.759, val_loss: 0.568, val_acc: 0.759
Epoch 8, loss: 0.569, acc: 0.759, val_loss: 0.566, val_acc: 0.759
Epoch 9, loss: 0.559, acc: 0.759, val_loss: 0.553, val_acc: 0.759
Epoch 10, loss: 0.552, acc: 0.759, val_loss: 0.553, val_acc: 0.759
Epoch 11, loss: 0.556, acc: 0.759, val_loss: 0.557, val_acc: 0.759
Epoch 12, loss: 0.557, acc: 0.759, val_loss: 0.555, val_acc: 0.759
Epoch 13, loss: 0.552, acc: 0.759, val_loss: 0.548, val_acc: 0.759
Epoch 14, loss: 0.546, acc: 0.759, val_loss: 0.544, val_acc: 0.759
Epoch 15, loss: 0.543, acc: 0.759, val_loss: 0.541, val_acc: 0.759
Epoch 16, loss: 0.538, acc: 0.759, val_loss: 0.533, val_acc: 0.759
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9838090538978577
Maximum Difference: 0.016190946
Minimum Difference: 0.0
Average (Mean) Difference: 0.0014155909 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 8) 0.1
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 2) 0.3535533905932738
deepbayes: Using implicit prior
(100, 8) 0.1
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 2) 0.3535533905932738
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.669, acc: 0.649, val_loss: 0.582, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.563, acc: 0.759, val_loss: 0.575, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.604, acc: 0.759, val_loss: 0.606, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.584, acc: 0.759, val_loss: 0.561, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.554, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.555, acc: 0.759, val_loss: 0.558, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.559, acc: 0.759, val_loss: 0.557, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.555, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.554, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.554, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  1.0
Maximum Difference: 0.0
Minimum Difference: 0.0
Average (Mean) Difference: 0.0 

>> Writing out to dataframe ...
> Done.
Trial complete!

  0%|          | 0/5 [00:00<?, ?it/s] 20%|██        | 1/5 [05:44<22:57, 344.49s/it]Network : L 1 N 4
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 4) 0.1
(4, 2) 0.5
deepbayes: Using implicit prior
(100, 4) 0.1
(4, 2) 0.5
Epoch 1, loss: 0.704, acc: 0.603, val_loss: 0.621, val_acc: 0.759
Epoch 2, loss: 0.582, acc: 0.759, val_loss: 0.555, val_acc: 0.759
Epoch 3, loss: 0.557, acc: 0.759, val_loss: 0.568, val_acc: 0.759
Epoch 4, loss: 0.586, acc: 0.759, val_loss: 0.600, val_acc: 0.759
Epoch 5, loss: 0.606, acc: 0.759, val_loss: 0.604, val_acc: 0.759
Epoch 6, loss: 0.594, acc: 0.759, val_loss: 0.581, val_acc: 0.759
Epoch 7, loss: 0.567, acc: 0.759, val_loss: 0.556, val_acc: 0.759
Epoch 8, loss: 0.553, acc: 0.759, val_loss: 0.554, val_acc: 0.759
Epoch 9, loss: 0.561, acc: 0.759, val_loss: 0.568, val_acc: 0.759
Epoch 10, loss: 0.571, acc: 0.759, val_loss: 0.571, val_acc: 0.759
Epoch 11, loss: 0.566, acc: 0.759, val_loss: 0.559, val_acc: 0.759
Epoch 12, loss: 0.555, acc: 0.759, val_loss: 0.552, val_acc: 0.759
Epoch 13, loss: 0.553, acc: 0.759, val_loss: 0.555, val_acc: 0.759
Epoch 14, loss: 0.558, acc: 0.759, val_loss: 0.559, val_acc: 0.759
Epoch 15, loss: 0.559, acc: 0.759, val_loss: 0.558, val_acc: 0.759
Epoch 16, loss: 0.557, acc: 0.759, val_loss: 0.554, val_acc: 0.759
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  1.0
Maximum Difference: 0.0
Minimum Difference: 0.0
Average (Mean) Difference: 0.0 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 4) 0.1
(4, 2) 0.5
deepbayes: Using implicit prior
(100, 4) 0.1
(4, 2) 0.5
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.672, acc: 0.616, val_loss: 0.606, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.588, acc: 0.759, val_loss: 0.635, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.572, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.553, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.557, acc: 0.759, val_loss: 0.558, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.558, acc: 0.759, val_loss: 0.558, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.556, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.552, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.554, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.554, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9919067621231079
Maximum Difference: 0.008093238
Minimum Difference: 0.0
Average (Mean) Difference: 1.5399157e-05 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 2 N 4
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 4) 0.1
(4, 4) 0.5
(4, 2) 0.5
deepbayes: Using implicit prior
(100, 4) 0.1
(4, 4) 0.5
(4, 2) 0.5
Epoch 1, loss: 0.658, acc: 0.689, val_loss: 0.602, val_acc: 0.759
Epoch 2, loss: 0.564, acc: 0.759, val_loss: 0.562, val_acc: 0.759
Epoch 3, loss: 0.562, acc: 0.759, val_loss: 0.537, val_acc: 0.759
Epoch 4, loss: 0.519, acc: 0.759, val_loss: 0.516, val_acc: 0.759
Epoch 5, loss: 0.517, acc: 0.759, val_loss: 0.513, val_acc: 0.759
Epoch 6, loss: 0.502, acc: 0.759, val_loss: 0.484, val_acc: 0.759
Epoch 7, loss: 0.466, acc: 0.759, val_loss: 0.444, val_acc: 0.759
Epoch 8, loss: 0.439, acc: 0.759, val_loss: 0.430, val_acc: 0.759
Epoch 9, loss: 0.434, acc: 0.759, val_loss: 0.424, val_acc: 0.759
Epoch 10, loss: 0.429, acc: 0.759, val_loss: 0.419, val_acc: 0.750
Epoch 11, loss: 0.422, acc: 0.763, val_loss: 0.407, val_acc: 0.779
Epoch 12, loss: 0.407, acc: 0.801, val_loss: 0.405, val_acc: 0.805
Epoch 13, loss: 0.407, acc: 0.804, val_loss: 0.398, val_acc: 0.809
Epoch 14, loss: 0.407, acc: 0.808, val_loss: 0.400, val_acc: 0.813
Epoch 15, loss: 0.399, acc: 0.813, val_loss: 0.394, val_acc: 0.812
Epoch 16, loss: 0.392, acc: 0.816, val_loss: 0.382, val_acc: 0.823
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.8232765238753262 

60 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.9907876554583142 

Threshold adjusted fairness score :  0.7884401679039001
Maximum Difference: 0.21155983
Minimum Difference: 0.0
Average (Mean) Difference: 0.013449223 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 4) 0.1
(4, 4) 0.5
(4, 2) 0.5
deepbayes: Using implicit prior
(100, 4) 0.1
(4, 4) 0.5
(4, 2) 0.5
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.619, acc: 0.759, val_loss: 0.561, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.580, acc: 0.759, val_loss: 0.622, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.569, acc: 0.759, val_loss: 0.561, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.569, acc: 0.759, val_loss: 0.573, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.561, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.553, acc: 0.759, val_loss: 0.559, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.558, acc: 0.759, val_loss: 0.564, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.559, acc: 0.759, val_loss: 0.559, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.554, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.552, acc: 0.759, val_loss: 0.550, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.554, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.555, acc: 0.759, val_loss: 0.550, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.553, acc: 0.759, val_loss: 0.549, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.552, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.553, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9933730363845825
Maximum Difference: 0.0066269636 40%|████      | 2/5 [12:33<19:07, 382.44s/it] 60%|██████    | 3/5 [20:32<14:13, 426.51s/it]
Minimum Difference: 0.0
Average (Mean) Difference: 0.0003674889 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 3 N 4
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 4) 0.1
(4, 4) 0.5
(4, 4) 0.5
(4, 2) 0.5
deepbayes: Using implicit prior
(100, 4) 0.1
(4, 4) 0.5
(4, 4) 0.5
(4, 2) 0.5
Epoch 1, loss: 0.666, acc: 0.738, val_loss: 0.624, val_acc: 0.759
Epoch 2, loss: 0.583, acc: 0.759, val_loss: 0.555, val_acc: 0.759
Epoch 3, loss: 0.565, acc: 0.759, val_loss: 0.583, val_acc: 0.759
Epoch 4, loss: 0.596, acc: 0.759, val_loss: 0.599, val_acc: 0.759
Epoch 5, loss: 0.587, acc: 0.759, val_loss: 0.571, val_acc: 0.759
Epoch 6, loss: 0.563, acc: 0.759, val_loss: 0.557, val_acc: 0.759
Epoch 7, loss: 0.554, acc: 0.759, val_loss: 0.552, val_acc: 0.759
Epoch 8, loss: 0.554, acc: 0.759, val_loss: 0.557, val_acc: 0.759
Epoch 9, loss: 0.560, acc: 0.759, val_loss: 0.561, val_acc: 0.759
Epoch 10, loss: 0.559, acc: 0.759, val_loss: 0.557, val_acc: 0.759
Epoch 11, loss: 0.555, acc: 0.759, val_loss: 0.553, val_acc: 0.759
Epoch 12, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759
Epoch 13, loss: 0.554, acc: 0.759, val_loss: 0.555, val_acc: 0.759
Epoch 14, loss: 0.555, acc: 0.759, val_loss: 0.555, val_acc: 0.759
Epoch 15, loss: 0.555, acc: 0.759, val_loss: 0.553, val_acc: 0.759
Epoch 16, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  1.0
Maximum Difference: 0.0
Minimum Difference: 0.0
Average (Mean) Difference: 0.0 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 4) 0.1
(4, 4) 0.5
(4, 4) 0.5
(4, 2) 0.5
deepbayes: Using implicit prior
(100, 4) 0.1
(4, 4) 0.5
(4, 4) 0.5
(4, 2) 0.5
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.670, acc: 0.675, val_loss: 0.627, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.585, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.557, acc: 0.759, val_loss: 0.566, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.586, acc: 0.759, val_loss: 0.596, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.601, acc: 0.759, val_loss: 0.597, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.587, acc: 0.759, val_loss: 0.575, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.564, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.553, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.561, acc: 0.759, val_loss: 0.566, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.568, acc: 0.759, val_loss: 0.567, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.563, acc: 0.759, val_loss: 0.557, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.554, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.553, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.557, acc: 0.759, val_loss: 0.558, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.558, acc: 0.759, val_loss: 0.557, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.556, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9975130558013916
Maximum Difference: 0.0024869442
Minimum Difference: 0.0
Average (Mean) Difference: 1.6818797e-06 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 4 N 4
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 4) 0.1
(4, 4) 0.5
(4, 4) 0.5
(4, 4) 0.5
(4, 2) 0.5
deepbayes: Using implicit prior
(100, 4) 0.1
(4, 4) 0.5
(4, 4) 0.5
(4, 4) 0.5
(4, 2) 0.5
Epoch 1, loss: 0.654, acc: 0.698, val_loss: 0.584, val_acc: 0.759
Epoch 2, loss: 0.563, acc: 0.759, val_loss: 0.578, val_acc: 0.759
Epoch 3, loss: 0.609, acc: 0.759, val_loss: 0.621, val_acc: 0.759
Epoch 4, loss: 0.599, acc: 0.759, val_loss: 0.570, val_acc: 0.759
Epoch 5, loss: 0.556, acc: 0.759, val_loss: 0.557, val_acc: 0.759
Epoch 6, loss: 0.571, acc: 0.759, val_loss: 0.581, val_acc: 0.759
Epoch 7, loss: 0.577, acc: 0.759, val_loss: 0.567, val_acc: 0.759
Epoch 8, loss: 0.558, acc: 0.759, val_loss: 0.552, val_acc: 0.759
Epoch 9, loss: 0.555, acc: 0.759, val_loss: 0.558, val_acc: 0.759
Epoch 10, loss: 0.562, acc: 0.759, val_loss: 0.563, val_acc: 0.759
Epoch 11, loss: 0.562, acc: 0.759, val_loss: 0.559, val_acc: 0.759
Epoch 12, loss: 0.555, acc: 0.759, val_loss: 0.553, val_acc: 0.759
Epoch 13, loss: 0.552, acc: 0.759, val_loss: 0.553, val_acc: 0.759
Epoch 14, loss: 0.555, acc: 0.759, val_loss: 0.556, val_acc: 0.759
Epoch 15, loss: 0.556, acc: 0.759, val_loss: 0.556, val_acc: 0.759
Epoch 16, loss: 0.555, acc: 0.759, val_loss: 0.553, val_acc: 0.759
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  1.0
Maximum Difference: 0.0
Minimum Difference: 0.0
Average (Mean) Difference: 0.0 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 4) 0.1
(4, 4) 0.5
(4, 4) 0.5
(4, 4) 0.5
(4, 2) 0.5
deepbayes: Using implicit prior
(100, 4) 0.1
(4, 4) 0.5
(4, 4) 0.5
(4, 4) 0.5
(4, 2) 0.5
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.664, acc: 0.731, val_loss: 0.613, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.571, acc: 0.759, val_loss: 0.560, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.582, acc: 0.759, val_loss: 0.595, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.578, acc: 0.759, val_loss: 0.560, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.556, acc: 0.759, val_loss: 0.566, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.560, acc: 0.759, val_loss: 0.561, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.554, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.552, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.552, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.552, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.552, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.
 80%|████████  | 4/5 [29:37<07:53, 473.46s/it]100%|██████████| 5/5 [39:49<00:00, 523.12s/it]100%|██████████| 5/5 [39:49<00:00, 477.81s/it]

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9910634160041809
Maximum Difference: 0.008936584
Minimum Difference: 0.0
Average (Mean) Difference: 0.0007046833 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 5 N 4
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 4) 0.1
(4, 4) 0.5
(4, 4) 0.5
(4, 4) 0.5
(4, 4) 0.5
(4, 2) 0.5
deepbayes: Using implicit prior
(100, 4) 0.1
(4, 4) 0.5
(4, 4) 0.5
(4, 4) 0.5
(4, 4) 0.5
(4, 2) 0.5
Epoch 1, loss: 0.663, acc: 0.740, val_loss: 0.616, val_acc: 0.759
Epoch 2, loss: 0.574, acc: 0.759, val_loss: 0.550, val_acc: 0.759
Epoch 3, loss: 0.565, acc: 0.759, val_loss: 0.583, val_acc: 0.759
Epoch 4, loss: 0.577, acc: 0.759, val_loss: 0.555, val_acc: 0.759
Epoch 5, loss: 0.557, acc: 0.759, val_loss: 0.555, val_acc: 0.759
Epoch 6, loss: 0.543, acc: 0.759, val_loss: 0.527, val_acc: 0.759
Epoch 7, loss: 0.514, acc: 0.759, val_loss: 0.495, val_acc: 0.760
Epoch 8, loss: 0.461, acc: 0.781, val_loss: 0.434, val_acc: 0.784
Epoch 9, loss: 0.423, acc: 0.800, val_loss: 0.415, val_acc: 0.808
Epoch 10, loss: 0.422, acc: 0.806, val_loss: 0.431, val_acc: 0.806
Epoch 11, loss: 0.415, acc: 0.820, val_loss: 0.400, val_acc: 0.825
Epoch 12, loss: 0.394, acc: 0.826, val_loss: 0.386, val_acc: 0.825
Epoch 13, loss: 0.387, acc: 0.828, val_loss: 0.382, val_acc: 0.827
Epoch 14, loss: 0.384, acc: 0.829, val_loss: 0.377, val_acc: 0.826
Epoch 15, loss: 0.380, acc: 0.828, val_loss: 0.373, val_acc: 0.828
Epoch 16, loss: 0.376, acc: 0.828, val_loss: 0.369, val_acc: 0.830
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.8297251650545063 

315 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.9516351911561493 

Threshold adjusted fairness score :  0.87022265791893
Maximum Difference: 0.12977734
Minimum Difference: 0.0
Average (Mean) Difference: 0.025774257 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 4) 0.1
(4, 4) 0.5
(4, 4) 0.5
(4, 4) 0.5
(4, 4) 0.5
(4, 2) 0.5
deepbayes: Using implicit prior
(100, 4) 0.1
(4, 4) 0.5
(4, 4) 0.5
(4, 4) 0.5
(4, 4) 0.5
(4, 2) 0.5
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.667, acc: 0.715, val_loss: 0.623, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.581, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.560, acc: 0.759, val_loss: 0.576, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.593, acc: 0.759, val_loss: 0.604, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.599, acc: 0.759, val_loss: 0.587, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.572, acc: 0.759, val_loss: 0.559, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.554, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.558, acc: 0.759, val_loss: 0.564, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.565, acc: 0.759, val_loss: 0.562, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.558, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.554, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.555, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.554, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  1.0
Maximum Difference: 0.0
Minimum Difference: 0.0
Average (Mean) Difference: 0.0 

>> Writing out to dataframe ...
> Done.
Trial complete!

  0%|          | 0/5 [00:00<?, ?it/s] 20%|██        | 1/5 [05:43<22:54, 343.59s/it]Network : L 1 N 2
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 2) 0.1
(2, 2) 0.7071067811865476
deepbayes: Using implicit prior
(100, 2) 0.1
(2, 2) 0.7071067811865476
Epoch 1, loss: 0.682, acc: 0.580, val_loss: 0.636, val_acc: 0.759
Epoch 2, loss: 0.587, acc: 0.759, val_loss: 0.543, val_acc: 0.759
Epoch 3, loss: 0.540, acc: 0.759, val_loss: 0.529, val_acc: 0.759
Epoch 4, loss: 0.509, acc: 0.759, val_loss: 0.504, val_acc: 0.759
Epoch 5, loss: 0.506, acc: 0.759, val_loss: 0.501, val_acc: 0.759
Epoch 6, loss: 0.495, acc: 0.759, val_loss: 0.481, val_acc: 0.759
Epoch 7, loss: 0.472, acc: 0.759, val_loss: 0.455, val_acc: 0.759
Epoch 8, loss: 0.449, acc: 0.759, val_loss: 0.433, val_acc: 0.759
Epoch 9, loss: 0.433, acc: 0.759, val_loss: 0.420, val_acc: 0.759
Epoch 10, loss: 0.428, acc: 0.759, val_loss: 0.420, val_acc: 0.759
Epoch 11, loss: 0.432, acc: 0.721, val_loss: 0.426, val_acc: 0.709
Epoch 12, loss: 0.438, acc: 0.705, val_loss: 0.429, val_acc: 0.709
Epoch 13, loss: 0.439, acc: 0.707, val_loss: 0.427, val_acc: 0.713
Epoch 14, loss: 0.435, acc: 0.712, val_loss: 0.422, val_acc: 0.715
Epoch 15, loss: 0.428, acc: 0.715, val_loss: 0.417, val_acc: 0.718
Epoch 16, loss: 0.423, acc: 0.754, val_loss: 0.413, val_acc: 0.759
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.773793637752533
Maximum Difference: 0.22620636
Minimum Difference: 0.0
Average (Mean) Difference: 0.013761287 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 2) 0.1
(2, 2) 0.7071067811865476
deepbayes: Using implicit prior
(100, 2) 0.1
(2, 2) 0.7071067811865476
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.630, acc: 0.627, val_loss: 0.619, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.609, acc: 0.759, val_loss: 0.665, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.566, acc: 0.759, val_loss: 0.581, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.590, acc: 0.759, val_loss: 0.593, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.578, acc: 0.759, val_loss: 0.565, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.555, acc: 0.759, val_loss: 0.576, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.566, acc: 0.759, val_loss: 0.591, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.563, acc: 0.759, val_loss: 0.563, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.553, acc: 0.759, val_loss: 0.550, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.553, acc: 0.759, val_loss: 0.548, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.553, acc: 0.759, val_loss: 0.550, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.553, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.924507200717926
Maximum Difference: 0.0754928
Minimum Difference: 0.0
Average (Mean) Difference: 1.1591094e-05 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 2 N 2
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 2) 0.1
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
deepbayes: Using implicit prior
(100, 2) 0.1
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
Epoch 1, loss: 0.680, acc: 0.657, val_loss: 0.643, val_acc: 0.760
Epoch 2, loss: 0.605, acc: 0.759, val_loss: 0.571, val_acc: 0.759
Epoch 3, loss: 0.557, acc: 0.759, val_loss: 0.553, val_acc: 0.759
Epoch 4, loss: 0.562, acc: 0.759, val_loss: 0.574, val_acc: 0.759
Epoch 5, loss: 0.586, acc: 0.759, val_loss: 0.594, val_acc: 0.759
Epoch 6, loss: 0.597, acc: 0.759, val_loss: 0.595, val_acc: 0.759
Epoch 7, loss: 0.589, acc: 0.759, val_loss: 0.579, val_acc: 0.759
Epoch 8, loss: 0.569, acc: 0.759, val_loss: 0.560, val_acc: 0.759
Epoch 9, loss: 0.555, acc: 0.759, val_loss: 0.552, val_acc: 0.759
Epoch 10, loss: 0.554, acc: 0.759, val_loss: 0.557, val_acc: 0.759
Epoch 11, loss: 0.561, acc: 0.759, val_loss: 0.565, val_acc: 0.759
Epoch 12, loss: 0.565, acc: 0.759, val_loss: 0.564, val_acc: 0.759
Epoch 13, loss: 0.562, acc: 0.759, val_loss: 0.558, val_acc: 0.759
Epoch 14, loss: 0.555, acc: 0.759, val_loss: 0.553, val_acc: 0.759
Epoch 15, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759
Epoch 16, loss: 0.554, acc: 0.759, val_loss: 0.555, val_acc: 0.759
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9865946769714355
Maximum Difference: 0.013405323
Minimum Difference: 0.0
Average (Mean) Difference: 2.0582409e-06 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 2) 0.1
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
deepbayes: Using implicit prior
(100, 2) 0.1
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.599, acc: 0.741, val_loss: 0.624, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.595, acc: 0.759, val_loss: 0.569, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.579, acc: 0.759, val_loss: 0.591, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.572, acc: 0.759, val_loss: 0.560, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.559, acc: 0.759, val_loss: 0.578, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.559, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.559, acc: 0.759, val_loss: 0.562, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.557, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.557, acc: 0.759, val_loss: 0.562, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.557, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.556, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.553, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.554, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.554, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.552, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy:  40%|████      | 2/5 [12:36<19:12, 384.09s/it] 60%|██████    | 3/5 [20:31<14:11, 425.90s/it]0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9959008097648621
Maximum Difference: 0.0040991902
Minimum Difference: 0.0
Average (Mean) Difference: 0.0013268695 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 3 N 2
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 2) 0.1
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
deepbayes: Using implicit prior
(100, 2) 0.1
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
Epoch 1, loss: 0.678, acc: 0.665, val_loss: 0.645, val_acc: 0.759
Epoch 2, loss: 0.607, acc: 0.759, val_loss: 0.572, val_acc: 0.759
Epoch 3, loss: 0.558, acc: 0.759, val_loss: 0.552, val_acc: 0.759
Epoch 4, loss: 0.562, acc: 0.759, val_loss: 0.573, val_acc: 0.759
Epoch 5, loss: 0.585, acc: 0.759, val_loss: 0.594, val_acc: 0.759
Epoch 6, loss: 0.597, acc: 0.759, val_loss: 0.595, val_acc: 0.759
Epoch 7, loss: 0.588, acc: 0.759, val_loss: 0.579, val_acc: 0.759
Epoch 8, loss: 0.569, acc: 0.759, val_loss: 0.560, val_acc: 0.759
Epoch 9, loss: 0.555, acc: 0.759, val_loss: 0.552, val_acc: 0.759
Epoch 10, loss: 0.553, acc: 0.759, val_loss: 0.557, val_acc: 0.759
Epoch 11, loss: 0.561, acc: 0.759, val_loss: 0.564, val_acc: 0.759
Epoch 12, loss: 0.565, acc: 0.759, val_loss: 0.564, val_acc: 0.759
Epoch 13, loss: 0.561, acc: 0.759, val_loss: 0.557, val_acc: 0.759
Epoch 14, loss: 0.554, acc: 0.759, val_loss: 0.551, val_acc: 0.759
Epoch 15, loss: 0.551, acc: 0.759, val_loss: 0.550, val_acc: 0.759
Epoch 16, loss: 0.551, acc: 0.759, val_loss: 0.551, val_acc: 0.759
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9941263794898987
Maximum Difference: 0.0058736205
Minimum Difference: 0.0
Average (Mean) Difference: 0.00016838098 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 2) 0.1
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
deepbayes: Using implicit prior
(100, 2) 0.1
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.675, acc: 0.702, val_loss: 0.644, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.604, acc: 0.759, val_loss: 0.575, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.558, acc: 0.759, val_loss: 0.568, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.572, acc: 0.759, val_loss: 0.598, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.591, acc: 0.759, val_loss: 0.597, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.582, acc: 0.759, val_loss: 0.581, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.573, acc: 0.759, val_loss: 0.567, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.561, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.554, acc: 0.759, val_loss: 0.557, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.559, acc: 0.759, val_loss: 0.561, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.561, acc: 0.759, val_loss: 0.559, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.557, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.553, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  1.0
Maximum Difference: 0.0
Minimum Difference: 0.0
Average (Mean) Difference: 0.0 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 4 N 2
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 2) 0.1
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
deepbayes: Using implicit prior
(100, 2) 0.1
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
Epoch 1, loss: 0.676, acc: 0.688, val_loss: 0.645, val_acc: 0.759
Epoch 2, loss: 0.607, acc: 0.759, val_loss: 0.573, val_acc: 0.759
Epoch 3, loss: 0.558, acc: 0.759, val_loss: 0.552, val_acc: 0.759
Epoch 4, loss: 0.561, acc: 0.759, val_loss: 0.573, val_acc: 0.759
Epoch 5, loss: 0.585, acc: 0.759, val_loss: 0.593, val_acc: 0.759
Epoch 6, loss: 0.596, acc: 0.759, val_loss: 0.595, val_acc: 0.759
Epoch 7, loss: 0.588, acc: 0.759, val_loss: 0.579, val_acc: 0.759
Epoch 8, loss: 0.570, acc: 0.759, val_loss: 0.560, val_acc: 0.759
Epoch 9, loss: 0.555, acc: 0.759, val_loss: 0.552, val_acc: 0.759
Epoch 10, loss: 0.554, acc: 0.759, val_loss: 0.557, val_acc: 0.759
Epoch 11, loss: 0.561, acc: 0.759, val_loss: 0.564, val_acc: 0.759
Epoch 12, loss: 0.565, acc: 0.759, val_loss: 0.565, val_acc: 0.759
Epoch 13, loss: 0.562, acc: 0.759, val_loss: 0.558, val_acc: 0.759
Epoch 14, loss: 0.555, acc: 0.759, val_loss: 0.553, val_acc: 0.759
Epoch 15, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759
Epoch 16, loss: 0.553, acc: 0.759, val_loss: 0.554, val_acc: 0.759
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.998888373374939
Maximum Difference: 0.0011116266
Minimum Difference: 0.0
Average (Mean) Difference: 4.993606e-05 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 2) 0.1
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
deepbayes: Using implicit prior
(100, 2) 0.1
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.671, acc: 0.703, val_loss: 0.632, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.589, acc: 0.759, val_loss: 0.558, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.556, acc: 0.759, val_loss: 0.568, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.584, acc: 0.759, val_loss: 0.600, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.599, acc: 0.759, val_loss: 0.596, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.581, acc: 0.759, val_loss: 0.569, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.559, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.553, acc: 0.759, val_loss: 0.556, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.560, acc: 0.759, val_loss: 0.564, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.565, acc: 0.759, val_loss: 0.564, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
 80%|████████  | 4/5 [29:34<07:51, 471.89s/it]100%|██████████| 5/5 [39:42<00:00, 521.01s/it]100%|██████████| 5/5 [39:42<00:00, 476.44s/it]
Epoch 11, loss: 0.561, acc: 0.759, val_loss: 0.557, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.555, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.552, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.554, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.556, acc: 0.759, val_loss: 0.556, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.556, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9999456405639648
Maximum Difference: 5.4359436e-05
Minimum Difference: 0.0
Average (Mean) Difference: 4.242701e-08 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 5 N 2
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 2) 0.1
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
deepbayes: Using implicit prior
(100, 2) 0.1
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
Epoch 1, loss: 0.632, acc: 0.741, val_loss: 0.561, val_acc: 0.759
Epoch 2, loss: 0.560, acc: 0.759, val_loss: 0.583, val_acc: 0.759
Epoch 3, loss: 0.580, acc: 0.759, val_loss: 0.557, val_acc: 0.759
Epoch 4, loss: 0.543, acc: 0.759, val_loss: 0.536, val_acc: 0.759
Epoch 5, loss: 0.541, acc: 0.759, val_loss: 0.543, val_acc: 0.759
Epoch 6, loss: 0.527, acc: 0.759, val_loss: 0.500, val_acc: 0.759
Epoch 7, loss: 0.479, acc: 0.759, val_loss: 0.470, val_acc: 0.759
Epoch 8, loss: 0.471, acc: 0.759, val_loss: 0.452, val_acc: 0.759
Epoch 9, loss: 0.435, acc: 0.759, val_loss: 0.426, val_acc: 0.759
Epoch 10, loss: 0.433, acc: 0.746, val_loss: 0.431, val_acc: 0.719
Epoch 11, loss: 0.435, acc: 0.716, val_loss: 0.428, val_acc: 0.719
Epoch 12, loss: 0.437, acc: 0.719, val_loss: 0.430, val_acc: 0.721
Epoch 13, loss: 0.435, acc: 0.722, val_loss: 0.423, val_acc: 0.727
Epoch 14, loss: 0.427, acc: 0.730, val_loss: 0.418, val_acc: 0.739
Epoch 15, loss: 0.420, acc: 0.753, val_loss: 0.413, val_acc: 0.759
Epoch 16, loss: 0.414, acc: 0.759, val_loss: 0.417, val_acc: 0.759
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.7790296077728271
Maximum Difference: 0.22097039
Minimum Difference: 0.0
Average (Mean) Difference: 0.010684371 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 2) 0.1
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
deepbayes: Using implicit prior
(100, 2) 0.1
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.674, acc: 0.721, val_loss: 0.640, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.599, acc: 0.759, val_loss: 0.564, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.555, acc: 0.759, val_loss: 0.558, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.573, acc: 0.759, val_loss: 0.587, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.595, acc: 0.759, val_loss: 0.597, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.590, acc: 0.759, val_loss: 0.579, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.568, acc: 0.759, val_loss: 0.559, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.554, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.554, acc: 0.759, val_loss: 0.557, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.560, acc: 0.759, val_loss: 0.561, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.561, acc: 0.759, val_loss: 0.559, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.557, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.552, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.554, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.554, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  1.0
Maximum Difference: 0.0
Minimum Difference: 0.0
Average (Mean) Difference: 0.0 

>> Writing out to dataframe ...
> Done.
Trial complete!

>> Models tested. Writing out to file ...
Epsilon= 0.0  testing complete.
> Testing epsilon= 0.05
  0%|          | 0/5 [00:00<?, ?it/s] 20%|██        | 1/5 [05:50<23:21, 350.48s/it]Network : L 1 N 64
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 64) 0.1
(64, 2) 0.125
deepbayes: Using implicit prior
(100, 64) 0.1
(64, 2) 0.125
Epoch 1, loss: 0.657, acc: 0.658, val_loss: 0.564, val_acc: 0.759
Epoch 2, loss: 0.486, acc: 0.759, val_loss: 0.475, val_acc: 0.760
Epoch 3, loss: 0.444, acc: 0.760, val_loss: 0.434, val_acc: 0.766
Epoch 4, loss: 0.419, acc: 0.784, val_loss: 0.419, val_acc: 0.757
Epoch 5, loss: 0.407, acc: 0.803, val_loss: 0.400, val_acc: 0.820
Epoch 6, loss: 0.395, acc: 0.811, val_loss: 0.386, val_acc: 0.810
Epoch 7, loss: 0.387, acc: 0.818, val_loss: 0.373, val_acc: 0.821
Epoch 8, loss: 0.374, acc: 0.826, val_loss: 0.362, val_acc: 0.827
Epoch 9, loss: 0.370, acc: 0.830, val_loss: 0.357, val_acc: 0.832
Epoch 10, loss: 0.364, acc: 0.829, val_loss: 0.351, val_acc: 0.835
Epoch 11, loss: 0.360, acc: 0.832, val_loss: 0.351, val_acc: 0.834
Epoch 12, loss: 0.357, acc: 0.833, val_loss: 0.349, val_acc: 0.836
Epoch 13, loss: 0.352, acc: 0.835, val_loss: 0.345, val_acc: 0.836
Epoch 14, loss: 0.351, acc: 0.836, val_loss: 0.342, val_acc: 0.836
Epoch 15, loss: 0.348, acc: 0.838, val_loss: 0.340, val_acc: 0.836
Epoch 16, loss: 0.346, acc: 0.838, val_loss: 0.339, val_acc: 0.838
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.8375556579149394 

2239 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.6562260095194227 

Threshold adjusted fairness score :  0.4573124647140503
Maximum Difference: 0.54268754
Minimum Difference: 0.00038564205
Average (Mean) Difference: 0.18366022 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 64) 0.1
(64, 2) 0.125
deepbayes: Using implicit prior
(100, 64) 0.1
(64, 2) 0.125
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.677, acc: 0.635, val_loss: 0.831, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.618, acc: 0.759, val_loss: 0.570, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.578, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.559, acc: 0.759, val_loss: 0.577, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.574, acc: 0.759, val_loss: 0.569, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.556, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.562, acc: 0.759, val_loss: 0.563, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.559, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.555, acc: 0.759, val_loss: 0.560, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.560, acc: 0.759, val_loss: 0.556, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.556, acc: 0.759, val_loss: 0.556, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.554, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.554, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.555, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9671491980552673
Maximum Difference: 0.032850802
Minimum Difference: 0.0
Average (Mean) Difference: 0.0025244504 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 2 N 64
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 64) 0.1
(64, 64) 0.125
(64, 2) 0.125
deepbayes: Using implicit prior
(100, 64) 0.1
(64, 64) 0.125
(64, 2) 0.125
Epoch 1, loss: 0.616, acc: 0.693, val_loss: 0.580, val_acc: 0.759
Epoch 2, loss: 0.518, acc: 0.759, val_loss: 0.504, val_acc: 0.759
Epoch 3, loss: 0.456, acc: 0.759, val_loss: 0.425, val_acc: 0.759
Epoch 4, loss: 0.421, acc: 0.771, val_loss: 0.407, val_acc: 0.783
Epoch 5, loss: 0.405, acc: 0.818, val_loss: 0.377, val_acc: 0.824
Epoch 6, loss: 0.394, acc: 0.815, val_loss: 0.387, val_acc: 0.817
Epoch 7, loss: 0.385, acc: 0.818, val_loss: 0.374, val_acc: 0.821
Epoch 8, loss: 0.376, acc: 0.826, val_loss: 0.367, val_acc: 0.829
Epoch 9, loss: 0.368, acc: 0.826, val_loss: 0.361, val_acc: 0.826
Epoch 10, loss: 0.367, acc: 0.828, val_loss: 0.361, val_acc: 0.828
Epoch 11, loss: 0.363, acc: 0.830, val_loss: 0.352, val_acc: 0.829
Epoch 12, loss: 0.358, acc: 0.832, val_loss: 0.350, val_acc: 0.831
Epoch 13, loss: 0.356, acc: 0.834, val_loss: 0.347, val_acc: 0.836
Epoch 14, loss: 0.353, acc: 0.835, val_loss: 0.343, val_acc: 0.838
Epoch 15, loss: 0.349, acc: 0.836, val_loss: 0.342, val_acc: 0.836
Epoch 16, loss: 0.348, acc: 0.838, val_loss: 0.340, val_acc: 0.839
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.8392445877475817 

2213 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.6602180254874865 

Threshold adjusted fairness score :  0.5037184357643127
Maximum Difference: 0.49628156
Minimum Difference: 0.0004669428
Average (Mean) Difference: 0.1761762 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 64) 0.1
(64, 64) 0.125
(64, 2) 0.125
deepbayes: Using implicit prior
(100, 64) 0.1
(64, 64) 0.125
(64, 2) 0.125
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.615, acc: 0.742, val_loss: 0.704, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.578, acc: 0.759, val_loss: 0.581, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.565, acc: 0.759, val_loss: 0.567, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.569, acc: 0.759, val_loss: 0.576, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.556, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.558, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.554, acc: 0.759, val_loss: 0.557, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.555, acc: 0.759, val_loss: 0.557, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.553, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.554, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.553, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.552, acc: 0.759, val_loss: 0.550, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.552, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.552, acc: 0.759, val_loss: 0.550, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.552, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
 40%|████      | 2/5 [12:52<19:38, 392.82s/it] 60%|██████    | 3/5 [21:08<14:39, 439.62s/it]Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9697282314300537
Maximum Difference: 0.030271769
Minimum Difference: 0.0
Average (Mean) Difference: 0.005965607 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 3 N 64
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 64) 0.1
(64, 64) 0.125
(64, 64) 0.125
(64, 2) 0.125
deepbayes: Using implicit prior
(100, 64) 0.1
(64, 64) 0.125
(64, 64) 0.125
(64, 2) 0.125
Epoch 1, loss: 0.639, acc: 0.640, val_loss: 0.575, val_acc: 0.759
Epoch 2, loss: 0.523, acc: 0.759, val_loss: 0.502, val_acc: 0.759
Epoch 3, loss: 0.457, acc: 0.760, val_loss: 0.418, val_acc: 0.768
Epoch 4, loss: 0.433, acc: 0.777, val_loss: 0.433, val_acc: 0.821
Epoch 5, loss: 0.403, acc: 0.813, val_loss: 0.397, val_acc: 0.802
Epoch 6, loss: 0.399, acc: 0.805, val_loss: 0.374, val_acc: 0.827
Epoch 7, loss: 0.381, acc: 0.821, val_loss: 0.371, val_acc: 0.820
Epoch 8, loss: 0.375, acc: 0.826, val_loss: 0.372, val_acc: 0.820
Epoch 9, loss: 0.376, acc: 0.817, val_loss: 0.364, val_acc: 0.826
Epoch 10, loss: 0.366, acc: 0.829, val_loss: 0.360, val_acc: 0.828
Epoch 11, loss: 0.363, acc: 0.829, val_loss: 0.355, val_acc: 0.831
Epoch 12, loss: 0.359, acc: 0.834, val_loss: 0.349, val_acc: 0.832
Epoch 13, loss: 0.355, acc: 0.834, val_loss: 0.347, val_acc: 0.834
Epoch 14, loss: 0.353, acc: 0.835, val_loss: 0.345, val_acc: 0.833
Epoch 15, loss: 0.352, acc: 0.836, val_loss: 0.344, val_acc: 0.836
Epoch 16, loss: 0.348, acc: 0.836, val_loss: 0.341, val_acc: 0.835
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.8352525717795178 

2094 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.6784891754951635 

Threshold adjusted fairness score :  0.5473394691944122
Maximum Difference: 0.45266053
Minimum Difference: 0.0018771291
Average (Mean) Difference: 0.17595154 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 64) 0.1
(64, 64) 0.125
(64, 64) 0.125
(64, 2) 0.125
deepbayes: Using implicit prior
(100, 64) 0.1
(64, 64) 0.125
(64, 64) 0.125
(64, 2) 0.125
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.614, acc: 0.749, val_loss: 0.683, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.564, acc: 0.759, val_loss: 0.562, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.557, acc: 0.759, val_loss: 0.564, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.559, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.554, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.554, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.553, acc: 0.759, val_loss: 0.556, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.554, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.552, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.554, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9892593622207642
Maximum Difference: 0.010740638
Minimum Difference: 1.6093254e-06
Average (Mean) Difference: 0.0016712621 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 4 N 64
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 64) 0.1
(64, 64) 0.125
(64, 64) 0.125
(64, 64) 0.125
(64, 2) 0.125
deepbayes: Using implicit prior
(100, 64) 0.1
(64, 64) 0.125
(64, 64) 0.125
(64, 64) 0.125
(64, 2) 0.125
Epoch 1, loss: 0.596, acc: 0.747, val_loss: 0.572, val_acc: 0.759
Epoch 2, loss: 0.554, acc: 0.759, val_loss: 0.523, val_acc: 0.759
Epoch 3, loss: 0.508, acc: 0.759, val_loss: 0.453, val_acc: 0.759
Epoch 4, loss: 0.446, acc: 0.764, val_loss: 0.424, val_acc: 0.756
Epoch 5, loss: 0.446, acc: 0.715, val_loss: 0.415, val_acc: 0.774
Epoch 6, loss: 0.423, acc: 0.765, val_loss: 0.422, val_acc: 0.759
Epoch 7, loss: 0.423, acc: 0.759, val_loss: 0.405, val_acc: 0.759
Epoch 8, loss: 0.398, acc: 0.797, val_loss: 0.387, val_acc: 0.817
Epoch 9, loss: 0.387, acc: 0.814, val_loss: 0.371, val_acc: 0.830
Epoch 10, loss: 0.380, acc: 0.822, val_loss: 0.374, val_acc: 0.824
Epoch 11, loss: 0.373, acc: 0.827, val_loss: 0.365, val_acc: 0.831
Epoch 12, loss: 0.369, acc: 0.829, val_loss: 0.358, val_acc: 0.826
Epoch 13, loss: 0.364, acc: 0.829, val_loss: 0.355, val_acc: 0.825
Epoch 14, loss: 0.360, acc: 0.829, val_loss: 0.353, val_acc: 0.827
Epoch 15, loss: 0.356, acc: 0.834, val_loss: 0.350, val_acc: 0.832
Epoch 16, loss: 0.353, acc: 0.836, val_loss: 0.346, val_acc: 0.835
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.8349454936281283 

1867 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.713342545677875 

Threshold adjusted fairness score :  0.4959399104118347
Maximum Difference: 0.5040601
Minimum Difference: 0.0013075471
Average (Mean) Difference: 0.18164794 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 64) 0.1
(64, 64) 0.125
(64, 64) 0.125
(64, 64) 0.125
(64, 2) 0.125
deepbayes: Using implicit prior
(100, 64) 0.1
(64, 64) 0.125
(64, 64) 0.125
(64, 64) 0.125
(64, 2) 0.125
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.625, acc: 0.635, val_loss: 0.583, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.609, acc: 0.759, val_loss: 0.589, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.559, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.561, acc: 0.759, val_loss: 0.557, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.554, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.555, acc: 0.759, val_loss: 0.556, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.554, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.553, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.554, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.554, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
 80%|████████  | 4/5 [30:34<08:09, 489.55s/it]100%|██████████| 5/5 [41:06<00:00, 541.12s/it]100%|██████████| 5/5 [41:06<00:00, 493.38s/it]
Epoch 14, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9988133311271667
Maximum Difference: 0.0011866689
Minimum Difference: 0.0
Average (Mean) Difference: 0.00018576052 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 5 N 64
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 64) 0.1
(64, 64) 0.125
(64, 64) 0.125
(64, 64) 0.125
(64, 64) 0.125
(64, 2) 0.125
deepbayes: Using implicit prior
(100, 64) 0.1
(64, 64) 0.125
(64, 64) 0.125
(64, 64) 0.125
(64, 64) 0.125
(64, 2) 0.125
Epoch 1, loss: 0.601, acc: 0.738, val_loss: 0.587, val_acc: 0.759
Epoch 2, loss: 0.568, acc: 0.759, val_loss: 0.537, val_acc: 0.759
Epoch 3, loss: 0.539, acc: 0.759, val_loss: 0.522, val_acc: 0.759
Epoch 4, loss: 0.486, acc: 0.759, val_loss: 0.445, val_acc: 0.759
Epoch 5, loss: 0.441, acc: 0.741, val_loss: 0.435, val_acc: 0.707
Epoch 6, loss: 0.443, acc: 0.722, val_loss: 0.419, val_acc: 0.759
Epoch 7, loss: 0.427, acc: 0.759, val_loss: 0.417, val_acc: 0.759
Epoch 8, loss: 0.424, acc: 0.759, val_loss: 0.414, val_acc: 0.759
Epoch 9, loss: 0.408, acc: 0.770, val_loss: 0.398, val_acc: 0.819
Epoch 10, loss: 0.393, acc: 0.813, val_loss: 0.389, val_acc: 0.825
Epoch 11, loss: 0.384, acc: 0.821, val_loss: 0.374, val_acc: 0.827
Epoch 12, loss: 0.377, acc: 0.827, val_loss: 0.369, val_acc: 0.827
Epoch 13, loss: 0.371, acc: 0.828, val_loss: 0.358, val_acc: 0.829
Epoch 14, loss: 0.364, acc: 0.829, val_loss: 0.355, val_acc: 0.829
Epoch 15, loss: 0.361, acc: 0.831, val_loss: 0.353, val_acc: 0.828
Epoch 16, loss: 0.358, acc: 0.833, val_loss: 0.347, val_acc: 0.834
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.8335636419468755 

1772 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.7279287578688776 

Threshold adjusted fairness score :  0.5134259462356567
Maximum Difference: 0.48657405
Minimum Difference: 0.0004991889
Average (Mean) Difference: 0.15635943 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 64) 0.1
(64, 64) 0.125
(64, 64) 0.125
(64, 64) 0.125
(64, 64) 0.125
(64, 2) 0.125
deepbayes: Using implicit prior
(100, 64) 0.1
(64, 64) 0.125
(64, 64) 0.125
(64, 64) 0.125
(64, 64) 0.125
(64, 2) 0.125
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.609, acc: 0.728, val_loss: 0.577, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.604, acc: 0.759, val_loss: 0.574, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.557, acc: 0.759, val_loss: 0.563, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.561, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.554, acc: 0.759, val_loss: 0.558, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.558, acc: 0.759, val_loss: 0.556, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.555, acc: 0.759, val_loss: 0.556, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.554, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.554, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.554, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.552, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9996225833892822
Maximum Difference: 0.0003774166
Minimum Difference: 0.0
Average (Mean) Difference: 5.5593206e-05 

>> Writing out to dataframe ...
> Done.
Trial complete!

  0%|          | 0/5 [00:00<?, ?it/s] 20%|██        | 1/5 [05:47<23:08, 347.10s/it]Network : L 1 N 32
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 32) 0.1
(32, 2) 0.1767766952966369
deepbayes: Using implicit prior
(100, 32) 0.1
(32, 2) 0.1767766952966369
Epoch 1, loss: 0.622, acc: 0.669, val_loss: 0.586, val_acc: 0.759
Epoch 2, loss: 0.511, acc: 0.759, val_loss: 0.465, val_acc: 0.759
Epoch 3, loss: 0.447, acc: 0.782, val_loss: 0.415, val_acc: 0.784
Epoch 4, loss: 0.414, acc: 0.800, val_loss: 0.411, val_acc: 0.800
Epoch 5, loss: 0.419, acc: 0.807, val_loss: 0.409, val_acc: 0.828
Epoch 6, loss: 0.397, acc: 0.818, val_loss: 0.376, val_acc: 0.819
Epoch 7, loss: 0.381, acc: 0.823, val_loss: 0.374, val_acc: 0.826
Epoch 8, loss: 0.380, acc: 0.823, val_loss: 0.369, val_acc: 0.824
Epoch 9, loss: 0.369, acc: 0.826, val_loss: 0.357, val_acc: 0.827
Epoch 10, loss: 0.366, acc: 0.826, val_loss: 0.359, val_acc: 0.830
Epoch 11, loss: 0.365, acc: 0.832, val_loss: 0.354, val_acc: 0.828
Epoch 12, loss: 0.359, acc: 0.831, val_loss: 0.350, val_acc: 0.836
Epoch 13, loss: 0.355, acc: 0.834, val_loss: 0.350, val_acc: 0.836
Epoch 14, loss: 0.355, acc: 0.835, val_loss: 0.349, val_acc: 0.836
Epoch 15, loss: 0.352, acc: 0.836, val_loss: 0.344, val_acc: 0.835
Epoch 16, loss: 0.350, acc: 0.837, val_loss: 0.343, val_acc: 0.836
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.8361738062336864 

1984 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.6953784738215876 

Threshold adjusted fairness score :  0.5049833655357361
Maximum Difference: 0.49501663
Minimum Difference: 0.00068849325
Average (Mean) Difference: 0.17756039 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 32) 0.1
(32, 2) 0.1767766952966369
deepbayes: Using implicit prior
(100, 32) 0.1
(32, 2) 0.1767766952966369
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.670, acc: 0.587, val_loss: 0.699, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.631, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.586, acc: 0.759, val_loss: 0.556, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.561, acc: 0.759, val_loss: 0.588, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.574, acc: 0.759, val_loss: 0.586, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.558, acc: 0.759, val_loss: 0.557, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.556, acc: 0.759, val_loss: 0.558, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.563, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.554, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.556, acc: 0.759, val_loss: 0.561, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.558, acc: 0.759, val_loss: 0.556, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.553, acc: 0.759, val_loss: 0.550, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.554, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.555, acc: 0.759, val_loss: 0.550, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.552, acc: 0.759, val_loss: 0.550, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.554, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9156312346458435
Maximum Difference: 0.084368765
Minimum Difference: 0.0
Average (Mean) Difference: 0.005823586 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 2 N 32
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 32) 0.1
(32, 32) 0.1767766952966369
(32, 2) 0.1767766952966369
deepbayes: Using implicit prior
(100, 32) 0.1
(32, 32) 0.1767766952966369
(32, 2) 0.1767766952966369
Epoch 1, loss: 0.564, acc: 0.756, val_loss: 0.501, val_acc: 0.759
Epoch 2, loss: 0.447, acc: 0.790, val_loss: 0.402, val_acc: 0.814
Epoch 3, loss: 0.412, acc: 0.806, val_loss: 0.413, val_acc: 0.790
Epoch 4, loss: 0.399, acc: 0.820, val_loss: 0.377, val_acc: 0.822
Epoch 5, loss: 0.390, acc: 0.817, val_loss: 0.372, val_acc: 0.829
Epoch 6, loss: 0.373, acc: 0.826, val_loss: 0.366, val_acc: 0.828
Epoch 7, loss: 0.368, acc: 0.828, val_loss: 0.363, val_acc: 0.828
Epoch 8, loss: 0.363, acc: 0.830, val_loss: 0.355, val_acc: 0.829
Epoch 9, loss: 0.360, acc: 0.832, val_loss: 0.355, val_acc: 0.832
Epoch 10, loss: 0.357, acc: 0.834, val_loss: 0.348, val_acc: 0.834
Epoch 11, loss: 0.354, acc: 0.836, val_loss: 0.347, val_acc: 0.834
Epoch 12, loss: 0.351, acc: 0.836, val_loss: 0.344, val_acc: 0.837
Epoch 13, loss: 0.348, acc: 0.837, val_loss: 0.340, val_acc: 0.837
Epoch 14, loss: 0.347, acc: 0.838, val_loss: 0.340, val_acc: 0.837
Epoch 15, loss: 0.346, acc: 0.839, val_loss: 0.339, val_acc: 0.838
Epoch 16, loss: 0.345, acc: 0.840, val_loss: 0.336, val_acc: 0.839
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.8387839705204975 

2558 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.6072470443727929 

Threshold adjusted fairness score :  0.4367014169692993
Maximum Difference: 0.5632986
Minimum Difference: 0.00079888105
Average (Mean) Difference: 0.22559087 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 32) 0.1
(32, 32) 0.1767766952966369
(32, 2) 0.1767766952966369
deepbayes: Using implicit prior
(100, 32) 0.1
(32, 32) 0.1767766952966369
(32, 2) 0.1767766952966369
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.617, acc: 0.721, val_loss: 0.667, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.581, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.560, acc: 0.759, val_loss: 0.558, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.555, acc: 0.759, val_loss: 0.569, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.555, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.554, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.553, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.554, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.
 40%|████      | 2/5 [12:42<19:22, 387.37s/it] 60%|██████    | 3/5 [20:44<14:21, 430.73s/it]
 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9835108518600464
Maximum Difference: 0.016489148
Minimum Difference: 0.0
Average (Mean) Difference: 2.8142471e-05 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 3 N 32
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 32) 0.1
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 2) 0.1767766952966369
deepbayes: Using implicit prior
(100, 32) 0.1
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 2) 0.1767766952966369
Epoch 1, loss: 0.612, acc: 0.694, val_loss: 0.570, val_acc: 0.759
Epoch 2, loss: 0.561, acc: 0.759, val_loss: 0.527, val_acc: 0.759
Epoch 3, loss: 0.523, acc: 0.759, val_loss: 0.509, val_acc: 0.759
Epoch 4, loss: 0.474, acc: 0.759, val_loss: 0.449, val_acc: 0.759
Epoch 5, loss: 0.430, acc: 0.763, val_loss: 0.418, val_acc: 0.746
Epoch 6, loss: 0.437, acc: 0.710, val_loss: 0.429, val_acc: 0.712
Epoch 7, loss: 0.431, acc: 0.747, val_loss: 0.410, val_acc: 0.760
Epoch 8, loss: 0.415, acc: 0.759, val_loss: 0.405, val_acc: 0.759
Epoch 9, loss: 0.411, acc: 0.761, val_loss: 0.396, val_acc: 0.775
Epoch 10, loss: 0.393, acc: 0.809, val_loss: 0.381, val_acc: 0.824
Epoch 11, loss: 0.388, acc: 0.813, val_loss: 0.379, val_acc: 0.823
Epoch 12, loss: 0.379, acc: 0.824, val_loss: 0.367, val_acc: 0.825
Epoch 13, loss: 0.373, acc: 0.826, val_loss: 0.367, val_acc: 0.825
Epoch 14, loss: 0.367, acc: 0.828, val_loss: 0.357, val_acc: 0.826
Epoch 15, loss: 0.365, acc: 0.829, val_loss: 0.356, val_acc: 0.826
Epoch 16, loss: 0.361, acc: 0.830, val_loss: 0.352, val_acc: 0.830
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.8300322432058959 

2012 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.6910793797021342 

Threshold adjusted fairness score :  0.613811194896698
Maximum Difference: 0.3861888
Minimum Difference: 0.0020086765
Average (Mean) Difference: 0.14079647 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 32) 0.1
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 2) 0.1767766952966369
deepbayes: Using implicit prior
(100, 32) 0.1
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 2) 0.1767766952966369
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.606, acc: 0.752, val_loss: 0.628, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.585, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.559, acc: 0.759, val_loss: 0.557, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.555, acc: 0.759, val_loss: 0.556, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.557, acc: 0.759, val_loss: 0.563, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.555, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.554, acc: 0.759, val_loss: 0.556, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.555, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.553, acc: 0.759, val_loss: 0.556, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.554, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.552, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.554, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.552, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9861061573028564
Maximum Difference: 0.013893843
Minimum Difference: 1.7881393e-07
Average (Mean) Difference: 0.0034026864 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 4 N 32
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 32) 0.1
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 2) 0.1767766952966369
deepbayes: Using implicit prior
(100, 32) 0.1
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 2) 0.1767766952966369
Epoch 1, loss: 0.593, acc: 0.757, val_loss: 0.579, val_acc: 0.759
Epoch 2, loss: 0.555, acc: 0.759, val_loss: 0.524, val_acc: 0.759
Epoch 3, loss: 0.530, acc: 0.759, val_loss: 0.509, val_acc: 0.759
Epoch 4, loss: 0.485, acc: 0.759, val_loss: 0.453, val_acc: 0.759
Epoch 5, loss: 0.433, acc: 0.759, val_loss: 0.426, val_acc: 0.759
Epoch 6, loss: 0.436, acc: 0.736, val_loss: 0.433, val_acc: 0.715
Epoch 7, loss: 0.440, acc: 0.715, val_loss: 0.421, val_acc: 0.761
Epoch 8, loss: 0.424, acc: 0.769, val_loss: 0.410, val_acc: 0.759
Epoch 9, loss: 0.417, acc: 0.759, val_loss: 0.415, val_acc: 0.759
Epoch 10, loss: 0.417, acc: 0.759, val_loss: 0.404, val_acc: 0.759
Epoch 11, loss: 0.399, acc: 0.787, val_loss: 0.385, val_acc: 0.817
Epoch 12, loss: 0.387, acc: 0.813, val_loss: 0.376, val_acc: 0.828
Epoch 13, loss: 0.376, acc: 0.822, val_loss: 0.364, val_acc: 0.829
Epoch 14, loss: 0.372, acc: 0.825, val_loss: 0.363, val_acc: 0.830
Epoch 15, loss: 0.367, acc: 0.828, val_loss: 0.358, val_acc: 0.828
Epoch 16, loss: 0.363, acc: 0.831, val_loss: 0.354, val_acc: 0.831
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.8314140948871488 

1996 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.6935360049132504 

Threshold adjusted fairness score :  0.5363489389419556
Maximum Difference: 0.46365106
Minimum Difference: 0.0016736984
Average (Mean) Difference: 0.13558377 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 32) 0.1
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 2) 0.1767766952966369
deepbayes: Using implicit prior
(100, 32) 0.1
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 2) 0.1767766952966369
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.623, acc: 0.650, val_loss: 0.579, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.595, acc: 0.759, val_loss: 0.607, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.563, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.556, acc: 0.759, val_loss: 0.556, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.554, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.553, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.555, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
 80%|████████  | 4/5 [29:55<07:58, 478.20s/it]100%|██████████| 5/5 [40:13<00:00, 528.38s/it]100%|██████████| 5/5 [40:13<00:00, 482.67s/it]
Epoch 8, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.553, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.998737096786499
Maximum Difference: 0.0012629032
Minimum Difference: 3.5762787e-07
Average (Mean) Difference: 0.0004238793 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 5 N 32
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 32) 0.1
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 2) 0.1767766952966369
deepbayes: Using implicit prior
(100, 32) 0.1
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 2) 0.1767766952966369
Epoch 1, loss: 0.603, acc: 0.737, val_loss: 0.558, val_acc: 0.759
Epoch 2, loss: 0.577, acc: 0.759, val_loss: 0.546, val_acc: 0.759
Epoch 3, loss: 0.544, acc: 0.759, val_loss: 0.551, val_acc: 0.759
Epoch 4, loss: 0.531, acc: 0.759, val_loss: 0.502, val_acc: 0.759
Epoch 5, loss: 0.469, acc: 0.759, val_loss: 0.428, val_acc: 0.759
Epoch 6, loss: 0.443, acc: 0.734, val_loss: 0.451, val_acc: 0.707
Epoch 7, loss: 0.437, acc: 0.741, val_loss: 0.426, val_acc: 0.759
Epoch 8, loss: 0.432, acc: 0.759, val_loss: 0.417, val_acc: 0.759
Epoch 9, loss: 0.404, acc: 0.792, val_loss: 0.388, val_acc: 0.819
Epoch 10, loss: 0.389, acc: 0.821, val_loss: 0.377, val_acc: 0.824
Epoch 11, loss: 0.385, acc: 0.821, val_loss: 0.378, val_acc: 0.815
Epoch 12, loss: 0.377, acc: 0.821, val_loss: 0.369, val_acc: 0.830
Epoch 13, loss: 0.375, acc: 0.824, val_loss: 0.363, val_acc: 0.828
Epoch 14, loss: 0.370, acc: 0.828, val_loss: 0.361, val_acc: 0.829
Epoch 15, loss: 0.364, acc: 0.827, val_loss: 0.358, val_acc: 0.830
Epoch 16, loss: 0.361, acc: 0.830, val_loss: 0.354, val_acc: 0.830
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.8295716259788116 

1461 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.7756794104099494 

Threshold adjusted fairness score :  0.5793914198875427
Maximum Difference: 0.42060858
Minimum Difference: 0.0023212433
Average (Mean) Difference: 0.11688908 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 32) 0.1
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 2) 0.1767766952966369
deepbayes: Using implicit prior
(100, 32) 0.1
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 2) 0.1767766952966369
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.601, acc: 0.755, val_loss: 0.622, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.584, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.565, acc: 0.759, val_loss: 0.558, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.556, acc: 0.759, val_loss: 0.559, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.560, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.553, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.556, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.553, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.555, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.554, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.992508053779602
Maximum Difference: 0.007491946
Minimum Difference: 4.708767e-06
Average (Mean) Difference: 0.0019365423 

>> Writing out to dataframe ...
> Done.
Trial complete!

  0%|          | 0/5 [00:00<?, ?it/s] 20%|██        | 1/5 [05:44<22:59, 344.90s/it]Network : L 1 N 16
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 16) 0.1
(16, 2) 0.25
deepbayes: Using implicit prior
(100, 16) 0.1
(16, 2) 0.25
Epoch 1, loss: 0.610, acc: 0.649, val_loss: 0.552, val_acc: 0.759
Epoch 2, loss: 0.524, acc: 0.759, val_loss: 0.458, val_acc: 0.759
Epoch 3, loss: 0.467, acc: 0.759, val_loss: 0.462, val_acc: 0.759
Epoch 4, loss: 0.444, acc: 0.759, val_loss: 0.430, val_acc: 0.759
Epoch 5, loss: 0.431, acc: 0.759, val_loss: 0.417, val_acc: 0.759
Epoch 6, loss: 0.419, acc: 0.763, val_loss: 0.414, val_acc: 0.757
Epoch 7, loss: 0.416, acc: 0.772, val_loss: 0.398, val_acc: 0.801
Epoch 8, loss: 0.404, acc: 0.814, val_loss: 0.395, val_acc: 0.820
Epoch 9, loss: 0.393, acc: 0.811, val_loss: 0.389, val_acc: 0.814
Epoch 10, loss: 0.388, acc: 0.819, val_loss: 0.383, val_acc: 0.823
Epoch 11, loss: 0.382, acc: 0.823, val_loss: 0.372, val_acc: 0.828
Epoch 12, loss: 0.377, acc: 0.825, val_loss: 0.365, val_acc: 0.827
Epoch 13, loss: 0.371, acc: 0.827, val_loss: 0.361, val_acc: 0.827
Epoch 14, loss: 0.370, acc: 0.825, val_loss: 0.360, val_acc: 0.824
Epoch 15, loss: 0.368, acc: 0.829, val_loss: 0.359, val_acc: 0.829
Epoch 16, loss: 0.364, acc: 0.829, val_loss: 0.355, val_acc: 0.829
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.828650391524643 

1930 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.703669583909105 

Threshold adjusted fairness score :  0.5926087200641632
Maximum Difference: 0.40739128
Minimum Difference: 0.0
Average (Mean) Difference: 0.14165935 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 16) 0.1
(16, 2) 0.25
deepbayes: Using implicit prior
(100, 16) 0.1
(16, 2) 0.25
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.663, acc: 0.586, val_loss: 0.654, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.646, acc: 0.759, val_loss: 0.579, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.596, acc: 0.759, val_loss: 0.588, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.562, acc: 0.759, val_loss: 0.566, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.571, acc: 0.759, val_loss: 0.578, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.572, acc: 0.759, val_loss: 0.565, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.557, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.555, acc: 0.759, val_loss: 0.560, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.563, acc: 0.759, val_loss: 0.561, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.557, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.553, acc: 0.759, val_loss: 0.556, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.557, acc: 0.759, val_loss: 0.560, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.556, acc: 0.759, val_loss: 0.556, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.553, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.553, acc: 0.759, val_loss: 0.556, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.555, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9455280303955078
Maximum Difference: 0.05447197
Minimum Difference: 0.0
Average (Mean) Difference: 0.0036918863 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 2 N 16
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 16) 0.1
(16, 16) 0.25
(16, 2) 0.25
deepbayes: Using implicit prior
(100, 16) 0.1
(16, 16) 0.25
(16, 2) 0.25
Epoch 1, loss: 0.608, acc: 0.701, val_loss: 0.553, val_acc: 0.759
Epoch 2, loss: 0.543, acc: 0.759, val_loss: 0.498, val_acc: 0.759
Epoch 3, loss: 0.497, acc: 0.759, val_loss: 0.478, val_acc: 0.759
Epoch 4, loss: 0.453, acc: 0.759, val_loss: 0.433, val_acc: 0.759
Epoch 5, loss: 0.430, acc: 0.771, val_loss: 0.418, val_acc: 0.812
Epoch 6, loss: 0.430, acc: 0.734, val_loss: 0.416, val_acc: 0.724
Epoch 7, loss: 0.417, acc: 0.773, val_loss: 0.412, val_acc: 0.759
Epoch 8, loss: 0.415, acc: 0.774, val_loss: 0.400, val_acc: 0.824
Epoch 9, loss: 0.399, acc: 0.819, val_loss: 0.383, val_acc: 0.822
Epoch 10, loss: 0.388, acc: 0.820, val_loss: 0.378, val_acc: 0.827
Epoch 11, loss: 0.387, acc: 0.823, val_loss: 0.376, val_acc: 0.829
Epoch 12, loss: 0.379, acc: 0.825, val_loss: 0.369, val_acc: 0.828
Epoch 13, loss: 0.375, acc: 0.827, val_loss: 0.367, val_acc: 0.830
Epoch 14, loss: 0.369, acc: 0.829, val_loss: 0.361, val_acc: 0.830
Epoch 15, loss: 0.367, acc: 0.830, val_loss: 0.361, val_acc: 0.828
Epoch 16, loss: 0.365, acc: 0.829, val_loss: 0.360, val_acc: 0.829
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.8289574696760326 

1150 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.8234300629510211 

Threshold adjusted fairness score :  0.5867751836776733
Maximum Difference: 0.41322482
Minimum Difference: 1.3530254e-05
Average (Mean) Difference: 0.0998144 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 16) 0.1
(16, 16) 0.25
(16, 2) 0.25
deepbayes: Using implicit prior
(100, 16) 0.1
(16, 16) 0.25
(16, 2) 0.25
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.637, acc: 0.641, val_loss: 0.573, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.598, acc: 0.759, val_loss: 0.559, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.553, acc: 0.759, val_loss: 0.560, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.553, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.554, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.553, acc: 0.759, val_loss: 0.548, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.552, acc: 0.759, val_loss: 0.545, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.553, acc: 0.759, val_loss: 0.548, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.552, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.553, acc: 0.759, val_loss: 0.557, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.553, acc: 0.759, val_loss: 0.556, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.553, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.552, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.552, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 40%|████      | 2/5 [12:37<19:14, 384.89s/it] 60%|██████    | 3/5 [20:37<14:16, 428.23s/it] 

Threshold adjusted fairness score :  0.9679234623908997
Maximum Difference: 0.032076538
Minimum Difference: 0.00011193752
Average (Mean) Difference: 0.008349038 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 3 N 16
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 16) 0.1
(16, 16) 0.25
(16, 16) 0.25
(16, 2) 0.25
deepbayes: Using implicit prior
(100, 16) 0.1
(16, 16) 0.25
(16, 16) 0.25
(16, 2) 0.25
Epoch 1, loss: 0.617, acc: 0.731, val_loss: 0.548, val_acc: 0.759
Epoch 2, loss: 0.557, acc: 0.759, val_loss: 0.548, val_acc: 0.759
Epoch 3, loss: 0.517, acc: 0.759, val_loss: 0.491, val_acc: 0.759
Epoch 4, loss: 0.455, acc: 0.759, val_loss: 0.425, val_acc: 0.759
Epoch 5, loss: 0.423, acc: 0.793, val_loss: 0.419, val_acc: 0.786
Epoch 6, loss: 0.409, acc: 0.810, val_loss: 0.386, val_acc: 0.825
Epoch 7, loss: 0.393, acc: 0.821, val_loss: 0.389, val_acc: 0.821
Epoch 8, loss: 0.390, acc: 0.820, val_loss: 0.382, val_acc: 0.825
Epoch 9, loss: 0.384, acc: 0.825, val_loss: 0.376, val_acc: 0.827
Epoch 10, loss: 0.378, acc: 0.824, val_loss: 0.373, val_acc: 0.830
Epoch 11, loss: 0.372, acc: 0.827, val_loss: 0.365, val_acc: 0.828
Epoch 12, loss: 0.368, acc: 0.830, val_loss: 0.360, val_acc: 0.829
Epoch 13, loss: 0.365, acc: 0.830, val_loss: 0.359, val_acc: 0.830
Epoch 14, loss: 0.362, acc: 0.829, val_loss: 0.355, val_acc: 0.828
Epoch 15, loss: 0.359, acc: 0.830, val_loss: 0.354, val_acc: 0.831
Epoch 16, loss: 0.358, acc: 0.832, val_loss: 0.351, val_acc: 0.833
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.8326424074927069 

1886 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.7104253032396746 

Threshold adjusted fairness score :  0.6065559685230255
Maximum Difference: 0.39344403
Minimum Difference: 0.0026794076
Average (Mean) Difference: 0.15508337 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 16) 0.1
(16, 16) 0.25
(16, 16) 0.25
(16, 2) 0.25
deepbayes: Using implicit prior
(100, 16) 0.1
(16, 16) 0.25
(16, 16) 0.25
(16, 2) 0.25
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.614, acc: 0.728, val_loss: 0.587, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.593, acc: 0.759, val_loss: 0.568, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.558, acc: 0.759, val_loss: 0.562, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.561, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.554, acc: 0.759, val_loss: 0.559, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.560, acc: 0.759, val_loss: 0.561, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.555, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.555, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.553, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.554, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.552, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.553, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.552, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9849938750267029
Maximum Difference: 0.015006125
Minimum Difference: 1.1324883e-06
Average (Mean) Difference: 0.0022995502 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 4 N 16
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 16) 0.1
(16, 16) 0.25
(16, 16) 0.25
(16, 16) 0.25
(16, 2) 0.25
deepbayes: Using implicit prior
(100, 16) 0.1
(16, 16) 0.25
(16, 16) 0.25
(16, 16) 0.25
(16, 2) 0.25
Epoch 1, loss: 0.598, acc: 0.759, val_loss: 0.549, val_acc: 0.759
Epoch 2, loss: 0.567, acc: 0.759, val_loss: 0.538, val_acc: 0.759
Epoch 3, loss: 0.530, acc: 0.759, val_loss: 0.532, val_acc: 0.759
Epoch 4, loss: 0.521, acc: 0.759, val_loss: 0.494, val_acc: 0.759
Epoch 5, loss: 0.467, acc: 0.759, val_loss: 0.450, val_acc: 0.759
Epoch 6, loss: 0.437, acc: 0.759, val_loss: 0.420, val_acc: 0.759
Epoch 7, loss: 0.433, acc: 0.731, val_loss: 0.433, val_acc: 0.712
Epoch 8, loss: 0.436, acc: 0.718, val_loss: 0.425, val_acc: 0.736
Epoch 9, loss: 0.427, acc: 0.761, val_loss: 0.412, val_acc: 0.783
Epoch 10, loss: 0.413, acc: 0.768, val_loss: 0.409, val_acc: 0.759
Epoch 11, loss: 0.412, acc: 0.759, val_loss: 0.410, val_acc: 0.759
Epoch 12, loss: 0.409, acc: 0.791, val_loss: 0.401, val_acc: 0.817
Epoch 13, loss: 0.399, acc: 0.816, val_loss: 0.390, val_acc: 0.824
Epoch 14, loss: 0.392, acc: 0.812, val_loss: 0.386, val_acc: 0.815
Epoch 15, loss: 0.390, acc: 0.816, val_loss: 0.382, val_acc: 0.817
Epoch 16, loss: 0.384, acc: 0.816, val_loss: 0.376, val_acc: 0.824
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.8241977583294948 

1094 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.8320282511899278 

Threshold adjusted fairness score :  0.6009060144424438
Maximum Difference: 0.399094
Minimum Difference: 0.0
Average (Mean) Difference: 0.093734704 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 16) 0.1
(16, 16) 0.25
(16, 16) 0.25
(16, 16) 0.25
(16, 2) 0.25
deepbayes: Using implicit prior
(100, 16) 0.1
(16, 16) 0.25
(16, 16) 0.25
(16, 16) 0.25
(16, 2) 0.25
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.633, acc: 0.725, val_loss: 0.557, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.576, acc: 0.759, val_loss: 0.620, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.587, acc: 0.759, val_loss: 0.571, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.557, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.556, acc: 0.759, val_loss: 0.559, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.558, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.555, acc: 0.759, val_loss: 0.556, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.555, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.554, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
 80%|████████  | 4/5 [29:45<07:55, 475.46s/it]100%|██████████| 5/5 [39:58<00:00, 525.17s/it]100%|██████████| 5/5 [39:58<00:00, 479.75s/it]
Epoch 14, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9958119988441467
Maximum Difference: 0.004188001
Minimum Difference: 0.0
Average (Mean) Difference: 0.0012668027 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 5 N 16
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 16) 0.1
(16, 16) 0.25
(16, 16) 0.25
(16, 16) 0.25
(16, 16) 0.25
(16, 2) 0.25
deepbayes: Using implicit prior
(100, 16) 0.1
(16, 16) 0.25
(16, 16) 0.25
(16, 16) 0.25
(16, 16) 0.25
(16, 2) 0.25
Epoch 1, loss: 0.646, acc: 0.710, val_loss: 0.575, val_acc: 0.759
Epoch 2, loss: 0.563, acc: 0.759, val_loss: 0.586, val_acc: 0.759
Epoch 3, loss: 0.608, acc: 0.759, val_loss: 0.607, val_acc: 0.759
Epoch 4, loss: 0.582, acc: 0.759, val_loss: 0.561, val_acc: 0.759
Epoch 5, loss: 0.555, acc: 0.759, val_loss: 0.555, val_acc: 0.759
Epoch 6, loss: 0.562, acc: 0.759, val_loss: 0.567, val_acc: 0.759
Epoch 7, loss: 0.564, acc: 0.759, val_loss: 0.558, val_acc: 0.759
Epoch 8, loss: 0.552, acc: 0.759, val_loss: 0.549, val_acc: 0.759
Epoch 9, loss: 0.549, acc: 0.759, val_loss: 0.547, val_acc: 0.759
Epoch 10, loss: 0.535, acc: 0.759, val_loss: 0.519, val_acc: 0.759
Epoch 11, loss: 0.506, acc: 0.772, val_loss: 0.472, val_acc: 0.782
Epoch 12, loss: 0.445, acc: 0.777, val_loss: 0.415, val_acc: 0.821
Epoch 13, loss: 0.421, acc: 0.813, val_loss: 0.428, val_acc: 0.820
Epoch 14, loss: 0.415, acc: 0.822, val_loss: 0.398, val_acc: 0.829
Epoch 15, loss: 0.396, acc: 0.824, val_loss: 0.385, val_acc: 0.823
Epoch 16, loss: 0.386, acc: 0.825, val_loss: 0.384, val_acc: 0.810
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.810379241516966 

2207 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.6611392599416552 

Threshold adjusted fairness score :  0.6481752693653107
Maximum Difference: 0.35182473
Minimum Difference: 0.0
Average (Mean) Difference: 0.15238805 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 16) 0.1
(16, 16) 0.25
(16, 16) 0.25
(16, 16) 0.25
(16, 16) 0.25
(16, 2) 0.25
deepbayes: Using implicit prior
(100, 16) 0.1
(16, 16) 0.25
(16, 16) 0.25
(16, 16) 0.25
(16, 16) 0.25
(16, 2) 0.25
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.590, acc: 0.759, val_loss: 0.665, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.574, acc: 0.759, val_loss: 0.556, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.562, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.554, acc: 0.759, val_loss: 0.556, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.557, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.556, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.553, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.554, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.554, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.552, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.553, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.553, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.552, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9938653111457825
Maximum Difference: 0.006134689
Minimum Difference: 1.3113022e-06
Average (Mean) Difference: 0.0021233207 

>> Writing out to dataframe ...
> Done.
Trial complete!

  0%|          | 0/5 [00:00<?, ?it/s] 20%|██        | 1/5 [05:46<23:04, 346.09s/it]Network : L 1 N 8
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 8) 0.1
(8, 2) 0.3535533905932738
deepbayes: Using implicit prior
(100, 8) 0.1
(8, 2) 0.3535533905932738
Epoch 1, loss: 0.566, acc: 0.745, val_loss: 0.526, val_acc: 0.759
Epoch 2, loss: 0.454, acc: 0.782, val_loss: 0.432, val_acc: 0.811
Epoch 3, loss: 0.416, acc: 0.810, val_loss: 0.402, val_acc: 0.812
Epoch 4, loss: 0.409, acc: 0.815, val_loss: 0.393, val_acc: 0.818
Epoch 5, loss: 0.394, acc: 0.815, val_loss: 0.381, val_acc: 0.818
Epoch 6, loss: 0.385, acc: 0.823, val_loss: 0.378, val_acc: 0.827
Epoch 7, loss: 0.381, acc: 0.822, val_loss: 0.375, val_acc: 0.824
Epoch 8, loss: 0.379, acc: 0.826, val_loss: 0.372, val_acc: 0.828
Epoch 9, loss: 0.373, acc: 0.828, val_loss: 0.365, val_acc: 0.830
Epoch 10, loss: 0.368, acc: 0.829, val_loss: 0.361, val_acc: 0.829
Epoch 11, loss: 0.365, acc: 0.830, val_loss: 0.358, val_acc: 0.828
Epoch 12, loss: 0.363, acc: 0.831, val_loss: 0.357, val_acc: 0.828
Epoch 13, loss: 0.361, acc: 0.830, val_loss: 0.353, val_acc: 0.828
Epoch 14, loss: 0.359, acc: 0.832, val_loss: 0.352, val_acc: 0.831
Epoch 15, loss: 0.356, acc: 0.833, val_loss: 0.349, val_acc: 0.834
Epoch 16, loss: 0.354, acc: 0.834, val_loss: 0.348, val_acc: 0.834
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.8337171810225702 

1742 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.7325349301397206 

Threshold adjusted fairness score :  0.63857302069664
Maximum Difference: 0.36142698
Minimum Difference: 0.0009550452
Average (Mean) Difference: 0.1460577 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 8) 0.1
(8, 2) 0.3535533905932738
deepbayes: Using implicit prior
(100, 8) 0.1
(8, 2) 0.3535533905932738
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.697, acc: 0.547, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.584, acc: 0.759, val_loss: 0.693, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.593, acc: 0.759, val_loss: 0.574, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.558, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.555, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.554, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9929155111312866
Maximum Difference: 0.007084489
Minimum Difference: 0.0
Average (Mean) Difference: 0.00025942436 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 2 N 8
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 8) 0.1
(8, 8) 0.3535533905932738
(8, 2) 0.3535533905932738
deepbayes: Using implicit prior
(100, 8) 0.1
(8, 8) 0.3535533905932738
(8, 2) 0.3535533905932738
Epoch 1, loss: 0.638, acc: 0.691, val_loss: 0.558, val_acc: 0.759
Epoch 2, loss: 0.525, acc: 0.759, val_loss: 0.480, val_acc: 0.759
Epoch 3, loss: 0.452, acc: 0.788, val_loss: 0.421, val_acc: 0.815
Epoch 4, loss: 0.409, acc: 0.811, val_loss: 0.400, val_acc: 0.818
Epoch 5, loss: 0.415, acc: 0.805, val_loss: 0.409, val_acc: 0.823
Epoch 6, loss: 0.395, acc: 0.821, val_loss: 0.371, val_acc: 0.823
Epoch 7, loss: 0.382, acc: 0.824, val_loss: 0.382, val_acc: 0.822
Epoch 8, loss: 0.385, acc: 0.824, val_loss: 0.371, val_acc: 0.828
Epoch 9, loss: 0.378, acc: 0.824, val_loss: 0.373, val_acc: 0.831
Epoch 10, loss: 0.370, acc: 0.823, val_loss: 0.361, val_acc: 0.824
Epoch 11, loss: 0.367, acc: 0.828, val_loss: 0.360, val_acc: 0.826
Epoch 12, loss: 0.366, acc: 0.831, val_loss: 0.361, val_acc: 0.828
Epoch 13, loss: 0.364, acc: 0.831, val_loss: 0.355, val_acc: 0.832
Epoch 14, loss: 0.361, acc: 0.832, val_loss: 0.353, val_acc: 0.830
Epoch 15, loss: 0.360, acc: 0.832, val_loss: 0.354, val_acc: 0.830
Epoch 16, loss: 0.357, acc: 0.833, val_loss: 0.349, val_acc: 0.833
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.8326424074927069 

1829 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.7191770305542761 

Threshold adjusted fairness score :  0.6130357384681702
Maximum Difference: 0.38696426
Minimum Difference: 0.0011939406
Average (Mean) Difference: 0.14538133 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 8) 0.1
(8, 8) 0.3535533905932738
(8, 2) 0.3535533905932738
deepbayes: Using implicit prior
(100, 8) 0.1
(8, 8) 0.3535533905932738
(8, 2) 0.3535533905932738
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.653, acc: 0.752, val_loss: 0.565, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.570, acc: 0.759, val_loss: 0.621, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.586, acc: 0.759, val_loss: 0.587, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.571, acc: 0.759, val_loss: 0.581, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.560, acc: 0.759, val_loss: 0.563, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.554, acc: 0.759, val_loss: 0.563, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.558, acc: 0.759, val_loss: 0.563, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.557, acc: 0.759, val_loss: 0.549, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.554, acc: 0.759, val_loss: 0.550, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.555, acc: 0.759, val_loss: 0.546, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.553, acc: 0.759, val_loss: 0.547, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.552, acc: 0.759, val_loss: 0.549, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.553, acc: 0.759, val_loss: 0.550, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.553, acc: 0.759, val_loss: 0.550, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.552, acc: 0.759, val_loss: 0.550, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.552, acc: 0.759, val_loss: 0.550, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.
 40%|████      | 2/5 [12:40<19:18, 386.00s/it] 60%|██████    | 3/5 [20:42<14:20, 430.26s/it]
 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9812332987785339
Maximum Difference: 0.018766701
Minimum Difference: 0.0
Average (Mean) Difference: 0.0042870766 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 3 N 8
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 8) 0.1
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 2) 0.3535533905932738
deepbayes: Using implicit prior
(100, 8) 0.1
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 2) 0.3535533905932738
Epoch 1, loss: 0.676, acc: 0.576, val_loss: 0.599, val_acc: 0.759
Epoch 2, loss: 0.564, acc: 0.759, val_loss: 0.553, val_acc: 0.759
Epoch 3, loss: 0.575, acc: 0.759, val_loss: 0.592, val_acc: 0.759
Epoch 4, loss: 0.582, acc: 0.759, val_loss: 0.555, val_acc: 0.759
Epoch 5, loss: 0.519, acc: 0.767, val_loss: 0.529, val_acc: 0.791
Epoch 6, loss: 0.504, acc: 0.770, val_loss: 0.477, val_acc: 0.759
Epoch 7, loss: 0.474, acc: 0.760, val_loss: 0.430, val_acc: 0.765
Epoch 8, loss: 0.426, acc: 0.789, val_loss: 0.409, val_acc: 0.805
Epoch 9, loss: 0.420, acc: 0.805, val_loss: 0.428, val_acc: 0.813
Epoch 10, loss: 0.413, acc: 0.815, val_loss: 0.423, val_acc: 0.812
Epoch 11, loss: 0.412, acc: 0.820, val_loss: 0.420, val_acc: 0.815
Epoch 12, loss: 0.399, acc: 0.820, val_loss: 0.398, val_acc: 0.821
Epoch 13, loss: 0.392, acc: 0.823, val_loss: 0.396, val_acc: 0.815
Epoch 14, loss: 0.385, acc: 0.821, val_loss: 0.385, val_acc: 0.822
Epoch 15, loss: 0.384, acc: 0.823, val_loss: 0.383, val_acc: 0.820
Epoch 16, loss: 0.378, acc: 0.826, val_loss: 0.370, val_acc: 0.828
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.8281897742975587 

1402 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.7847382158759404 

Threshold adjusted fairness score :  0.7185764908790588
Maximum Difference: 0.2814235
Minimum Difference: 0.0
Average (Mean) Difference: 0.11544321 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 8) 0.1
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 2) 0.3535533905932738
deepbayes: Using implicit prior
(100, 8) 0.1
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 2) 0.3535533905932738
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.621, acc: 0.697, val_loss: 0.576, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.592, acc: 0.759, val_loss: 0.583, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.558, acc: 0.759, val_loss: 0.543, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.558, acc: 0.759, val_loss: 0.548, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.557, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.553, acc: 0.759, val_loss: 0.550, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.556, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.556, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.555, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.553, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.998753011226654
Maximum Difference: 0.0012469888
Minimum Difference: 0.00057786703
Average (Mean) Difference: 0.0008275284 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 4 N 8
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 8) 0.1
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 2) 0.3535533905932738
deepbayes: Using implicit prior
(100, 8) 0.1
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 2) 0.3535533905932738
Epoch 1, loss: 0.612, acc: 0.752, val_loss: 0.552, val_acc: 0.759
Epoch 2, loss: 0.568, acc: 0.759, val_loss: 0.557, val_acc: 0.759
Epoch 3, loss: 0.533, acc: 0.759, val_loss: 0.527, val_acc: 0.759
Epoch 4, loss: 0.526, acc: 0.759, val_loss: 0.518, val_acc: 0.759
Epoch 5, loss: 0.494, acc: 0.759, val_loss: 0.466, val_acc: 0.759
Epoch 6, loss: 0.451, acc: 0.759, val_loss: 0.437, val_acc: 0.759
Epoch 7, loss: 0.435, acc: 0.759, val_loss: 0.424, val_acc: 0.759
Epoch 8, loss: 0.428, acc: 0.759, val_loss: 0.422, val_acc: 0.751
Epoch 9, loss: 0.422, acc: 0.770, val_loss: 0.412, val_acc: 0.788
Epoch 10, loss: 0.412, acc: 0.803, val_loss: 0.406, val_acc: 0.808
Epoch 11, loss: 0.408, acc: 0.807, val_loss: 0.406, val_acc: 0.809
Epoch 12, loss: 0.406, acc: 0.812, val_loss: 0.403, val_acc: 0.815
Epoch 13, loss: 0.400, acc: 0.816, val_loss: 0.395, val_acc: 0.818
Epoch 14, loss: 0.395, acc: 0.817, val_loss: 0.390, val_acc: 0.821
Epoch 15, loss: 0.390, acc: 0.816, val_loss: 0.385, val_acc: 0.816
Epoch 16, loss: 0.387, acc: 0.818, val_loss: 0.382, val_acc: 0.820
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.8203592814371258 

1114 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.8289574696760326 

Threshold adjusted fairness score :  0.6478573977947235
Maximum Difference: 0.3521426
Minimum Difference: 0.0
Average (Mean) Difference: 0.087251954 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 8) 0.1
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 2) 0.3535533905932738
deepbayes: Using implicit prior
(100, 8) 0.1
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 2) 0.3535533905932738
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.664, acc: 0.575, val_loss: 0.590, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.564, acc: 0.759, val_loss: 0.574, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.596, acc: 0.759, val_loss: 0.604, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.592, acc: 0.759, val_loss: 0.576, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.564, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.553, acc: 0.759, val_loss: 0.557, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.562, acc: 0.759, val_loss: 0.565, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.563, acc: 0.759, val_loss: 0.557, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
 80%|████████  | 4/5 [30:35<08:14, 494.47s/it]100%|██████████| 5/5 [40:56<00:00, 539.80s/it]100%|██████████| 5/5 [40:56<00:00, 491.21s/it]
Epoch 9, loss: 0.554, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.554, acc: 0.759, val_loss: 0.556, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.558, acc: 0.759, val_loss: 0.558, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.556, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.553, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.555, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.554, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  1.0
Maximum Difference: 0.0
Minimum Difference: 0.0
Average (Mean) Difference: 0.0 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 5 N 8
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 8) 0.1
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 2) 0.3535533905932738
deepbayes: Using implicit prior
(100, 8) 0.1
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 2) 0.3535533905932738
Epoch 1, loss: 0.624, acc: 0.755, val_loss: 0.558, val_acc: 0.759
Epoch 2, loss: 0.579, acc: 0.759, val_loss: 0.604, val_acc: 0.759
Epoch 3, loss: 0.584, acc: 0.759, val_loss: 0.555, val_acc: 0.759
Epoch 4, loss: 0.552, acc: 0.759, val_loss: 0.558, val_acc: 0.759
Epoch 5, loss: 0.566, acc: 0.759, val_loss: 0.567, val_acc: 0.759
Epoch 6, loss: 0.560, acc: 0.759, val_loss: 0.553, val_acc: 0.759
Epoch 7, loss: 0.553, acc: 0.759, val_loss: 0.554, val_acc: 0.759
Epoch 8, loss: 0.555, acc: 0.759, val_loss: 0.554, val_acc: 0.759
Epoch 9, loss: 0.549, acc: 0.759, val_loss: 0.542, val_acc: 0.759
Epoch 10, loss: 0.537, acc: 0.759, val_loss: 0.531, val_acc: 0.759
Epoch 11, loss: 0.525, acc: 0.759, val_loss: 0.519, val_acc: 0.759
Epoch 12, loss: 0.503, acc: 0.759, val_loss: 0.485, val_acc: 0.759
Epoch 13, loss: 0.463, acc: 0.759, val_loss: 0.439, val_acc: 0.759
Epoch 14, loss: 0.424, acc: 0.786, val_loss: 0.414, val_acc: 0.808
Epoch 15, loss: 0.415, acc: 0.803, val_loss: 0.414, val_acc: 0.816
Epoch 16, loss: 0.407, acc: 0.812, val_loss: 0.386, val_acc: 0.825
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.8248119146322739 

1949 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.7007523414709044 

Threshold adjusted fairness score :  0.4314389228820801
Maximum Difference: 0.5685611
Minimum Difference: 0.0
Average (Mean) Difference: 0.14916587 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 8) 0.1
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 2) 0.3535533905932738
deepbayes: Using implicit prior
(100, 8) 0.1
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 2) 0.3535533905932738
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.633, acc: 0.684, val_loss: 0.556, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.576, acc: 0.759, val_loss: 0.627, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.599, acc: 0.759, val_loss: 0.575, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.556, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.564, acc: 0.759, val_loss: 0.569, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.564, acc: 0.759, val_loss: 0.558, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.555, acc: 0.759, val_loss: 0.559, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.559, acc: 0.759, val_loss: 0.558, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.555, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.555, acc: 0.759, val_loss: 0.556, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.555, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.552, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.554, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  1.0
Maximum Difference: 0.0
Minimum Difference: 0.0
Average (Mean) Difference: 0.0 

>> Writing out to dataframe ...
> Done.
Trial complete!

  0%|          | 0/5 [00:00<?, ?it/s] 20%|██        | 1/5 [05:47<23:08, 347.01s/it]Network : L 1 N 4
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 4) 0.1
(4, 2) 0.5
deepbayes: Using implicit prior
(100, 4) 0.1
(4, 2) 0.5
Epoch 1, loss: 0.601, acc: 0.714, val_loss: 0.562, val_acc: 0.759
Epoch 2, loss: 0.491, acc: 0.759, val_loss: 0.451, val_acc: 0.759
Epoch 3, loss: 0.448, acc: 0.759, val_loss: 0.430, val_acc: 0.759
Epoch 4, loss: 0.429, acc: 0.759, val_loss: 0.425, val_acc: 0.759
Epoch 5, loss: 0.433, acc: 0.759, val_loss: 0.429, val_acc: 0.759
Epoch 6, loss: 0.428, acc: 0.759, val_loss: 0.416, val_acc: 0.759
Epoch 7, loss: 0.418, acc: 0.773, val_loss: 0.411, val_acc: 0.791
Epoch 8, loss: 0.417, acc: 0.783, val_loss: 0.410, val_acc: 0.778
Epoch 9, loss: 0.408, acc: 0.799, val_loss: 0.401, val_acc: 0.818
Epoch 10, loss: 0.402, acc: 0.819, val_loss: 0.400, val_acc: 0.826
Epoch 11, loss: 0.396, acc: 0.819, val_loss: 0.389, val_acc: 0.820
Epoch 12, loss: 0.391, acc: 0.813, val_loss: 0.387, val_acc: 0.819
Epoch 13, loss: 0.387, acc: 0.819, val_loss: 0.384, val_acc: 0.824
Epoch 14, loss: 0.383, acc: 0.823, val_loss: 0.376, val_acc: 0.822
Epoch 15, loss: 0.379, acc: 0.822, val_loss: 0.372, val_acc: 0.825
Epoch 16, loss: 0.375, acc: 0.827, val_loss: 0.369, val_acc: 0.829
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.828650391524643 

1124 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.8274220789190849 

Threshold adjusted fairness score :  0.6375945508480072
Maximum Difference: 0.36240545
Minimum Difference: 0.0023072958
Average (Mean) Difference: 0.107418194 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 4) 0.1
(4, 2) 0.5
deepbayes: Using implicit prior
(100, 4) 0.1
(4, 2) 0.5
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.635, acc: 0.681, val_loss: 0.798, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.621, acc: 0.759, val_loss: 0.609, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.604, acc: 0.759, val_loss: 0.584, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.568, acc: 0.759, val_loss: 0.586, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.557, acc: 0.759, val_loss: 0.575, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.557, acc: 0.759, val_loss: 0.557, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.560, acc: 0.759, val_loss: 0.578, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.561, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.561, acc: 0.759, val_loss: 0.556, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.558, acc: 0.759, val_loss: 0.557, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.559, acc: 0.759, val_loss: 0.549, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.558, acc: 0.759, val_loss: 0.549, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.556, acc: 0.759, val_loss: 0.556, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.555, acc: 0.759, val_loss: 0.547, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.554, acc: 0.759, val_loss: 0.548, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.554, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9652359485626221
Maximum Difference: 0.03476405
Minimum Difference: 0.004823804
Average (Mean) Difference: 0.012280548 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 2 N 4
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 4) 0.1
(4, 4) 0.5
(4, 2) 0.5
deepbayes: Using implicit prior
(100, 4) 0.1
(4, 4) 0.5
(4, 2) 0.5
Epoch 1, loss: 0.554, acc: 0.758, val_loss: 0.460, val_acc: 0.760
Epoch 2, loss: 0.439, acc: 0.759, val_loss: 0.432, val_acc: 0.759
Epoch 3, loss: 0.430, acc: 0.759, val_loss: 0.420, val_acc: 0.759
Epoch 4, loss: 0.421, acc: 0.762, val_loss: 0.411, val_acc: 0.778
Epoch 5, loss: 0.409, acc: 0.804, val_loss: 0.399, val_acc: 0.821
Epoch 6, loss: 0.404, acc: 0.806, val_loss: 0.398, val_acc: 0.809
Epoch 7, loss: 0.395, acc: 0.817, val_loss: 0.386, val_acc: 0.825
Epoch 8, loss: 0.390, acc: 0.819, val_loss: 0.380, val_acc: 0.824
Epoch 9, loss: 0.386, acc: 0.823, val_loss: 0.378, val_acc: 0.828
Epoch 10, loss: 0.382, acc: 0.825, val_loss: 0.373, val_acc: 0.829
Epoch 11, loss: 0.380, acc: 0.826, val_loss: 0.372, val_acc: 0.830
Epoch 12, loss: 0.377, acc: 0.826, val_loss: 0.370, val_acc: 0.829
Epoch 13, loss: 0.375, acc: 0.826, val_loss: 0.366, val_acc: 0.830
Epoch 14, loss: 0.374, acc: 0.827, val_loss: 0.365, val_acc: 0.831
Epoch 15, loss: 0.372, acc: 0.827, val_loss: 0.364, val_acc: 0.830
Epoch 16, loss: 0.370, acc: 0.827, val_loss: 0.362, val_acc: 0.831
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.8311070167357593 

1041 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.8401658222017503 

Threshold adjusted fairness score :  0.6428780555725098
Maximum Difference: 0.35712194
Minimum Difference: 0.0
Average (Mean) Difference: 0.09951136 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 4) 0.1
(4, 4) 0.5
(4, 2) 0.5
deepbayes: Using implicit prior
(100, 4) 0.1
(4, 4) 0.5
(4, 2) 0.5
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.678, acc: 0.631, val_loss: 0.627, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.586, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.557, acc: 0.759, val_loss: 0.567, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.584, acc: 0.759, val_loss: 0.600, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.605, acc: 0.759, val_loss: 0.606, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.596, acc: 0.759, val_loss: 0.583, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.569, acc: 0.759, val_loss: 0.557, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.553, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.561, acc: 0.759, val_loss: 0.568, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.571, acc: 0.759, val_loss: 0.571, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.566, acc: 0.759, val_loss: 0.560, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.556, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.553, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.557, acc: 0.759, val_loss: 0.559, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.559, acc: 0.759, val_loss: 0.559, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.557, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

 40%|████      | 2/5 [12:40<19:18, 386.17s/it] 60%|██████    | 3/5 [20:39<14:16, 428.38s/it]Threshold adjusted fairness score :  0.9666962027549744
Maximum Difference: 0.033303797
Minimum Difference: 0.0
Average (Mean) Difference: 6.614979e-05 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 3 N 4
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 4) 0.1
(4, 4) 0.5
(4, 4) 0.5
(4, 2) 0.5
deepbayes: Using implicit prior
(100, 4) 0.1
(4, 4) 0.5
(4, 4) 0.5
(4, 2) 0.5
Epoch 1, loss: 0.638, acc: 0.757, val_loss: 0.580, val_acc: 0.759
Epoch 2, loss: 0.552, acc: 0.759, val_loss: 0.554, val_acc: 0.759
Epoch 3, loss: 0.550, acc: 0.759, val_loss: 0.558, val_acc: 0.759
Epoch 4, loss: 0.531, acc: 0.759, val_loss: 0.511, val_acc: 0.759
Epoch 5, loss: 0.478, acc: 0.759, val_loss: 0.452, val_acc: 0.759
Epoch 6, loss: 0.445, acc: 0.766, val_loss: 0.429, val_acc: 0.806
Epoch 7, loss: 0.420, acc: 0.810, val_loss: 0.417, val_acc: 0.814
Epoch 8, loss: 0.423, acc: 0.807, val_loss: 0.410, val_acc: 0.796
Epoch 9, loss: 0.408, acc: 0.786, val_loss: 0.394, val_acc: 0.797
Epoch 10, loss: 0.390, acc: 0.816, val_loss: 0.388, val_acc: 0.823
Epoch 11, loss: 0.392, acc: 0.823, val_loss: 0.389, val_acc: 0.824
Epoch 12, loss: 0.388, acc: 0.823, val_loss: 0.380, val_acc: 0.827
Epoch 13, loss: 0.382, acc: 0.823, val_loss: 0.375, val_acc: 0.827
Epoch 14, loss: 0.380, acc: 0.824, val_loss: 0.372, val_acc: 0.826
Epoch 15, loss: 0.376, acc: 0.824, val_loss: 0.367, val_acc: 0.825
Epoch 16, loss: 0.371, acc: 0.826, val_loss: 0.365, val_acc: 0.827
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.8268079226163059 

1266 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.8056195301704283 

Threshold adjusted fairness score :  0.6383484899997711
Maximum Difference: 0.3616515
Minimum Difference: 0.0
Average (Mean) Difference: 0.10834654 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 4) 0.1
(4, 4) 0.5
(4, 4) 0.5
(4, 2) 0.5
deepbayes: Using implicit prior
(100, 4) 0.1
(4, 4) 0.5
(4, 4) 0.5
(4, 2) 0.5
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.681, acc: 0.597, val_loss: 0.623, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.584, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.558, acc: 0.759, val_loss: 0.576, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.589, acc: 0.759, val_loss: 0.609, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.604, acc: 0.759, val_loss: 0.602, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.588, acc: 0.759, val_loss: 0.574, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.563, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.553, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.562, acc: 0.759, val_loss: 0.568, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.569, acc: 0.759, val_loss: 0.567, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.563, acc: 0.759, val_loss: 0.557, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.554, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.553, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.557, acc: 0.759, val_loss: 0.558, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.558, acc: 0.759, val_loss: 0.557, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.556, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  1.0
Maximum Difference: 0.0
Minimum Difference: 0.0
Average (Mean) Difference: 0.0 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 4 N 4
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 4) 0.1
(4, 4) 0.5
(4, 4) 0.5
(4, 4) 0.5
(4, 2) 0.5
deepbayes: Using implicit prior
(100, 4) 0.1
(4, 4) 0.5
(4, 4) 0.5
(4, 4) 0.5
(4, 2) 0.5
Epoch 1, loss: 0.654, acc: 0.747, val_loss: 0.594, val_acc: 0.759
Epoch 2, loss: 0.562, acc: 0.759, val_loss: 0.562, val_acc: 0.759
Epoch 3, loss: 0.590, acc: 0.759, val_loss: 0.605, val_acc: 0.759
Epoch 4, loss: 0.592, acc: 0.759, val_loss: 0.572, val_acc: 0.759
Epoch 5, loss: 0.557, acc: 0.759, val_loss: 0.547, val_acc: 0.759
Epoch 6, loss: 0.548, acc: 0.759, val_loss: 0.551, val_acc: 0.759
Epoch 7, loss: 0.552, acc: 0.759, val_loss: 0.548, val_acc: 0.759
Epoch 8, loss: 0.538, acc: 0.759, val_loss: 0.525, val_acc: 0.759
Epoch 9, loss: 0.514, acc: 0.759, val_loss: 0.505, val_acc: 0.759
Epoch 10, loss: 0.493, acc: 0.759, val_loss: 0.474, val_acc: 0.759
Epoch 11, loss: 0.459, acc: 0.759, val_loss: 0.442, val_acc: 0.759
Epoch 12, loss: 0.436, acc: 0.759, val_loss: 0.424, val_acc: 0.759
Epoch 13, loss: 0.431, acc: 0.759, val_loss: 0.425, val_acc: 0.759
Epoch 14, loss: 0.439, acc: 0.716, val_loss: 0.429, val_acc: 0.709
Epoch 15, loss: 0.440, acc: 0.699, val_loss: 0.427, val_acc: 0.704
Epoch 16, loss: 0.435, acc: 0.700, val_loss: 0.419, val_acc: 0.710
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.7102717641639797 

539 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.917242438200522 

Threshold adjusted fairness score :  0.5381438136100769
Maximum Difference: 0.4618562
Minimum Difference: 0.0
Average (Mean) Difference: 0.07005277 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 4) 0.1
(4, 4) 0.5
(4, 4) 0.5
(4, 4) 0.5
(4, 2) 0.5
deepbayes: Using implicit prior
(100, 4) 0.1
(4, 4) 0.5
(4, 4) 0.5
(4, 4) 0.5
(4, 2) 0.5
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.655, acc: 0.717, val_loss: 0.592, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.563, acc: 0.759, val_loss: 0.563, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.590, acc: 0.759, val_loss: 0.616, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.604, acc: 0.759, val_loss: 0.588, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.566, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.555, acc: 0.759, val_loss: 0.562, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.569, acc: 0.759, val_loss: 0.572, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.568, acc: 0.759, val_loss: 0.561, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.556, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.553, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.557, acc: 0.759, val_loss: 0.559, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.560, acc: 0.759, val_loss: 0.559, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.556, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
 80%|████████  | 4/5 [29:45<07:55, 475.12s/it]100%|██████████| 5/5 [40:21<00:00, 533.08s/it]100%|██████████| 5/5 [40:21<00:00, 484.37s/it]
Epoch 16, loss: 0.554, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  1.0
Maximum Difference: 0.0
Minimum Difference: 0.0
Average (Mean) Difference: 0.0 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 5 N 4
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 4) 0.1
(4, 4) 0.5
(4, 4) 0.5
(4, 4) 0.5
(4, 4) 0.5
(4, 2) 0.5
deepbayes: Using implicit prior
(100, 4) 0.1
(4, 4) 0.5
(4, 4) 0.5
(4, 4) 0.5
(4, 4) 0.5
(4, 2) 0.5
Epoch 1, loss: 0.672, acc: 0.664, val_loss: 0.628, val_acc: 0.759
Epoch 2, loss: 0.587, acc: 0.759, val_loss: 0.557, val_acc: 0.759
Epoch 3, loss: 0.556, acc: 0.759, val_loss: 0.565, val_acc: 0.759
Epoch 4, loss: 0.583, acc: 0.759, val_loss: 0.598, val_acc: 0.759
Epoch 5, loss: 0.604, acc: 0.759, val_loss: 0.604, val_acc: 0.759
Epoch 6, loss: 0.595, acc: 0.759, val_loss: 0.582, val_acc: 0.759
Epoch 7, loss: 0.569, acc: 0.759, val_loss: 0.557, val_acc: 0.759
Epoch 8, loss: 0.553, acc: 0.759, val_loss: 0.554, val_acc: 0.759
Epoch 9, loss: 0.560, acc: 0.759, val_loss: 0.567, val_acc: 0.759
Epoch 10, loss: 0.571, acc: 0.759, val_loss: 0.571, val_acc: 0.759
Epoch 11, loss: 0.566, acc: 0.759, val_loss: 0.560, val_acc: 0.759
Epoch 12, loss: 0.555, acc: 0.759, val_loss: 0.552, val_acc: 0.759
Epoch 13, loss: 0.553, acc: 0.759, val_loss: 0.554, val_acc: 0.759
Epoch 14, loss: 0.557, acc: 0.759, val_loss: 0.559, val_acc: 0.759
Epoch 15, loss: 0.559, acc: 0.759, val_loss: 0.558, val_acc: 0.759
Epoch 16, loss: 0.557, acc: 0.759, val_loss: 0.554, val_acc: 0.759
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  1.0
Maximum Difference: 0.0
Minimum Difference: 0.0
Average (Mean) Difference: 0.0 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 4) 0.1
(4, 4) 0.5
(4, 4) 0.5
(4, 4) 0.5
(4, 4) 0.5
(4, 2) 0.5
deepbayes: Using implicit prior
(100, 4) 0.1
(4, 4) 0.5
(4, 4) 0.5
(4, 4) 0.5
(4, 4) 0.5
(4, 2) 0.5
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.622, acc: 0.746, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.589, acc: 0.759, val_loss: 0.633, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.601, acc: 0.759, val_loss: 0.563, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.558, acc: 0.759, val_loss: 0.568, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.579, acc: 0.759, val_loss: 0.574, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.563, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.555, acc: 0.759, val_loss: 0.561, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.565, acc: 0.759, val_loss: 0.565, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.559, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.556, acc: 0.759, val_loss: 0.558, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.557, acc: 0.759, val_loss: 0.556, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.554, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.552, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.554, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.554, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9989632368087769
Maximum Difference: 0.0010367632
Minimum Difference: 0.0
Average (Mean) Difference: 2.2769149e-05 

>> Writing out to dataframe ...
> Done.
Trial complete!

  0%|          | 0/5 [00:00<?, ?it/s] 20%|██        | 1/5 [05:46<23:04, 346.22s/it]Network : L 1 N 2
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 2) 0.1
(2, 2) 0.7071067811865476
deepbayes: Using implicit prior
(100, 2) 0.1
(2, 2) 0.7071067811865476
Epoch 1, loss: 0.684, acc: 0.627, val_loss: 0.642, val_acc: 0.759
Epoch 2, loss: 0.603, acc: 0.759, val_loss: 0.570, val_acc: 0.759
Epoch 3, loss: 0.557, acc: 0.759, val_loss: 0.553, val_acc: 0.759
Epoch 4, loss: 0.563, acc: 0.759, val_loss: 0.574, val_acc: 0.759
Epoch 5, loss: 0.586, acc: 0.759, val_loss: 0.594, val_acc: 0.759
Epoch 6, loss: 0.596, acc: 0.759, val_loss: 0.595, val_acc: 0.759
Epoch 7, loss: 0.588, acc: 0.759, val_loss: 0.579, val_acc: 0.759
Epoch 8, loss: 0.569, acc: 0.759, val_loss: 0.560, val_acc: 0.759
Epoch 9, loss: 0.555, acc: 0.759, val_loss: 0.552, val_acc: 0.759
Epoch 10, loss: 0.554, acc: 0.759, val_loss: 0.557, val_acc: 0.759
Epoch 11, loss: 0.562, acc: 0.759, val_loss: 0.565, val_acc: 0.759
Epoch 12, loss: 0.565, acc: 0.759, val_loss: 0.564, val_acc: 0.759
Epoch 13, loss: 0.562, acc: 0.759, val_loss: 0.558, val_acc: 0.759
Epoch 14, loss: 0.555, acc: 0.759, val_loss: 0.553, val_acc: 0.759
Epoch 15, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759
Epoch 16, loss: 0.554, acc: 0.759, val_loss: 0.555, val_acc: 0.759
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  1.0
Maximum Difference: 0.0
Minimum Difference: 0.0
Average (Mean) Difference: 0.0 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 2) 0.1
(2, 2) 0.7071067811865476
deepbayes: Using implicit prior
(100, 2) 0.1
(2, 2) 0.7071067811865476
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.692, acc: 0.554, val_loss: 0.642, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.604, acc: 0.759, val_loss: 0.570, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.557, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.563, acc: 0.759, val_loss: 0.575, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.586, acc: 0.759, val_loss: 0.595, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.597, acc: 0.759, val_loss: 0.595, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.589, acc: 0.759, val_loss: 0.579, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.569, acc: 0.759, val_loss: 0.560, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.555, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.554, acc: 0.759, val_loss: 0.557, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.561, acc: 0.759, val_loss: 0.565, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.566, acc: 0.759, val_loss: 0.565, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.562, acc: 0.759, val_loss: 0.558, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.555, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.554, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  1.0
Maximum Difference: 0.0
Minimum Difference: 0.0
Average (Mean) Difference: 0.0 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 2 N 2
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 2) 0.1
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
deepbayes: Using implicit prior
(100, 2) 0.1
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
Epoch 1, loss: 0.642, acc: 0.657, val_loss: 0.555, val_acc: 0.759
Epoch 2, loss: 0.575, acc: 0.759, val_loss: 0.525, val_acc: 0.759
Epoch 3, loss: 0.501, acc: 0.759, val_loss: 0.506, val_acc: 0.759
Epoch 4, loss: 0.500, acc: 0.759, val_loss: 0.482, val_acc: 0.759
Epoch 5, loss: 0.464, acc: 0.759, val_loss: 0.447, val_acc: 0.759
Epoch 6, loss: 0.453, acc: 0.759, val_loss: 0.447, val_acc: 0.759
Epoch 7, loss: 0.446, acc: 0.759, val_loss: 0.426, val_acc: 0.759
Epoch 8, loss: 0.434, acc: 0.759, val_loss: 0.427, val_acc: 0.759
Epoch 9, loss: 0.440, acc: 0.755, val_loss: 0.432, val_acc: 0.759
Epoch 10, loss: 0.435, acc: 0.746, val_loss: 0.421, val_acc: 0.759
Epoch 11, loss: 0.430, acc: 0.759, val_loss: 0.419, val_acc: 0.759
Epoch 12, loss: 0.427, acc: 0.759, val_loss: 0.416, val_acc: 0.759
Epoch 13, loss: 0.423, acc: 0.759, val_loss: 0.415, val_acc: 0.759
Epoch 14, loss: 0.425, acc: 0.759, val_loss: 0.419, val_acc: 0.759
Epoch 15, loss: 0.423, acc: 0.759, val_loss: 0.415, val_acc: 0.759
Epoch 16, loss: 0.422, acc: 0.759, val_loss: 0.416, val_acc: 0.759
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.640571117401123
Maximum Difference: 0.35942888
Minimum Difference: 0.0
Average (Mean) Difference: 0.034384247 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 2) 0.1
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
deepbayes: Using implicit prior
(100, 2) 0.1
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.678, acc: 0.673, val_loss: 0.644, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.606, acc: 0.759, val_loss: 0.571, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.558, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.562, acc: 0.759, val_loss: 0.573, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.584, acc: 0.759, val_loss: 0.593, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.596, acc: 0.759, val_loss: 0.594, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.588, acc: 0.759, val_loss: 0.579, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.569, acc: 0.759, val_loss: 0.560, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.555, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.554, acc: 0.759, val_loss: 0.556, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.561, acc: 0.759, val_loss: 0.564, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.565, acc: 0.759, val_loss: 0.564, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.561, acc: 0.759, val_loss: 0.557, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.555, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.554, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513  40%|████      | 2/5 [12:40<19:19, 386.37s/it] 60%|██████    | 3/5 [20:40<14:18, 429.15s/it]individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9872775673866272
Maximum Difference: 0.012722433
Minimum Difference: 0.0
Average (Mean) Difference: 0.00026299944 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 3 N 2
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 2) 0.1
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
deepbayes: Using implicit prior
(100, 2) 0.1
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
Epoch 1, loss: 0.650, acc: 0.744, val_loss: 0.583, val_acc: 0.759
Epoch 2, loss: 0.556, acc: 0.759, val_loss: 0.543, val_acc: 0.759
Epoch 3, loss: 0.555, acc: 0.759, val_loss: 0.559, val_acc: 0.759
Epoch 4, loss: 0.541, acc: 0.759, val_loss: 0.508, val_acc: 0.759
Epoch 5, loss: 0.474, acc: 0.759, val_loss: 0.439, val_acc: 0.759
Epoch 6, loss: 0.432, acc: 0.759, val_loss: 0.422, val_acc: 0.759
Epoch 7, loss: 0.430, acc: 0.741, val_loss: 0.425, val_acc: 0.717
Epoch 8, loss: 0.433, acc: 0.714, val_loss: 0.426, val_acc: 0.716
Epoch 9, loss: 0.434, acc: 0.712, val_loss: 0.426, val_acc: 0.715
Epoch 10, loss: 0.431, acc: 0.714, val_loss: 0.421, val_acc: 0.719
Epoch 11, loss: 0.426, acc: 0.720, val_loss: 0.416, val_acc: 0.726
Epoch 12, loss: 0.420, acc: 0.748, val_loss: 0.412, val_acc: 0.759
Epoch 13, loss: 0.415, acc: 0.759, val_loss: 0.411, val_acc: 0.759
Epoch 14, loss: 0.413, acc: 0.759, val_loss: 0.413, val_acc: 0.759
Epoch 15, loss: 0.413, acc: 0.759, val_loss: 0.413, val_acc: 0.759
Epoch 16, loss: 0.412, acc: 0.759, val_loss: 0.410, val_acc: 0.759
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.7384073734283447
Maximum Difference: 0.26159263
Minimum Difference: 0.0
Average (Mean) Difference: 0.046782404 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 2) 0.1
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
deepbayes: Using implicit prior
(100, 2) 0.1
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.658, acc: 0.753, val_loss: 0.585, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.576, acc: 0.759, val_loss: 0.667, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.580, acc: 0.759, val_loss: 0.566, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.569, acc: 0.759, val_loss: 0.572, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.559, acc: 0.759, val_loss: 0.565, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.565, acc: 0.759, val_loss: 0.585, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.563, acc: 0.759, val_loss: 0.565, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.554, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.554, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.554, acc: 0.759, val_loss: 0.550, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.553, acc: 0.759, val_loss: 0.550, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.552, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9835768938064575
Maximum Difference: 0.016423106
Minimum Difference: 0.0
Average (Mean) Difference: 0.0014922954 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 4 N 2
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 2) 0.1
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
deepbayes: Using implicit prior
(100, 2) 0.1
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
Epoch 1, loss: 0.672, acc: 0.674, val_loss: 0.632, val_acc: 0.759
Epoch 2, loss: 0.591, acc: 0.759, val_loss: 0.559, val_acc: 0.759
Epoch 3, loss: 0.555, acc: 0.759, val_loss: 0.561, val_acc: 0.759
Epoch 4, loss: 0.578, acc: 0.759, val_loss: 0.592, val_acc: 0.759
Epoch 5, loss: 0.596, acc: 0.759, val_loss: 0.594, val_acc: 0.759
Epoch 6, loss: 0.584, acc: 0.759, val_loss: 0.570, val_acc: 0.759
Epoch 7, loss: 0.559, acc: 0.759, val_loss: 0.551, val_acc: 0.759
Epoch 8, loss: 0.550, acc: 0.759, val_loss: 0.552, val_acc: 0.759
Epoch 9, loss: 0.557, acc: 0.759, val_loss: 0.561, val_acc: 0.759
Epoch 10, loss: 0.563, acc: 0.759, val_loss: 0.563, val_acc: 0.759
Epoch 11, loss: 0.560, acc: 0.759, val_loss: 0.555, val_acc: 0.759
Epoch 12, loss: 0.551, acc: 0.759, val_loss: 0.546, val_acc: 0.759
Epoch 13, loss: 0.545, acc: 0.759, val_loss: 0.542, val_acc: 0.759
Epoch 14, loss: 0.541, acc: 0.759, val_loss: 0.538, val_acc: 0.759
Epoch 15, loss: 0.534, acc: 0.759, val_loss: 0.528, val_acc: 0.759
Epoch 16, loss: 0.520, acc: 0.759, val_loss: 0.510, val_acc: 0.759
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9182702302932739
Maximum Difference: 0.08172977
Minimum Difference: 0.0
Average (Mean) Difference: 0.014707361 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 2) 0.1
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
deepbayes: Using implicit prior
(100, 2) 0.1
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.655, acc: 0.748, val_loss: 0.600, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.565, acc: 0.759, val_loss: 0.607, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.594, acc: 0.759, val_loss: 0.621, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.586, acc: 0.759, val_loss: 0.566, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.555, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.558, acc: 0.759, val_loss: 0.563, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.565, acc: 0.759, val_loss: 0.565, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.562, acc: 0.759, val_loss: 0.557, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.554, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.553, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
 80%|████████  | 4/5 [29:43<07:54, 474.11s/it]100%|██████████| 5/5 [39:52<00:00, 522.52s/it]100%|██████████| 5/5 [39:52<00:00, 478.43s/it]
Epoch 11, loss: 0.556, acc: 0.759, val_loss: 0.557, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.557, acc: 0.759, val_loss: 0.557, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.556, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9996549487113953
Maximum Difference: 0.0003450513
Minimum Difference: 0.0
Average (Mean) Difference: 2.8748384e-05 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 5 N 2
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 2) 0.1
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
deepbayes: Using implicit prior
(100, 2) 0.1
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
Epoch 1, loss: 0.677, acc: 0.692, val_loss: 0.645, val_acc: 0.759
Epoch 2, loss: 0.606, acc: 0.759, val_loss: 0.573, val_acc: 0.759
Epoch 3, loss: 0.558, acc: 0.759, val_loss: 0.552, val_acc: 0.759
Epoch 4, loss: 0.562, acc: 0.759, val_loss: 0.573, val_acc: 0.759
Epoch 5, loss: 0.584, acc: 0.759, val_loss: 0.593, val_acc: 0.759
Epoch 6, loss: 0.596, acc: 0.759, val_loss: 0.595, val_acc: 0.759
Epoch 7, loss: 0.588, acc: 0.759, val_loss: 0.579, val_acc: 0.759
Epoch 8, loss: 0.570, acc: 0.759, val_loss: 0.561, val_acc: 0.759
Epoch 9, loss: 0.555, acc: 0.759, val_loss: 0.552, val_acc: 0.759
Epoch 10, loss: 0.554, acc: 0.759, val_loss: 0.557, val_acc: 0.759
Epoch 11, loss: 0.561, acc: 0.759, val_loss: 0.564, val_acc: 0.759
Epoch 12, loss: 0.565, acc: 0.759, val_loss: 0.564, val_acc: 0.759
Epoch 13, loss: 0.562, acc: 0.759, val_loss: 0.558, val_acc: 0.759
Epoch 14, loss: 0.555, acc: 0.759, val_loss: 0.553, val_acc: 0.759
Epoch 15, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759
Epoch 16, loss: 0.553, acc: 0.759, val_loss: 0.555, val_acc: 0.759
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  1.0
Maximum Difference: 0.0
Minimum Difference: 0.0
Average (Mean) Difference: 0.0 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 2) 0.1
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
deepbayes: Using implicit prior
(100, 2) 0.1
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.642, acc: 0.735, val_loss: 0.564, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.572, acc: 0.759, val_loss: 0.611, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.620, acc: 0.759, val_loss: 0.599, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.567, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.567, acc: 0.759, val_loss: 0.583, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.581, acc: 0.759, val_loss: 0.570, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.559, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.555, acc: 0.759, val_loss: 0.560, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.564, acc: 0.759, val_loss: 0.565, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.562, acc: 0.759, val_loss: 0.557, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.554, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.553, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.556, acc: 0.759, val_loss: 0.557, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.556, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.554, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  1.0
Maximum Difference: 0.0
Minimum Difference: 0.0
Average (Mean) Difference: 0.0 

>> Writing out to dataframe ...
> Done.
Trial complete!

>> Models tested. Writing out to file ...
Epsilon= 0.05  testing complete.
> Testing epsilon= 0.1
  0%|          | 0/5 [00:00<?, ?it/s] 20%|██        | 1/5 [05:51<23:24, 351.13s/it]Network : L 1 N 64
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 64) 0.1
(64, 2) 0.125
deepbayes: Using implicit prior
(100, 64) 0.1
(64, 2) 0.125
Epoch 1, loss: 0.560, acc: 0.739, val_loss: 0.493, val_acc: 0.759
Epoch 2, loss: 0.442, acc: 0.774, val_loss: 0.401, val_acc: 0.803
Epoch 3, loss: 0.417, acc: 0.816, val_loss: 0.392, val_acc: 0.823
Epoch 4, loss: 0.401, acc: 0.804, val_loss: 0.387, val_acc: 0.823
Epoch 5, loss: 0.394, acc: 0.812, val_loss: 0.385, val_acc: 0.819
Epoch 6, loss: 0.386, acc: 0.820, val_loss: 0.380, val_acc: 0.821
Epoch 7, loss: 0.375, acc: 0.824, val_loss: 0.370, val_acc: 0.821
Epoch 8, loss: 0.372, acc: 0.828, val_loss: 0.367, val_acc: 0.828
Epoch 9, loss: 0.365, acc: 0.828, val_loss: 0.357, val_acc: 0.828
Epoch 10, loss: 0.363, acc: 0.831, val_loss: 0.355, val_acc: 0.828
Epoch 11, loss: 0.359, acc: 0.831, val_loss: 0.349, val_acc: 0.833
Epoch 12, loss: 0.356, acc: 0.833, val_loss: 0.346, val_acc: 0.834
Epoch 13, loss: 0.354, acc: 0.833, val_loss: 0.344, val_acc: 0.836
Epoch 14, loss: 0.352, acc: 0.835, val_loss: 0.342, val_acc: 0.837
Epoch 15, loss: 0.350, acc: 0.836, val_loss: 0.344, val_acc: 0.835
Epoch 16, loss: 0.348, acc: 0.836, val_loss: 0.340, val_acc: 0.837
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.8372485797635498 

3600 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.44725932749884845 

Threshold adjusted fairness score :  0.36373066902160645
Maximum Difference: 0.63626933
Minimum Difference: 0.008953214
Average (Mean) Difference: 0.33997488 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 64) 0.1
(64, 2) 0.125
deepbayes: Using implicit prior
(100, 64) 0.1
(64, 2) 0.125
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.680, acc: 0.704, val_loss: 0.930, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.606, acc: 0.759, val_loss: 0.589, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.593, acc: 0.759, val_loss: 0.559, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.571, acc: 0.759, val_loss: 0.619, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.595, acc: 0.759, val_loss: 0.595, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.559, acc: 0.759, val_loss: 0.558, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.572, acc: 0.759, val_loss: 0.578, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.565, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.558, acc: 0.759, val_loss: 0.569, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.567, acc: 0.759, val_loss: 0.562, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.554, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.559, acc: 0.759, val_loss: 0.561, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.557, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.554, acc: 0.759, val_loss: 0.558, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.557, acc: 0.759, val_loss: 0.556, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9346445202827454
Maximum Difference: 0.06535548
Minimum Difference: 0.0
Average (Mean) Difference: 0.0020733108 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 2 N 64
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 64) 0.1
(64, 64) 0.125
(64, 2) 0.125
deepbayes: Using implicit prior
(100, 64) 0.1
(64, 64) 0.125
(64, 2) 0.125
Epoch 1, loss: 0.581, acc: 0.750, val_loss: 0.529, val_acc: 0.759
Epoch 2, loss: 0.473, acc: 0.771, val_loss: 0.425, val_acc: 0.788
Epoch 3, loss: 0.418, acc: 0.793, val_loss: 0.413, val_acc: 0.784
Epoch 4, loss: 0.410, acc: 0.800, val_loss: 0.396, val_acc: 0.818
Epoch 5, loss: 0.388, acc: 0.814, val_loss: 0.378, val_acc: 0.827
Epoch 6, loss: 0.384, acc: 0.817, val_loss: 0.374, val_acc: 0.819
Epoch 7, loss: 0.372, acc: 0.829, val_loss: 0.358, val_acc: 0.829
Epoch 8, loss: 0.365, acc: 0.829, val_loss: 0.364, val_acc: 0.825
Epoch 9, loss: 0.365, acc: 0.830, val_loss: 0.359, val_acc: 0.828
Epoch 10, loss: 0.361, acc: 0.831, val_loss: 0.351, val_acc: 0.830
Epoch 11, loss: 0.357, acc: 0.834, val_loss: 0.351, val_acc: 0.832
Epoch 12, loss: 0.353, acc: 0.833, val_loss: 0.345, val_acc: 0.835
Epoch 13, loss: 0.351, acc: 0.836, val_loss: 0.343, val_acc: 0.836
Epoch 14, loss: 0.348, acc: 0.836, val_loss: 0.341, val_acc: 0.836
Epoch 15, loss: 0.346, acc: 0.838, val_loss: 0.338, val_acc: 0.837
Epoch 16, loss: 0.344, acc: 0.840, val_loss: 0.337, val_acc: 0.836
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.8358667280822969 

3866 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.4064179333640412 

Threshold adjusted fairness score :  0.2767144441604614
Maximum Difference: 0.72328556
Minimum Difference: 0.0028108358
Average (Mean) Difference: 0.37598774 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 64) 0.1
(64, 64) 0.125
(64, 2) 0.125
deepbayes: Using implicit prior
(100, 64) 0.1
(64, 64) 0.125
(64, 2) 0.125
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.628, acc: 0.663, val_loss: 0.763, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.595, acc: 0.759, val_loss: 0.559, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.566, acc: 0.759, val_loss: 0.562, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.566, acc: 0.759, val_loss: 0.571, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.555, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.557, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.554, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.554, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.553, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.553, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.552, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.553, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
 40%|████      | 2/5 [12:53<19:38, 393.00s/it] 60%|██████    | 3/5 [21:07<14:38, 439.06s/it]Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9751405715942383
Maximum Difference: 0.024859428
Minimum Difference: 0.0
Average (Mean) Difference: 0.001439832 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 3 N 64
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 64) 0.1
(64, 64) 0.125
(64, 64) 0.125
(64, 2) 0.125
deepbayes: Using implicit prior
(100, 64) 0.1
(64, 64) 0.125
(64, 64) 0.125
(64, 2) 0.125
Epoch 1, loss: 0.626, acc: 0.650, val_loss: 0.597, val_acc: 0.759
Epoch 2, loss: 0.548, acc: 0.759, val_loss: 0.532, val_acc: 0.759
Epoch 3, loss: 0.510, acc: 0.759, val_loss: 0.465, val_acc: 0.759
Epoch 4, loss: 0.435, acc: 0.771, val_loss: 0.430, val_acc: 0.742
Epoch 5, loss: 0.430, acc: 0.787, val_loss: 0.395, val_acc: 0.824
Epoch 6, loss: 0.401, acc: 0.820, val_loss: 0.395, val_acc: 0.811
Epoch 7, loss: 0.394, acc: 0.811, val_loss: 0.394, val_acc: 0.810
Epoch 8, loss: 0.387, acc: 0.824, val_loss: 0.367, val_acc: 0.829
Epoch 9, loss: 0.379, acc: 0.823, val_loss: 0.369, val_acc: 0.830
Epoch 10, loss: 0.372, acc: 0.826, val_loss: 0.361, val_acc: 0.826
Epoch 11, loss: 0.369, acc: 0.828, val_loss: 0.367, val_acc: 0.829
Epoch 12, loss: 0.365, acc: 0.831, val_loss: 0.359, val_acc: 0.830
Epoch 13, loss: 0.361, acc: 0.832, val_loss: 0.350, val_acc: 0.830
Epoch 14, loss: 0.357, acc: 0.833, val_loss: 0.352, val_acc: 0.833
Epoch 15, loss: 0.355, acc: 0.834, val_loss: 0.349, val_acc: 0.832
Epoch 16, loss: 0.354, acc: 0.836, val_loss: 0.347, val_acc: 0.836
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.8358667280822969 

3158 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.5151235989559343 

Threshold adjusted fairness score :  0.38065528869628906
Maximum Difference: 0.6193447
Minimum Difference: 0.0029926896
Average (Mean) Difference: 0.2951372 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 64) 0.1
(64, 64) 0.125
(64, 64) 0.125
(64, 2) 0.125
deepbayes: Using implicit prior
(100, 64) 0.1
(64, 64) 0.125
(64, 64) 0.125
(64, 2) 0.125
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.631, acc: 0.640, val_loss: 0.734, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.577, acc: 0.759, val_loss: 0.556, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.560, acc: 0.759, val_loss: 0.556, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.554, acc: 0.759, val_loss: 0.557, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.557, acc: 0.759, val_loss: 0.557, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.553, acc: 0.759, val_loss: 0.557, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.555, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.555, acc: 0.759, val_loss: 0.557, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.554, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.553, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9816863536834717
Maximum Difference: 0.018313646
Minimum Difference: 2.9802322e-07
Average (Mean) Difference: 0.003298635 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 4 N 64
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 64) 0.1
(64, 64) 0.125
(64, 64) 0.125
(64, 64) 0.125
(64, 2) 0.125
deepbayes: Using implicit prior
(100, 64) 0.1
(64, 64) 0.125
(64, 64) 0.125
(64, 64) 0.125
(64, 2) 0.125
Epoch 1, loss: 0.605, acc: 0.713, val_loss: 0.591, val_acc: 0.759
Epoch 2, loss: 0.553, acc: 0.759, val_loss: 0.529, val_acc: 0.759
Epoch 3, loss: 0.507, acc: 0.759, val_loss: 0.457, val_acc: 0.759
Epoch 4, loss: 0.431, acc: 0.765, val_loss: 0.446, val_acc: 0.732
Epoch 5, loss: 0.426, acc: 0.794, val_loss: 0.382, val_acc: 0.820
Epoch 6, loss: 0.404, acc: 0.811, val_loss: 0.410, val_acc: 0.786
Epoch 7, loss: 0.391, acc: 0.809, val_loss: 0.376, val_acc: 0.813
Epoch 8, loss: 0.380, acc: 0.826, val_loss: 0.368, val_acc: 0.821
Epoch 9, loss: 0.376, acc: 0.821, val_loss: 0.374, val_acc: 0.814
Epoch 10, loss: 0.371, acc: 0.827, val_loss: 0.359, val_acc: 0.829
Epoch 11, loss: 0.365, acc: 0.830, val_loss: 0.360, val_acc: 0.831
Epoch 12, loss: 0.365, acc: 0.831, val_loss: 0.359, val_acc: 0.827
Epoch 13, loss: 0.360, acc: 0.832, val_loss: 0.353, val_acc: 0.832
Epoch 14, loss: 0.356, acc: 0.834, val_loss: 0.349, val_acc: 0.835
Epoch 15, loss: 0.353, acc: 0.835, val_loss: 0.343, val_acc: 0.837
Epoch 16, loss: 0.350, acc: 0.836, val_loss: 0.343, val_acc: 0.838
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.8377091969906341 

3440 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.4718255796100107 

Threshold adjusted fairness score :  0.3588489294052124
Maximum Difference: 0.6411511
Minimum Difference: 0.004867792
Average (Mean) Difference: 0.32732776 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 64) 0.1
(64, 64) 0.125
(64, 64) 0.125
(64, 64) 0.125
(64, 2) 0.125
deepbayes: Using implicit prior
(100, 64) 0.1
(64, 64) 0.125
(64, 64) 0.125
(64, 64) 0.125
(64, 2) 0.125
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.612, acc: 0.698, val_loss: 0.715, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.583, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.557, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.554, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.557, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.553, acc: 0.759, val_loss: 0.550, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.555, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.553, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.554, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.553, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.553, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
 80%|████████  | 4/5 [30:33<08:09, 489.08s/it]100%|██████████| 5/5 [41:05<00:00, 540.88s/it]100%|██████████| 5/5 [41:05<00:00, 493.16s/it]
Epoch 14, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9899768829345703
Maximum Difference: 0.010023117
Minimum Difference: 1.3709068e-06
Average (Mean) Difference: 0.0021891543 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 5 N 64
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 64) 0.1
(64, 64) 0.125
(64, 64) 0.125
(64, 64) 0.125
(64, 64) 0.125
(64, 2) 0.125
deepbayes: Using implicit prior
(100, 64) 0.1
(64, 64) 0.125
(64, 64) 0.125
(64, 64) 0.125
(64, 64) 0.125
(64, 2) 0.125
Epoch 1, loss: 0.597, acc: 0.756, val_loss: 0.594, val_acc: 0.759
Epoch 2, loss: 0.553, acc: 0.759, val_loss: 0.530, val_acc: 0.759
Epoch 3, loss: 0.502, acc: 0.759, val_loss: 0.461, val_acc: 0.759
Epoch 4, loss: 0.440, acc: 0.758, val_loss: 0.432, val_acc: 0.717
Epoch 5, loss: 0.442, acc: 0.721, val_loss: 0.418, val_acc: 0.777
Epoch 6, loss: 0.415, acc: 0.780, val_loss: 0.411, val_acc: 0.759
Epoch 7, loss: 0.407, acc: 0.786, val_loss: 0.400, val_acc: 0.811
Epoch 8, loss: 0.396, acc: 0.813, val_loss: 0.386, val_acc: 0.825
Epoch 9, loss: 0.380, acc: 0.819, val_loss: 0.370, val_acc: 0.824
Epoch 10, loss: 0.375, acc: 0.824, val_loss: 0.359, val_acc: 0.829
Epoch 11, loss: 0.369, acc: 0.827, val_loss: 0.359, val_acc: 0.829
Epoch 12, loss: 0.366, acc: 0.829, val_loss: 0.361, val_acc: 0.827
Epoch 13, loss: 0.360, acc: 0.832, val_loss: 0.355, val_acc: 0.830
Epoch 14, loss: 0.359, acc: 0.834, val_loss: 0.348, val_acc: 0.835
Epoch 15, loss: 0.356, acc: 0.836, val_loss: 0.349, val_acc: 0.836
Epoch 16, loss: 0.352, acc: 0.837, val_loss: 0.344, val_acc: 0.837
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.8366344234607708 

3909 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.3998157531091663 

Threshold adjusted fairness score :  0.21966314315795898
Maximum Difference: 0.78033686
Minimum Difference: 0.0036862493
Average (Mean) Difference: 0.40623057 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 64) 0.1
(64, 64) 0.125
(64, 64) 0.125
(64, 64) 0.125
(64, 64) 0.125
(64, 2) 0.125
deepbayes: Using implicit prior
(100, 64) 0.1
(64, 64) 0.125
(64, 64) 0.125
(64, 64) 0.125
(64, 64) 0.125
(64, 2) 0.125
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.614, acc: 0.682, val_loss: 0.606, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.600, acc: 0.759, val_loss: 0.572, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.555, acc: 0.759, val_loss: 0.556, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.556, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.553, acc: 0.759, val_loss: 0.556, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.554, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.552, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.554, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.552, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.552, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.552, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.552, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.552, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9971015453338623
Maximum Difference: 0.0028984547
Minimum Difference: 0.0002655983
Average (Mean) Difference: 0.0016322916 

>> Writing out to dataframe ...
> Done.
Trial complete!

  0%|          | 0/5 [00:00<?, ?it/s] 20%|██        | 1/5 [05:46<23:07, 346.98s/it]Network : L 1 N 32
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 32) 0.1
(32, 2) 0.1767766952966369
deepbayes: Using implicit prior
(100, 32) 0.1
(32, 2) 0.1767766952966369
Epoch 1, loss: 0.579, acc: 0.727, val_loss: 0.506, val_acc: 0.759
Epoch 2, loss: 0.452, acc: 0.784, val_loss: 0.433, val_acc: 0.782
Epoch 3, loss: 0.416, acc: 0.803, val_loss: 0.418, val_acc: 0.806
Epoch 4, loss: 0.412, acc: 0.803, val_loss: 0.406, val_acc: 0.775
Epoch 5, loss: 0.399, acc: 0.802, val_loss: 0.385, val_acc: 0.822
Epoch 6, loss: 0.387, acc: 0.822, val_loss: 0.374, val_acc: 0.822
Epoch 7, loss: 0.383, acc: 0.818, val_loss: 0.371, val_acc: 0.827
Epoch 8, loss: 0.376, acc: 0.825, val_loss: 0.363, val_acc: 0.829
Epoch 9, loss: 0.369, acc: 0.827, val_loss: 0.359, val_acc: 0.829
Epoch 10, loss: 0.365, acc: 0.830, val_loss: 0.356, val_acc: 0.830
Epoch 11, loss: 0.362, acc: 0.830, val_loss: 0.355, val_acc: 0.831
Epoch 12, loss: 0.360, acc: 0.832, val_loss: 0.352, val_acc: 0.831
Epoch 13, loss: 0.357, acc: 0.834, val_loss: 0.351, val_acc: 0.834
Epoch 14, loss: 0.353, acc: 0.835, val_loss: 0.348, val_acc: 0.835
Epoch 15, loss: 0.353, acc: 0.835, val_loss: 0.347, val_acc: 0.835
Epoch 16, loss: 0.349, acc: 0.837, val_loss: 0.341, val_acc: 0.837
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.8366344234607708 

3744 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.4251497005988024 

Threshold adjusted fairness score :  0.33036744594573975
Maximum Difference: 0.66963255
Minimum Difference: 0.0094794035
Average (Mean) Difference: 0.3593836 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 32) 0.1
(32, 2) 0.1767766952966369
deepbayes: Using implicit prior
(100, 32) 0.1
(32, 2) 0.1767766952966369
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.659, acc: 0.626, val_loss: 0.871, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.640, acc: 0.759, val_loss: 0.568, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.601, acc: 0.759, val_loss: 0.561, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.557, acc: 0.759, val_loss: 0.592, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.575, acc: 0.759, val_loss: 0.605, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.565, acc: 0.759, val_loss: 0.572, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.554, acc: 0.759, val_loss: 0.563, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.565, acc: 0.759, val_loss: 0.565, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.558, acc: 0.759, val_loss: 0.562, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.554, acc: 0.759, val_loss: 0.576, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.560, acc: 0.759, val_loss: 0.576, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.554, acc: 0.759, val_loss: 0.564, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.553, acc: 0.759, val_loss: 0.561, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.556, acc: 0.759, val_loss: 0.561, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.553, acc: 0.759, val_loss: 0.563, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.553, acc: 0.759, val_loss: 0.569, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9161037802696228
Maximum Difference: 0.08389622
Minimum Difference: 0.0
Average (Mean) Difference: 0.023128564 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 2 N 32
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 32) 0.1
(32, 32) 0.1767766952966369
(32, 2) 0.1767766952966369
deepbayes: Using implicit prior
(100, 32) 0.1
(32, 32) 0.1767766952966369
(32, 2) 0.1767766952966369
Epoch 1, loss: 0.563, acc: 0.754, val_loss: 0.515, val_acc: 0.759
Epoch 2, loss: 0.465, acc: 0.767, val_loss: 0.435, val_acc: 0.791
Epoch 3, loss: 0.424, acc: 0.788, val_loss: 0.415, val_acc: 0.818
Epoch 4, loss: 0.411, acc: 0.808, val_loss: 0.382, val_acc: 0.823
Epoch 5, loss: 0.397, acc: 0.808, val_loss: 0.390, val_acc: 0.813
Epoch 6, loss: 0.388, acc: 0.816, val_loss: 0.369, val_acc: 0.830
Epoch 7, loss: 0.373, acc: 0.825, val_loss: 0.366, val_acc: 0.828
Epoch 8, loss: 0.372, acc: 0.828, val_loss: 0.364, val_acc: 0.825
Epoch 9, loss: 0.367, acc: 0.829, val_loss: 0.359, val_acc: 0.830
Epoch 10, loss: 0.362, acc: 0.830, val_loss: 0.356, val_acc: 0.831
Epoch 11, loss: 0.360, acc: 0.832, val_loss: 0.352, val_acc: 0.832
Epoch 12, loss: 0.356, acc: 0.834, val_loss: 0.349, val_acc: 0.831
Epoch 13, loss: 0.352, acc: 0.837, val_loss: 0.346, val_acc: 0.834
Epoch 14, loss: 0.350, acc: 0.837, val_loss: 0.342, val_acc: 0.834
Epoch 15, loss: 0.349, acc: 0.837, val_loss: 0.341, val_acc: 0.835
Epoch 16, loss: 0.346, acc: 0.838, val_loss: 0.339, val_acc: 0.836
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.8355596499309074 

3245 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.5017656993704898 

Threshold adjusted fairness score :  0.2829245328903198
Maximum Difference: 0.71707547
Minimum Difference: 0.006060183
Average (Mean) Difference: 0.31400064 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 32) 0.1
(32, 32) 0.1767766952966369
(32, 2) 0.1767766952966369
deepbayes: Using implicit prior
(100, 32) 0.1
(32, 32) 0.1767766952966369
(32, 2) 0.1767766952966369
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.628, acc: 0.704, val_loss: 0.612, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.603, acc: 0.759, val_loss: 0.634, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.557, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.555, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.554, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.553, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.552, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.553, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.552, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.552, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.553, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.552, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.552, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.
 40%|████      | 2/5 [12:43<19:23, 387.89s/it] 60%|██████    | 3/5 [20:46<14:22, 431.24s/it]
 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9683793783187866
Maximum Difference: 0.03162062
Minimum Difference: 0.0
Average (Mean) Difference: 0.0078961775 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 3 N 32
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 32) 0.1
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 2) 0.1767766952966369
deepbayes: Using implicit prior
(100, 32) 0.1
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 2) 0.1767766952966369
Epoch 1, loss: 0.603, acc: 0.756, val_loss: 0.563, val_acc: 0.759
Epoch 2, loss: 0.534, acc: 0.759, val_loss: 0.473, val_acc: 0.759
Epoch 3, loss: 0.464, acc: 0.783, val_loss: 0.412, val_acc: 0.779
Epoch 4, loss: 0.422, acc: 0.788, val_loss: 0.428, val_acc: 0.758
Epoch 5, loss: 0.420, acc: 0.798, val_loss: 0.398, val_acc: 0.813
Epoch 6, loss: 0.392, acc: 0.815, val_loss: 0.387, val_acc: 0.821
Epoch 7, loss: 0.388, acc: 0.820, val_loss: 0.374, val_acc: 0.827
Epoch 8, loss: 0.373, acc: 0.824, val_loss: 0.363, val_acc: 0.830
Epoch 9, loss: 0.369, acc: 0.827, val_loss: 0.361, val_acc: 0.828
Epoch 10, loss: 0.365, acc: 0.829, val_loss: 0.353, val_acc: 0.830
Epoch 11, loss: 0.364, acc: 0.829, val_loss: 0.359, val_acc: 0.827
Epoch 12, loss: 0.359, acc: 0.830, val_loss: 0.347, val_acc: 0.832
Epoch 13, loss: 0.356, acc: 0.834, val_loss: 0.346, val_acc: 0.833
Epoch 14, loss: 0.354, acc: 0.836, val_loss: 0.346, val_acc: 0.832
Epoch 15, loss: 0.349, acc: 0.836, val_loss: 0.341, val_acc: 0.838
Epoch 16, loss: 0.349, acc: 0.839, val_loss: 0.342, val_acc: 0.836
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.8358667280822969 

4064 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.3760171963764778 

Threshold adjusted fairness score :  0.285680890083313
Maximum Difference: 0.7143191
Minimum Difference: 0.0071027875
Average (Mean) Difference: 0.39918137 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 32) 0.1
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 2) 0.1767766952966369
deepbayes: Using implicit prior
(100, 32) 0.1
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 2) 0.1767766952966369
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.609, acc: 0.757, val_loss: 0.579, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.601, acc: 0.759, val_loss: 0.590, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.557, acc: 0.759, val_loss: 0.562, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.562, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.555, acc: 0.759, val_loss: 0.560, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.560, acc: 0.759, val_loss: 0.558, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.554, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.555, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.555, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.554, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.553, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.553, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.552, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9880449771881104
Maximum Difference: 0.011955023
Minimum Difference: 0.0
Average (Mean) Difference: 0.0013085929 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 4 N 32
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 32) 0.1
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 2) 0.1767766952966369
deepbayes: Using implicit prior
(100, 32) 0.1
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 2) 0.1767766952966369
Epoch 1, loss: 0.625, acc: 0.706, val_loss: 0.549, val_acc: 0.759
Epoch 2, loss: 0.571, acc: 0.759, val_loss: 0.598, val_acc: 0.759
Epoch 3, loss: 0.573, acc: 0.759, val_loss: 0.549, val_acc: 0.759
Epoch 4, loss: 0.542, acc: 0.759, val_loss: 0.535, val_acc: 0.759
Epoch 5, loss: 0.505, acc: 0.759, val_loss: 0.453, val_acc: 0.759
Epoch 6, loss: 0.445, acc: 0.770, val_loss: 0.442, val_acc: 0.758
Epoch 7, loss: 0.445, acc: 0.741, val_loss: 0.395, val_acc: 0.822
Epoch 8, loss: 0.415, acc: 0.775, val_loss: 0.417, val_acc: 0.767
Epoch 9, loss: 0.403, acc: 0.808, val_loss: 0.384, val_acc: 0.825
Epoch 10, loss: 0.395, acc: 0.812, val_loss: 0.392, val_acc: 0.811
Epoch 11, loss: 0.383, acc: 0.822, val_loss: 0.367, val_acc: 0.829
Epoch 12, loss: 0.376, acc: 0.826, val_loss: 0.373, val_acc: 0.822
Epoch 13, loss: 0.371, acc: 0.825, val_loss: 0.361, val_acc: 0.827
Epoch 14, loss: 0.369, acc: 0.827, val_loss: 0.361, val_acc: 0.828
Epoch 15, loss: 0.364, acc: 0.832, val_loss: 0.357, val_acc: 0.829
Epoch 16, loss: 0.363, acc: 0.831, val_loss: 0.359, val_acc: 0.826
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.8263473053892215 

2446 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.6244434208506064 

Threshold adjusted fairness score :  0.38485682010650635
Maximum Difference: 0.6151432
Minimum Difference: 0.005658567
Average (Mean) Difference: 0.2544034 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 32) 0.1
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 2) 0.1767766952966369
deepbayes: Using implicit prior
(100, 32) 0.1
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 2) 0.1767766952966369
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.646, acc: 0.595, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.590, acc: 0.759, val_loss: 0.639, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.605, acc: 0.759, val_loss: 0.574, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.557, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.563, acc: 0.759, val_loss: 0.563, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.559, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.553, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.557, acc: 0.759, val_loss: 0.558, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
 80%|████████  | 4/5 [29:58<07:58, 478.96s/it]100%|██████████| 5/5 [40:18<00:00, 529.70s/it]100%|██████████| 5/5 [40:18<00:00, 483.63s/it]
Epoch 9, loss: 0.555, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.552, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.555, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.554, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.999250054359436
Maximum Difference: 0.00074994564
Minimum Difference: 0.0
Average (Mean) Difference: 0.00021100359 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 5 N 32
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 32) 0.1
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 2) 0.1767766952966369
deepbayes: Using implicit prior
(100, 32) 0.1
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 2) 0.1767766952966369
Epoch 1, loss: 0.622, acc: 0.676, val_loss: 0.562, val_acc: 0.759
Epoch 2, loss: 0.574, acc: 0.759, val_loss: 0.556, val_acc: 0.759
Epoch 3, loss: 0.548, acc: 0.759, val_loss: 0.543, val_acc: 0.759
Epoch 4, loss: 0.540, acc: 0.759, val_loss: 0.529, val_acc: 0.759
Epoch 5, loss: 0.498, acc: 0.760, val_loss: 0.450, val_acc: 0.763
Epoch 6, loss: 0.412, acc: 0.811, val_loss: 0.398, val_acc: 0.827
Epoch 7, loss: 0.417, acc: 0.825, val_loss: 0.402, val_acc: 0.827
Epoch 8, loss: 0.384, acc: 0.827, val_loss: 0.377, val_acc: 0.818
Epoch 9, loss: 0.385, acc: 0.824, val_loss: 0.378, val_acc: 0.828
Epoch 10, loss: 0.375, acc: 0.825, val_loss: 0.359, val_acc: 0.827
Epoch 11, loss: 0.365, acc: 0.830, val_loss: 0.361, val_acc: 0.828
Epoch 12, loss: 0.365, acc: 0.829, val_loss: 0.352, val_acc: 0.831
Epoch 13, loss: 0.360, acc: 0.831, val_loss: 0.355, val_acc: 0.830
Epoch 14, loss: 0.358, acc: 0.834, val_loss: 0.346, val_acc: 0.837
Epoch 15, loss: 0.355, acc: 0.836, val_loss: 0.347, val_acc: 0.837
Epoch 16, loss: 0.353, acc: 0.833, val_loss: 0.342, val_acc: 0.838
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.8381698142177184 

3619 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.444342085060648 

Threshold adjusted fairness score :  0.2781987190246582
Maximum Difference: 0.7218013
Minimum Difference: 0.0020344257
Average (Mean) Difference: 0.3551586 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 32) 0.1
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 2) 0.1767766952966369
deepbayes: Using implicit prior
(100, 32) 0.1
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 2) 0.1767766952966369
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.608, acc: 0.735, val_loss: 0.610, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.597, acc: 0.759, val_loss: 0.591, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.557, acc: 0.759, val_loss: 0.558, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.560, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.554, acc: 0.759, val_loss: 0.557, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.556, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.553, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.555, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.554, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.553, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.553, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.553, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.553, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.990890383720398
Maximum Difference: 0.009109616
Minimum Difference: 5.9604645e-07
Average (Mean) Difference: 0.0027926587 

>> Writing out to dataframe ...
> Done.
Trial complete!

  0%|          | 0/5 [00:00<?, ?it/s] 20%|██        | 1/5 [05:44<22:57, 344.40s/it]Network : L 1 N 16
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 16) 0.1
(16, 2) 0.25
deepbayes: Using implicit prior
(100, 16) 0.1
(16, 2) 0.25
Epoch 1, loss: 0.574, acc: 0.743, val_loss: 0.529, val_acc: 0.759
Epoch 2, loss: 0.467, acc: 0.762, val_loss: 0.434, val_acc: 0.769
Epoch 3, loss: 0.426, acc: 0.785, val_loss: 0.409, val_acc: 0.795
Epoch 4, loss: 0.415, acc: 0.801, val_loss: 0.415, val_acc: 0.809
Epoch 5, loss: 0.419, acc: 0.808, val_loss: 0.405, val_acc: 0.809
Epoch 6, loss: 0.401, acc: 0.815, val_loss: 0.382, val_acc: 0.822
Epoch 7, loss: 0.384, acc: 0.823, val_loss: 0.378, val_acc: 0.825
Epoch 8, loss: 0.383, acc: 0.823, val_loss: 0.378, val_acc: 0.825
Epoch 9, loss: 0.381, acc: 0.824, val_loss: 0.373, val_acc: 0.828
Epoch 10, loss: 0.375, acc: 0.827, val_loss: 0.367, val_acc: 0.830
Epoch 11, loss: 0.369, acc: 0.829, val_loss: 0.361, val_acc: 0.829
Epoch 12, loss: 0.365, acc: 0.829, val_loss: 0.358, val_acc: 0.828
Epoch 13, loss: 0.363, acc: 0.831, val_loss: 0.357, val_acc: 0.829
Epoch 14, loss: 0.361, acc: 0.832, val_loss: 0.355, val_acc: 0.829
Epoch 15, loss: 0.359, acc: 0.833, val_loss: 0.351, val_acc: 0.831
Epoch 16, loss: 0.356, acc: 0.833, val_loss: 0.348, val_acc: 0.831
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.8314140948871488 

3162 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.5145094426531552 

Threshold adjusted fairness score :  0.3446451425552368
Maximum Difference: 0.65535486
Minimum Difference: 0.0034825206
Average (Mean) Difference: 0.29891232 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 16) 0.1
(16, 2) 0.25
deepbayes: Using implicit prior
(100, 16) 0.1
(16, 2) 0.25
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.680, acc: 0.530, val_loss: 0.612, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.611, acc: 0.759, val_loss: 0.826, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.570, acc: 0.759, val_loss: 0.577, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.555, acc: 0.759, val_loss: 0.560, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.552, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.554, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.552, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.553, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.552, acc: 0.759, val_loss: 0.550, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.553, acc: 0.759, val_loss: 0.550, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.552, acc: 0.759, val_loss: 0.550, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.552, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.8959949612617493
Maximum Difference: 0.10400504
Minimum Difference: 0.0
Average (Mean) Difference: 0.01914219 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 2 N 16
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 16) 0.1
(16, 16) 0.25
(16, 2) 0.25
deepbayes: Using implicit prior
(100, 16) 0.1
(16, 16) 0.25
(16, 2) 0.25
Epoch 1, loss: 0.585, acc: 0.734, val_loss: 0.551, val_acc: 0.759
Epoch 2, loss: 0.505, acc: 0.759, val_loss: 0.471, val_acc: 0.759
Epoch 3, loss: 0.448, acc: 0.760, val_loss: 0.414, val_acc: 0.761
Epoch 4, loss: 0.422, acc: 0.798, val_loss: 0.427, val_acc: 0.800
Epoch 5, loss: 0.428, acc: 0.789, val_loss: 0.409, val_acc: 0.777
Epoch 6, loss: 0.402, acc: 0.806, val_loss: 0.390, val_acc: 0.817
Epoch 7, loss: 0.400, acc: 0.813, val_loss: 0.399, val_acc: 0.818
Epoch 8, loss: 0.397, acc: 0.814, val_loss: 0.384, val_acc: 0.824
Epoch 9, loss: 0.382, acc: 0.821, val_loss: 0.376, val_acc: 0.822
Epoch 10, loss: 0.379, acc: 0.822, val_loss: 0.372, val_acc: 0.824
Epoch 11, loss: 0.371, acc: 0.828, val_loss: 0.365, val_acc: 0.828
Epoch 12, loss: 0.371, acc: 0.829, val_loss: 0.367, val_acc: 0.826
Epoch 13, loss: 0.368, acc: 0.829, val_loss: 0.360, val_acc: 0.827
Epoch 14, loss: 0.365, acc: 0.828, val_loss: 0.359, val_acc: 0.827
Epoch 15, loss: 0.364, acc: 0.832, val_loss: 0.356, val_acc: 0.831
Epoch 16, loss: 0.361, acc: 0.832, val_loss: 0.355, val_acc: 0.829
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.8288039306003377 

2787 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.5720865960386918 

Threshold adjusted fairness score :  0.4313797950744629
Maximum Difference: 0.5686202
Minimum Difference: 0.007984996
Average (Mean) Difference: 0.25059456 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 16) 0.1
(16, 16) 0.25
(16, 2) 0.25
deepbayes: Using implicit prior
(100, 16) 0.1
(16, 16) 0.25
(16, 2) 0.25
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.635, acc: 0.750, val_loss: 0.584, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.603, acc: 0.759, val_loss: 0.621, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.559, acc: 0.759, val_loss: 0.556, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.560, acc: 0.759, val_loss: 0.556, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.554, acc: 0.759, val_loss: 0.559, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.555, acc: 0.759, val_loss: 0.562, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.555, acc: 0.759, val_loss: 0.557, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.553, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.553, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
 40%|████      | 2/5 [12:34<19:09, 383.19s/it] 60%|██████    | 3/5 [20:32<14:12, 426.21s/it]Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9659502506256104
Maximum Difference: 0.03404975
Minimum Difference: 0.0
Average (Mean) Difference: 0.0005798468 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 3 N 16
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 16) 0.1
(16, 16) 0.25
(16, 16) 0.25
(16, 2) 0.25
deepbayes: Using implicit prior
(100, 16) 0.1
(16, 16) 0.25
(16, 16) 0.25
(16, 2) 0.25
Epoch 1, loss: 0.582, acc: 0.759, val_loss: 0.540, val_acc: 0.759
Epoch 2, loss: 0.527, acc: 0.759, val_loss: 0.486, val_acc: 0.759
Epoch 3, loss: 0.477, acc: 0.759, val_loss: 0.446, val_acc: 0.759
Epoch 4, loss: 0.430, acc: 0.759, val_loss: 0.421, val_acc: 0.759
Epoch 5, loss: 0.417, acc: 0.786, val_loss: 0.406, val_acc: 0.786
Epoch 6, loss: 0.397, acc: 0.813, val_loss: 0.386, val_acc: 0.822
Epoch 7, loss: 0.391, acc: 0.821, val_loss: 0.383, val_acc: 0.825
Epoch 8, loss: 0.386, acc: 0.822, val_loss: 0.377, val_acc: 0.830
Epoch 9, loss: 0.381, acc: 0.823, val_loss: 0.370, val_acc: 0.828
Epoch 10, loss: 0.373, acc: 0.827, val_loss: 0.363, val_acc: 0.829
Epoch 11, loss: 0.369, acc: 0.830, val_loss: 0.361, val_acc: 0.831
Epoch 12, loss: 0.367, acc: 0.829, val_loss: 0.358, val_acc: 0.830
Epoch 13, loss: 0.364, acc: 0.831, val_loss: 0.355, val_acc: 0.828
Epoch 14, loss: 0.361, acc: 0.832, val_loss: 0.353, val_acc: 0.830
Epoch 15, loss: 0.359, acc: 0.834, val_loss: 0.353, val_acc: 0.826
Epoch 16, loss: 0.356, acc: 0.834, val_loss: 0.352, val_acc: 0.834
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.8337171810225702 

2811 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.5684016582220175 

Threshold adjusted fairness score :  0.2875024080276489
Maximum Difference: 0.7124976
Minimum Difference: 0.005837679
Average (Mean) Difference: 0.28183848 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 16) 0.1
(16, 16) 0.25
(16, 16) 0.25
(16, 2) 0.25
deepbayes: Using implicit prior
(100, 16) 0.1
(16, 16) 0.25
(16, 16) 0.25
(16, 2) 0.25
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.631, acc: 0.724, val_loss: 0.556, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.574, acc: 0.759, val_loss: 0.635, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.593, acc: 0.759, val_loss: 0.569, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.556, acc: 0.759, val_loss: 0.548, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.562, acc: 0.759, val_loss: 0.560, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.559, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.553, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.557, acc: 0.759, val_loss: 0.559, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.556, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.554, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.555, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.553, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.554, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9923492670059204
Maximum Difference: 0.007650733
Minimum Difference: 0.0
Average (Mean) Difference: 0.0018939999 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 4 N 16
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 16) 0.1
(16, 16) 0.25
(16, 16) 0.25
(16, 16) 0.25
(16, 2) 0.25
deepbayes: Using implicit prior
(100, 16) 0.1
(16, 16) 0.25
(16, 16) 0.25
(16, 16) 0.25
(16, 2) 0.25
Epoch 1, loss: 0.594, acc: 0.734, val_loss: 0.543, val_acc: 0.759
Epoch 2, loss: 0.535, acc: 0.759, val_loss: 0.491, val_acc: 0.759
Epoch 3, loss: 0.486, acc: 0.759, val_loss: 0.444, val_acc: 0.759
Epoch 4, loss: 0.440, acc: 0.764, val_loss: 0.425, val_acc: 0.804
Epoch 5, loss: 0.431, acc: 0.761, val_loss: 0.413, val_acc: 0.765
Epoch 6, loss: 0.404, acc: 0.810, val_loss: 0.407, val_acc: 0.811
Epoch 7, loss: 0.407, acc: 0.812, val_loss: 0.390, val_acc: 0.821
Epoch 8, loss: 0.386, acc: 0.819, val_loss: 0.384, val_acc: 0.817
Epoch 9, loss: 0.389, acc: 0.814, val_loss: 0.375, val_acc: 0.826
Epoch 10, loss: 0.378, acc: 0.825, val_loss: 0.374, val_acc: 0.831
Epoch 11, loss: 0.380, acc: 0.824, val_loss: 0.370, val_acc: 0.822
Epoch 12, loss: 0.370, acc: 0.827, val_loss: 0.361, val_acc: 0.831
Epoch 13, loss: 0.370, acc: 0.828, val_loss: 0.360, val_acc: 0.832
Epoch 14, loss: 0.366, acc: 0.829, val_loss: 0.358, val_acc: 0.827
Epoch 15, loss: 0.365, acc: 0.829, val_loss: 0.355, val_acc: 0.828
Epoch 16, loss: 0.361, acc: 0.831, val_loss: 0.352, val_acc: 0.832
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.8315676339628435 

2662 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.5912789805005374 

Threshold adjusted fairness score :  0.3265880346298218
Maximum Difference: 0.67341197
Minimum Difference: 0.0018823147
Average (Mean) Difference: 0.26490986 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 16) 0.1
(16, 16) 0.25
(16, 16) 0.25
(16, 16) 0.25
(16, 2) 0.25
deepbayes: Using implicit prior
(100, 16) 0.1
(16, 16) 0.25
(16, 16) 0.25
(16, 16) 0.25
(16, 2) 0.25
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.629, acc: 0.732, val_loss: 0.557, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.579, acc: 0.759, val_loss: 0.631, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.593, acc: 0.759, val_loss: 0.570, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.555, acc: 0.759, val_loss: 0.558, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.563, acc: 0.759, val_loss: 0.563, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.558, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.553, acc: 0.759, val_loss: 0.556, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.559, acc: 0.759, val_loss: 0.559, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.557, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.554, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.555, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
 80%|████████  | 4/5 [29:34<07:52, 472.19s/it]100%|██████████| 5/5 [39:42<00:00, 520.93s/it]100%|██████████| 5/5 [39:42<00:00, 476.43s/it]
Epoch 14, loss: 0.552, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.554, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9990092515945435
Maximum Difference: 0.0009907484
Minimum Difference: 0.0
Average (Mean) Difference: 2.7786773e-05 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 5 N 16
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 16) 0.1
(16, 16) 0.25
(16, 16) 0.25
(16, 16) 0.25
(16, 16) 0.25
(16, 2) 0.25
deepbayes: Using implicit prior
(100, 16) 0.1
(16, 16) 0.25
(16, 16) 0.25
(16, 16) 0.25
(16, 16) 0.25
(16, 2) 0.25
Epoch 1, loss: 0.645, acc: 0.644, val_loss: 0.566, val_acc: 0.759
Epoch 2, loss: 0.567, acc: 0.759, val_loss: 0.598, val_acc: 0.759
Epoch 3, loss: 0.610, acc: 0.759, val_loss: 0.597, val_acc: 0.759
Epoch 4, loss: 0.567, acc: 0.759, val_loss: 0.550, val_acc: 0.759
Epoch 5, loss: 0.554, acc: 0.759, val_loss: 0.563, val_acc: 0.759
Epoch 6, loss: 0.555, acc: 0.759, val_loss: 0.537, val_acc: 0.759
Epoch 7, loss: 0.513, acc: 0.759, val_loss: 0.483, val_acc: 0.759
Epoch 8, loss: 0.451, acc: 0.796, val_loss: 0.416, val_acc: 0.819
Epoch 9, loss: 0.415, acc: 0.817, val_loss: 0.419, val_acc: 0.814
Epoch 10, loss: 0.409, acc: 0.822, val_loss: 0.398, val_acc: 0.824
Epoch 11, loss: 0.394, acc: 0.825, val_loss: 0.380, val_acc: 0.819
Epoch 12, loss: 0.386, acc: 0.819, val_loss: 0.378, val_acc: 0.825
Epoch 13, loss: 0.384, acc: 0.818, val_loss: 0.381, val_acc: 0.821
Epoch 14, loss: 0.379, acc: 0.822, val_loss: 0.373, val_acc: 0.822
Epoch 15, loss: 0.373, acc: 0.823, val_loss: 0.364, val_acc: 0.827
Epoch 16, loss: 0.374, acc: 0.824, val_loss: 0.364, val_acc: 0.827
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.8269614616920006 

3783 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.41916167664670656 

Threshold adjusted fairness score :  0.36100053787231445
Maximum Difference: 0.63899946
Minimum Difference: 2.3841858e-07
Average (Mean) Difference: 0.36500642 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 16) 0.1
(16, 16) 0.25
(16, 16) 0.25
(16, 16) 0.25
(16, 16) 0.25
(16, 2) 0.25
deepbayes: Using implicit prior
(100, 16) 0.1
(16, 16) 0.25
(16, 16) 0.25
(16, 16) 0.25
(16, 16) 0.25
(16, 2) 0.25
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.657, acc: 0.603, val_loss: 0.574, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.564, acc: 0.759, val_loss: 0.589, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.606, acc: 0.759, val_loss: 0.610, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.592, acc: 0.759, val_loss: 0.571, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.557, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.560, acc: 0.759, val_loss: 0.568, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.569, acc: 0.759, val_loss: 0.564, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.557, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.554, acc: 0.759, val_loss: 0.558, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.561, acc: 0.759, val_loss: 0.560, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.558, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.552, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.555, acc: 0.759, val_loss: 0.556, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.556, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.553, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9999093413352966
Maximum Difference: 9.0658665e-05
Minimum Difference: 0.0
Average (Mean) Difference: 1.3919648e-08 

>> Writing out to dataframe ...
> Done.
Trial complete!

  0%|          | 0/5 [00:00<?, ?it/s] 20%|██        | 1/5 [05:42<22:48, 342.11s/it]Network : L 1 N 8
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 8) 0.1
(8, 2) 0.3535533905932738
deepbayes: Using implicit prior
(100, 8) 0.1
(8, 2) 0.3535533905932738
Epoch 1, loss: 0.629, acc: 0.630, val_loss: 0.580, val_acc: 0.759
Epoch 2, loss: 0.525, acc: 0.759, val_loss: 0.460, val_acc: 0.759
Epoch 3, loss: 0.469, acc: 0.759, val_loss: 0.462, val_acc: 0.759
Epoch 4, loss: 0.441, acc: 0.759, val_loss: 0.420, val_acc: 0.759
Epoch 5, loss: 0.422, acc: 0.768, val_loss: 0.415, val_acc: 0.805
Epoch 6, loss: 0.421, acc: 0.787, val_loss: 0.413, val_acc: 0.771
Epoch 7, loss: 0.409, acc: 0.801, val_loss: 0.395, val_acc: 0.819
Epoch 8, loss: 0.392, acc: 0.818, val_loss: 0.382, val_acc: 0.821
Epoch 9, loss: 0.388, acc: 0.815, val_loss: 0.381, val_acc: 0.825
Epoch 10, loss: 0.386, acc: 0.822, val_loss: 0.376, val_acc: 0.827
Epoch 11, loss: 0.378, acc: 0.826, val_loss: 0.366, val_acc: 0.832
Epoch 12, loss: 0.368, acc: 0.830, val_loss: 0.358, val_acc: 0.831
Epoch 13, loss: 0.364, acc: 0.829, val_loss: 0.357, val_acc: 0.828
Epoch 14, loss: 0.365, acc: 0.831, val_loss: 0.358, val_acc: 0.827
Epoch 15, loss: 0.363, acc: 0.828, val_loss: 0.354, val_acc: 0.827
Epoch 16, loss: 0.359, acc: 0.831, val_loss: 0.351, val_acc: 0.832
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.8320282511899278 

3086 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.5261784124059573 

Threshold adjusted fairness score :  0.41868799924850464
Maximum Difference: 0.581312
Minimum Difference: 0.0042243004
Average (Mean) Difference: 0.27927053 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 8) 0.1
(8, 2) 0.3535533905932738
deepbayes: Using implicit prior
(100, 8) 0.1
(8, 2) 0.3535533905932738
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.651, acc: 0.689, val_loss: 0.785, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.627, acc: 0.759, val_loss: 0.572, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.597, acc: 0.759, val_loss: 0.571, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.573, acc: 0.759, val_loss: 0.573, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.555, acc: 0.759, val_loss: 0.601, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.561, acc: 0.759, val_loss: 0.615, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.566, acc: 0.759, val_loss: 0.627, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.571, acc: 0.759, val_loss: 0.615, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.562, acc: 0.759, val_loss: 0.589, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.554, acc: 0.759, val_loss: 0.579, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.554, acc: 0.759, val_loss: 0.558, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.554, acc: 0.759, val_loss: 0.559, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.554, acc: 0.759, val_loss: 0.556, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.554, acc: 0.759, val_loss: 0.549, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.553, acc: 0.759, val_loss: 0.559, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.8674324750900269
Maximum Difference: 0.13256752
Minimum Difference: 0.056162298
Average (Mean) Difference: 0.085229725 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 2 N 8
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 8) 0.1
(8, 8) 0.3535533905932738
(8, 2) 0.3535533905932738
deepbayes: Using implicit prior
(100, 8) 0.1
(8, 8) 0.3535533905932738
(8, 2) 0.3535533905932738
Epoch 1, loss: 0.613, acc: 0.731, val_loss: 0.554, val_acc: 0.759
Epoch 2, loss: 0.512, acc: 0.759, val_loss: 0.463, val_acc: 0.760
Epoch 3, loss: 0.438, acc: 0.800, val_loss: 0.413, val_acc: 0.777
Epoch 4, loss: 0.407, acc: 0.800, val_loss: 0.407, val_acc: 0.807
Epoch 5, loss: 0.415, acc: 0.817, val_loss: 0.405, val_acc: 0.803
Epoch 6, loss: 0.391, acc: 0.822, val_loss: 0.379, val_acc: 0.819
Epoch 7, loss: 0.388, acc: 0.819, val_loss: 0.389, val_acc: 0.819
Epoch 8, loss: 0.387, acc: 0.819, val_loss: 0.376, val_acc: 0.818
Epoch 9, loss: 0.374, acc: 0.825, val_loss: 0.365, val_acc: 0.824
Epoch 10, loss: 0.372, acc: 0.828, val_loss: 0.364, val_acc: 0.828
Epoch 11, loss: 0.367, acc: 0.830, val_loss: 0.354, val_acc: 0.829
Epoch 12, loss: 0.363, acc: 0.831, val_loss: 0.356, val_acc: 0.825
Epoch 13, loss: 0.362, acc: 0.832, val_loss: 0.357, val_acc: 0.826
Epoch 14, loss: 0.357, acc: 0.834, val_loss: 0.351, val_acc: 0.829
Epoch 15, loss: 0.354, acc: 0.834, val_loss: 0.348, val_acc: 0.834
Epoch 16, loss: 0.353, acc: 0.835, val_loss: 0.345, val_acc: 0.835
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.8347919545524336 

3637 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.44157838169814223 

Threshold adjusted fairness score :  0.32246899604797363
Maximum Difference: 0.677531
Minimum Difference: 0.0047345757
Average (Mean) Difference: 0.3532158 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 8) 0.1
(8, 8) 0.3535533905932738
(8, 2) 0.3535533905932738
deepbayes: Using implicit prior
(100, 8) 0.1
(8, 8) 0.3535533905932738
(8, 2) 0.3535533905932738
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.643, acc: 0.756, val_loss: 0.560, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.575, acc: 0.759, val_loss: 0.665, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.592, acc: 0.759, val_loss: 0.572, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.555, acc: 0.759, val_loss: 0.549, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.557, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.553, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.555, acc: 0.759, val_loss: 0.561, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.556, acc: 0.759, val_loss: 0.558, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.554, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.555, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.553, acc: 0.759, val_loss: 0.557, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.554, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.553, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.553, acc: 0.759, val_loss: 0.550, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.
 40%|████      | 2/5 [12:30<19:03, 381.21s/it] 60%|██████    | 3/5 [20:24<14:06, 423.43s/it]
 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9446209669113159
Maximum Difference: 0.055379033
Minimum Difference: 0.0
Average (Mean) Difference: 0.0117555605 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 3 N 8
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 8) 0.1
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 2) 0.3535533905932738
deepbayes: Using implicit prior
(100, 8) 0.1
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 2) 0.3535533905932738
Epoch 1, loss: 0.596, acc: 0.747, val_loss: 0.535, val_acc: 0.759
Epoch 2, loss: 0.528, acc: 0.759, val_loss: 0.454, val_acc: 0.759
Epoch 3, loss: 0.472, acc: 0.759, val_loss: 0.469, val_acc: 0.759
Epoch 4, loss: 0.449, acc: 0.759, val_loss: 0.437, val_acc: 0.759
Epoch 5, loss: 0.451, acc: 0.759, val_loss: 0.444, val_acc: 0.759
Epoch 6, loss: 0.438, acc: 0.759, val_loss: 0.419, val_acc: 0.759
Epoch 7, loss: 0.431, acc: 0.759, val_loss: 0.431, val_acc: 0.759
Epoch 8, loss: 0.430, acc: 0.760, val_loss: 0.410, val_acc: 0.759
Epoch 9, loss: 0.415, acc: 0.760, val_loss: 0.418, val_acc: 0.759
Epoch 10, loss: 0.413, acc: 0.776, val_loss: 0.396, val_acc: 0.816
Epoch 11, loss: 0.400, acc: 0.821, val_loss: 0.393, val_acc: 0.819
Epoch 12, loss: 0.397, acc: 0.810, val_loss: 0.391, val_acc: 0.804
Epoch 13, loss: 0.391, acc: 0.817, val_loss: 0.383, val_acc: 0.823
Epoch 14, loss: 0.386, acc: 0.824, val_loss: 0.379, val_acc: 0.823
Epoch 15, loss: 0.383, acc: 0.824, val_loss: 0.374, val_acc: 0.823
Epoch 16, loss: 0.378, acc: 0.824, val_loss: 0.370, val_acc: 0.826
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.8255796100107478 

1637 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.7486565330876709 

Threshold adjusted fairness score :  0.5045706331729889
Maximum Difference: 0.49542937
Minimum Difference: 0.0
Average (Mean) Difference: 0.14094293 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 8) 0.1
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 2) 0.3535533905932738
deepbayes: Using implicit prior
(100, 8) 0.1
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 2) 0.3535533905932738
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.653, acc: 0.673, val_loss: 0.574, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.562, acc: 0.759, val_loss: 0.598, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.609, acc: 0.759, val_loss: 0.645, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.598, acc: 0.759, val_loss: 0.579, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.556, acc: 0.759, val_loss: 0.556, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.565, acc: 0.759, val_loss: 0.573, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.572, acc: 0.759, val_loss: 0.566, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.558, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.554, acc: 0.759, val_loss: 0.557, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.561, acc: 0.759, val_loss: 0.564, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.563, acc: 0.759, val_loss: 0.560, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.556, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.552, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.555, acc: 0.759, val_loss: 0.557, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.557, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.554, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9893426299095154
Maximum Difference: 0.01065737
Minimum Difference: 0.0
Average (Mean) Difference: 0.00017008653 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 4 N 8
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 8) 0.1
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 2) 0.3535533905932738
deepbayes: Using implicit prior
(100, 8) 0.1
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 2) 0.3535533905932738
Epoch 1, loss: 0.659, acc: 0.660, val_loss: 0.597, val_acc: 0.759
Epoch 2, loss: 0.564, acc: 0.759, val_loss: 0.557, val_acc: 0.759
Epoch 3, loss: 0.583, acc: 0.759, val_loss: 0.604, val_acc: 0.759
Epoch 4, loss: 0.606, acc: 0.759, val_loss: 0.596, val_acc: 0.759
Epoch 5, loss: 0.576, acc: 0.759, val_loss: 0.558, val_acc: 0.759
Epoch 6, loss: 0.554, acc: 0.759, val_loss: 0.557, val_acc: 0.759
Epoch 7, loss: 0.565, acc: 0.759, val_loss: 0.572, val_acc: 0.759
Epoch 8, loss: 0.568, acc: 0.759, val_loss: 0.561, val_acc: 0.759
Epoch 9, loss: 0.556, acc: 0.759, val_loss: 0.552, val_acc: 0.759
Epoch 10, loss: 0.553, acc: 0.759, val_loss: 0.555, val_acc: 0.759
Epoch 11, loss: 0.557, acc: 0.759, val_loss: 0.558, val_acc: 0.759
Epoch 12, loss: 0.557, acc: 0.759, val_loss: 0.555, val_acc: 0.759
Epoch 13, loss: 0.554, acc: 0.759, val_loss: 0.552, val_acc: 0.759
Epoch 14, loss: 0.552, acc: 0.759, val_loss: 0.553, val_acc: 0.759
Epoch 15, loss: 0.554, acc: 0.759, val_loss: 0.555, val_acc: 0.759
Epoch 16, loss: 0.554, acc: 0.759, val_loss: 0.553, val_acc: 0.759
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9996154308319092
Maximum Difference: 0.00038456917
Minimum Difference: 0.0
Average (Mean) Difference: 5.9046396e-08 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 8) 0.1
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 2) 0.3535533905932738
deepbayes: Using implicit prior
(100, 8) 0.1
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 2) 0.3535533905932738
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.637, acc: 0.697, val_loss: 0.556, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.576, acc: 0.759, val_loss: 0.618, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.601, acc: 0.759, val_loss: 0.570, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.557, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.560, acc: 0.759, val_loss: 0.564, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.563, acc: 0.759, val_loss: 0.559, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.555, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.554, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
 80%|████████  | 4/5 [29:27<07:50, 470.79s/it]100%|██████████| 5/5 [39:37<00:00, 520.84s/it]100%|██████████| 5/5 [39:37<00:00, 475.47s/it]
Epoch 9, loss: 0.557, acc: 0.759, val_loss: 0.558, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.557, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.553, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.555, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.554, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9934982657432556
Maximum Difference: 0.0065017343
Minimum Difference: 0.0
Average (Mean) Difference: 5.1727508e-05 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 5 N 8
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 8) 0.1
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 2) 0.3535533905932738
deepbayes: Using implicit prior
(100, 8) 0.1
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 2) 0.3535533905932738
Epoch 1, loss: 0.647, acc: 0.653, val_loss: 0.570, val_acc: 0.759
Epoch 2, loss: 0.560, acc: 0.759, val_loss: 0.581, val_acc: 0.759
Epoch 3, loss: 0.591, acc: 0.759, val_loss: 0.581, val_acc: 0.759
Epoch 4, loss: 0.563, acc: 0.759, val_loss: 0.550, val_acc: 0.759
Epoch 5, loss: 0.553, acc: 0.759, val_loss: 0.561, val_acc: 0.759
Epoch 6, loss: 0.565, acc: 0.759, val_loss: 0.564, val_acc: 0.759
Epoch 7, loss: 0.557, acc: 0.759, val_loss: 0.550, val_acc: 0.759
Epoch 8, loss: 0.549, acc: 0.759, val_loss: 0.547, val_acc: 0.759
Epoch 9, loss: 0.546, acc: 0.759, val_loss: 0.539, val_acc: 0.759
Epoch 10, loss: 0.524, acc: 0.759, val_loss: 0.504, val_acc: 0.759
Epoch 11, loss: 0.479, acc: 0.759, val_loss: 0.450, val_acc: 0.759
Epoch 12, loss: 0.436, acc: 0.759, val_loss: 0.421, val_acc: 0.759
Epoch 13, loss: 0.430, acc: 0.744, val_loss: 0.427, val_acc: 0.728
Epoch 14, loss: 0.424, acc: 0.767, val_loss: 0.406, val_acc: 0.813
Epoch 15, loss: 0.400, acc: 0.813, val_loss: 0.397, val_acc: 0.815
Epoch 16, loss: 0.402, acc: 0.814, val_loss: 0.405, val_acc: 0.813
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.8131429448794718 

1336 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.7948717948717949 

Threshold adjusted fairness score :  0.6070267856121063
Maximum Difference: 0.3929732
Minimum Difference: 0.0054581165
Average (Mean) Difference: 0.14301915 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 8) 0.1
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 2) 0.3535533905932738
deepbayes: Using implicit prior
(100, 8) 0.1
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 2) 0.3535533905932738
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.644, acc: 0.645, val_loss: 0.560, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.571, acc: 0.759, val_loss: 0.611, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.609, acc: 0.759, val_loss: 0.584, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.560, acc: 0.759, val_loss: 0.557, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.571, acc: 0.759, val_loss: 0.578, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.568, acc: 0.759, val_loss: 0.556, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.554, acc: 0.759, val_loss: 0.556, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.562, acc: 0.759, val_loss: 0.566, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.566, acc: 0.759, val_loss: 0.562, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.557, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.553, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.557, acc: 0.759, val_loss: 0.558, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.557, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.553, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.555, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9990904331207275
Maximum Difference: 0.0009095669
Minimum Difference: 0.0
Average (Mean) Difference: 0.00012444545 

>> Writing out to dataframe ...
> Done.
Trial complete!

  0%|          | 0/5 [00:00<?, ?it/s] 20%|██        | 1/5 [05:44<22:57, 344.33s/it]Network : L 1 N 4
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 4) 0.1
(4, 2) 0.5
deepbayes: Using implicit prior
(100, 4) 0.1
(4, 2) 0.5
Epoch 1, loss: 0.537, acc: 0.736, val_loss: 0.444, val_acc: 0.770
Epoch 2, loss: 0.435, acc: 0.762, val_loss: 0.414, val_acc: 0.768
Epoch 3, loss: 0.420, acc: 0.805, val_loss: 0.426, val_acc: 0.818
Epoch 4, loss: 0.417, acc: 0.799, val_loss: 0.407, val_acc: 0.766
Epoch 5, loss: 0.417, acc: 0.753, val_loss: 0.409, val_acc: 0.765
Epoch 6, loss: 0.410, acc: 0.799, val_loss: 0.404, val_acc: 0.829
Epoch 7, loss: 0.408, acc: 0.821, val_loss: 0.403, val_acc: 0.826
Epoch 8, loss: 0.396, acc: 0.822, val_loss: 0.387, val_acc: 0.817
Epoch 9, loss: 0.390, acc: 0.808, val_loss: 0.380, val_acc: 0.815
Epoch 10, loss: 0.380, acc: 0.822, val_loss: 0.372, val_acc: 0.828
Epoch 11, loss: 0.375, acc: 0.829, val_loss: 0.369, val_acc: 0.828
Epoch 12, loss: 0.370, acc: 0.828, val_loss: 0.365, val_acc: 0.826
Epoch 13, loss: 0.370, acc: 0.827, val_loss: 0.363, val_acc: 0.826
Epoch 14, loss: 0.367, acc: 0.830, val_loss: 0.365, val_acc: 0.828
Epoch 15, loss: 0.366, acc: 0.831, val_loss: 0.360, val_acc: 0.825
Epoch 16, loss: 0.364, acc: 0.830, val_loss: 0.358, val_acc: 0.828
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.828036235221864 

2749 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.5779210809150929 

Threshold adjusted fairness score :  0.36670243740081787
Maximum Difference: 0.63329756
Minimum Difference: 0.0
Average (Mean) Difference: 0.24321756 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 4) 0.1
(4, 2) 0.5
deepbayes: Using implicit prior
(100, 4) 0.1
(4, 2) 0.5
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.652, acc: 0.632, val_loss: 0.680, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.644, acc: 0.759, val_loss: 0.728, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.567, acc: 0.759, val_loss: 0.573, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.591, acc: 0.759, val_loss: 0.580, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.569, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.554, acc: 0.759, val_loss: 0.567, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.566, acc: 0.759, val_loss: 0.583, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.574, acc: 0.759, val_loss: 0.582, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.568, acc: 0.759, val_loss: 0.567, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.557, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.553, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.557, acc: 0.759, val_loss: 0.558, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.560, acc: 0.759, val_loss: 0.558, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.557, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.8975364565849304
Maximum Difference: 0.10246354
Minimum Difference: 0.0
Average (Mean) Difference: 0.0023012292 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 2 N 4
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 4) 0.1
(4, 4) 0.5
(4, 2) 0.5
deepbayes: Using implicit prior
(100, 4) 0.1
(4, 4) 0.5
(4, 2) 0.5
Epoch 1, loss: 0.614, acc: 0.717, val_loss: 0.539, val_acc: 0.759
Epoch 2, loss: 0.566, acc: 0.759, val_loss: 0.541, val_acc: 0.759
Epoch 3, loss: 0.517, acc: 0.759, val_loss: 0.524, val_acc: 0.759
Epoch 4, loss: 0.494, acc: 0.759, val_loss: 0.460, val_acc: 0.759
Epoch 5, loss: 0.455, acc: 0.759, val_loss: 0.445, val_acc: 0.759
Epoch 6, loss: 0.434, acc: 0.759, val_loss: 0.422, val_acc: 0.759
Epoch 7, loss: 0.430, acc: 0.742, val_loss: 0.428, val_acc: 0.718
Epoch 8, loss: 0.434, acc: 0.716, val_loss: 0.425, val_acc: 0.719
Epoch 9, loss: 0.428, acc: 0.733, val_loss: 0.418, val_acc: 0.754
Epoch 10, loss: 0.420, acc: 0.780, val_loss: 0.414, val_acc: 0.803
Epoch 11, loss: 0.412, acc: 0.781, val_loss: 0.402, val_acc: 0.814
Epoch 12, loss: 0.403, acc: 0.811, val_loss: 0.402, val_acc: 0.815
Epoch 13, loss: 0.403, acc: 0.820, val_loss: 0.397, val_acc: 0.821
Epoch 14, loss: 0.400, acc: 0.817, val_loss: 0.398, val_acc: 0.818
Epoch 15, loss: 0.396, acc: 0.819, val_loss: 0.389, val_acc: 0.826
Epoch 16, loss: 0.390, acc: 0.822, val_loss: 0.383, val_acc: 0.822
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.8223552894211577 

1660 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.7451251343466913 

Threshold adjusted fairness score :  0.5930095613002777
Maximum Difference: 0.40699044
Minimum Difference: 0.0
Average (Mean) Difference: 0.14500567 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 4) 0.1
(4, 4) 0.5
(4, 2) 0.5
deepbayes: Using implicit prior
(100, 4) 0.1
(4, 4) 0.5
(4, 2) 0.5
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.684, acc: 0.610, val_loss: 0.623, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.582, acc: 0.759, val_loss: 0.548, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.561, acc: 0.759, val_loss: 0.577, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.594, acc: 0.759, val_loss: 0.609, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.605, acc: 0.759, val_loss: 0.594, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.582, acc: 0.759, val_loss: 0.566, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.558, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.553, acc: 0.759, val_loss: 0.557, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.562, acc: 0.759, val_loss: 0.566, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.566, acc: 0.759, val_loss: 0.564, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.559, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.554, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.557, acc: 0.759, val_loss: 0.557, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.557, acc: 0.759, val_loss: 0.556, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.554, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :   40%|████      | 2/5 [12:35<19:11, 383.74s/it] 60%|██████    | 3/5 [20:33<14:12, 426.50s/it]0.9913835525512695
Maximum Difference: 0.008616447
Minimum Difference: 0.0
Average (Mean) Difference: 3.035618e-06 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 3 N 4
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 4) 0.1
(4, 4) 0.5
(4, 4) 0.5
(4, 2) 0.5
deepbayes: Using implicit prior
(100, 4) 0.1
(4, 4) 0.5
(4, 4) 0.5
(4, 2) 0.5
Epoch 1, loss: 0.675, acc: 0.634, val_loss: 0.628, val_acc: 0.759
Epoch 2, loss: 0.586, acc: 0.759, val_loss: 0.556, val_acc: 0.759
Epoch 3, loss: 0.556, acc: 0.759, val_loss: 0.565, val_acc: 0.759
Epoch 4, loss: 0.583, acc: 0.759, val_loss: 0.598, val_acc: 0.759
Epoch 5, loss: 0.604, acc: 0.759, val_loss: 0.604, val_acc: 0.759
Epoch 6, loss: 0.595, acc: 0.759, val_loss: 0.582, val_acc: 0.759
Epoch 7, loss: 0.569, acc: 0.759, val_loss: 0.557, val_acc: 0.759
Epoch 8, loss: 0.553, acc: 0.759, val_loss: 0.554, val_acc: 0.759
Epoch 9, loss: 0.560, acc: 0.759, val_loss: 0.567, val_acc: 0.759
Epoch 10, loss: 0.571, acc: 0.759, val_loss: 0.571, val_acc: 0.759
Epoch 11, loss: 0.566, acc: 0.759, val_loss: 0.560, val_acc: 0.759
Epoch 12, loss: 0.556, acc: 0.759, val_loss: 0.552, val_acc: 0.759
Epoch 13, loss: 0.553, acc: 0.759, val_loss: 0.554, val_acc: 0.759
Epoch 14, loss: 0.557, acc: 0.759, val_loss: 0.559, val_acc: 0.759
Epoch 15, loss: 0.559, acc: 0.759, val_loss: 0.558, val_acc: 0.759
Epoch 16, loss: 0.557, acc: 0.759, val_loss: 0.554, val_acc: 0.759
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.999697744846344
Maximum Difference: 0.00030225515
Minimum Difference: 0.0
Average (Mean) Difference: 1.6287177e-07 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 4) 0.1
(4, 4) 0.5
(4, 4) 0.5
(4, 2) 0.5
deepbayes: Using implicit prior
(100, 4) 0.1
(4, 4) 0.5
(4, 4) 0.5
(4, 2) 0.5
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.676, acc: 0.641, val_loss: 0.571, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.562, acc: 0.759, val_loss: 0.593, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.602, acc: 0.759, val_loss: 0.636, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.595, acc: 0.759, val_loss: 0.574, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.557, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.561, acc: 0.759, val_loss: 0.569, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.571, acc: 0.759, val_loss: 0.567, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.561, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.556, acc: 0.759, val_loss: 0.559, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.560, acc: 0.759, val_loss: 0.560, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.559, acc: 0.759, val_loss: 0.556, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.554, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.552, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.554, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.555, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9942853450775146
Maximum Difference: 0.005714655
Minimum Difference: 0.0
Average (Mean) Difference: 1.7872517e-06 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 4 N 4
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 4) 0.1
(4, 4) 0.5
(4, 4) 0.5
(4, 4) 0.5
(4, 2) 0.5
deepbayes: Using implicit prior
(100, 4) 0.1
(4, 4) 0.5
(4, 4) 0.5
(4, 4) 0.5
(4, 2) 0.5
Epoch 1, loss: 0.603, acc: 0.758, val_loss: 0.543, val_acc: 0.759
Epoch 2, loss: 0.538, acc: 0.759, val_loss: 0.519, val_acc: 0.759
Epoch 3, loss: 0.517, acc: 0.759, val_loss: 0.484, val_acc: 0.759
Epoch 4, loss: 0.447, acc: 0.759, val_loss: 0.434, val_acc: 0.759
Epoch 5, loss: 0.438, acc: 0.771, val_loss: 0.423, val_acc: 0.756
Epoch 6, loss: 0.423, acc: 0.750, val_loss: 0.410, val_acc: 0.773
Epoch 7, loss: 0.407, acc: 0.808, val_loss: 0.409, val_acc: 0.808
Epoch 8, loss: 0.409, acc: 0.815, val_loss: 0.407, val_acc: 0.819
Epoch 9, loss: 0.406, acc: 0.818, val_loss: 0.402, val_acc: 0.819
Epoch 10, loss: 0.399, acc: 0.812, val_loss: 0.394, val_acc: 0.812
Epoch 11, loss: 0.393, acc: 0.812, val_loss: 0.388, val_acc: 0.821
Epoch 12, loss: 0.389, acc: 0.818, val_loss: 0.381, val_acc: 0.821
Epoch 13, loss: 0.384, acc: 0.820, val_loss: 0.377, val_acc: 0.823
Epoch 14, loss: 0.379, acc: 0.825, val_loss: 0.374, val_acc: 0.828
Epoch 15, loss: 0.376, acc: 0.826, val_loss: 0.369, val_acc: 0.830
Epoch 16, loss: 0.373, acc: 0.827, val_loss: 0.367, val_acc: 0.827
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.8271150007676954 

1635 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.7489636112390603 

Threshold adjusted fairness score :  0.37023383378982544
Maximum Difference: 0.62976617
Minimum Difference: 0.0
Average (Mean) Difference: 0.17831184 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 4) 0.1
(4, 4) 0.5
(4, 4) 0.5
(4, 4) 0.5
(4, 2) 0.5
deepbayes: Using implicit prior
(100, 4) 0.1
(4, 4) 0.5
(4, 4) 0.5
(4, 4) 0.5
(4, 2) 0.5
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.691, acc: 0.536, val_loss: 0.624, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.582, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.558, acc: 0.759, val_loss: 0.571, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.589, acc: 0.759, val_loss: 0.604, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.607, acc: 0.759, val_loss: 0.604, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.592, acc: 0.759, val_loss: 0.577, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.564, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.553, acc: 0.759, val_loss: 0.556, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.563, acc: 0.759, val_loss: 0.569, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.570, acc: 0.759, val_loss: 0.569, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.563, acc: 0.759, val_loss: 0.557, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.554, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.553, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.557, acc: 0.759, val_loss: 0.559, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.559, acc: 0.759, val_loss: 0.558, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
 80%|████████  | 4/5 [29:38<07:53, 473.53s/it]100%|██████████| 5/5 [39:46<00:00, 521.94s/it]100%|██████████| 5/5 [39:46<00:00, 477.29s/it]
Epoch 16, loss: 0.556, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  1.0
Maximum Difference: 0.0
Minimum Difference: 0.0
Average (Mean) Difference: 0.0 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 5 N 4
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 4) 0.1
(4, 4) 0.5
(4, 4) 0.5
(4, 4) 0.5
(4, 4) 0.5
(4, 2) 0.5
deepbayes: Using implicit prior
(100, 4) 0.1
(4, 4) 0.5
(4, 4) 0.5
(4, 4) 0.5
(4, 4) 0.5
(4, 2) 0.5
Epoch 1, loss: 0.671, acc: 0.685, val_loss: 0.629, val_acc: 0.759
Epoch 2, loss: 0.587, acc: 0.759, val_loss: 0.557, val_acc: 0.759
Epoch 3, loss: 0.556, acc: 0.759, val_loss: 0.565, val_acc: 0.759
Epoch 4, loss: 0.582, acc: 0.759, val_loss: 0.597, val_acc: 0.759
Epoch 5, loss: 0.603, acc: 0.759, val_loss: 0.604, val_acc: 0.759
Epoch 6, loss: 0.595, acc: 0.759, val_loss: 0.582, val_acc: 0.759
Epoch 7, loss: 0.569, acc: 0.759, val_loss: 0.557, val_acc: 0.759
Epoch 8, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759
Epoch 9, loss: 0.560, acc: 0.759, val_loss: 0.567, val_acc: 0.759
Epoch 10, loss: 0.570, acc: 0.759, val_loss: 0.569, val_acc: 0.759
Epoch 11, loss: 0.564, acc: 0.759, val_loss: 0.557, val_acc: 0.759
Epoch 12, loss: 0.552, acc: 0.759, val_loss: 0.548, val_acc: 0.759
Epoch 13, loss: 0.546, acc: 0.759, val_loss: 0.544, val_acc: 0.759
Epoch 14, loss: 0.539, acc: 0.759, val_loss: 0.530, val_acc: 0.759
Epoch 15, loss: 0.514, acc: 0.759, val_loss: 0.493, val_acc: 0.759
Epoch 16, loss: 0.477, acc: 0.798, val_loss: 0.446, val_acc: 0.818
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.8180561953017043 

2778 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.5734684477199448 

Threshold adjusted fairness score :  0.7378027141094208
Maximum Difference: 0.2621973
Minimum Difference: 0.004149258
Average (Mean) Difference: 0.11986602 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 4) 0.1
(4, 4) 0.5
(4, 4) 0.5
(4, 4) 0.5
(4, 4) 0.5
(4, 2) 0.5
deepbayes: Using implicit prior
(100, 4) 0.1
(4, 4) 0.5
(4, 4) 0.5
(4, 4) 0.5
(4, 4) 0.5
(4, 2) 0.5
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.630, acc: 0.757, val_loss: 0.558, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.587, acc: 0.759, val_loss: 0.643, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.576, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.563, acc: 0.759, val_loss: 0.570, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.571, acc: 0.759, val_loss: 0.563, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.556, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.554, acc: 0.759, val_loss: 0.557, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.560, acc: 0.759, val_loss: 0.562, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.561, acc: 0.759, val_loss: 0.558, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.555, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.552, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.555, acc: 0.759, val_loss: 0.556, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.555, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.554, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9885499477386475
Maximum Difference: 0.011450052
Minimum Difference: 0.0
Average (Mean) Difference: 0.00017168233 

>> Writing out to dataframe ...
> Done.
Trial complete!

  0%|          | 0/5 [00:00<?, ?it/s] 20%|██        | 1/5 [05:41<22:47, 341.85s/it]Network : L 1 N 2
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 2) 0.1
(2, 2) 0.7071067811865476
deepbayes: Using implicit prior
(100, 2) 0.1
(2, 2) 0.7071067811865476
Epoch 1, loss: 0.657, acc: 0.726, val_loss: 0.603, val_acc: 0.759
Epoch 2, loss: 0.538, acc: 0.759, val_loss: 0.497, val_acc: 0.759
Epoch 3, loss: 0.489, acc: 0.759, val_loss: 0.475, val_acc: 0.759
Epoch 4, loss: 0.457, acc: 0.759, val_loss: 0.445, val_acc: 0.759
Epoch 5, loss: 0.445, acc: 0.759, val_loss: 0.436, val_acc: 0.759
Epoch 6, loss: 0.438, acc: 0.759, val_loss: 0.428, val_acc: 0.759
Epoch 7, loss: 0.432, acc: 0.759, val_loss: 0.421, val_acc: 0.759
Epoch 8, loss: 0.426, acc: 0.759, val_loss: 0.416, val_acc: 0.759
Epoch 9, loss: 0.424, acc: 0.759, val_loss: 0.416, val_acc: 0.759
Epoch 10, loss: 0.426, acc: 0.757, val_loss: 0.417, val_acc: 0.759
Epoch 11, loss: 0.426, acc: 0.711, val_loss: 0.416, val_acc: 0.713
Epoch 12, loss: 0.425, acc: 0.713, val_loss: 0.415, val_acc: 0.715
Epoch 13, loss: 0.423, acc: 0.746, val_loss: 0.413, val_acc: 0.759
Epoch 14, loss: 0.420, acc: 0.759, val_loss: 0.411, val_acc: 0.759
Epoch 15, loss: 0.418, acc: 0.759, val_loss: 0.410, val_acc: 0.759
Epoch 16, loss: 0.418, acc: 0.759, val_loss: 0.410, val_acc: 0.759
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.6160964965820312
Maximum Difference: 0.3839035
Minimum Difference: 0.0
Average (Mean) Difference: 0.082030445 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 2) 0.1
(2, 2) 0.7071067811865476
deepbayes: Using implicit prior
(100, 2) 0.1
(2, 2) 0.7071067811865476
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.675, acc: 0.745, val_loss: 0.630, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.606, acc: 0.759, val_loss: 0.563, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.558, acc: 0.759, val_loss: 0.565, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.566, acc: 0.759, val_loss: 0.601, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.585, acc: 0.759, val_loss: 0.603, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.589, acc: 0.759, val_loss: 0.588, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.580, acc: 0.759, val_loss: 0.573, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.564, acc: 0.759, val_loss: 0.557, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.554, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.554, acc: 0.759, val_loss: 0.557, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.560, acc: 0.759, val_loss: 0.562, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.563, acc: 0.759, val_loss: 0.562, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.559, acc: 0.759, val_loss: 0.556, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.554, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.554, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9898707866668701
Maximum Difference: 0.010129213
Minimum Difference: 0.0
Average (Mean) Difference: 0.00012504056 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 2 N 2
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 2) 0.1
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
deepbayes: Using implicit prior
(100, 2) 0.1
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
Epoch 1, loss: 0.650, acc: 0.724, val_loss: 0.577, val_acc: 0.759
Epoch 2, loss: 0.546, acc: 0.759, val_loss: 0.564, val_acc: 0.759
Epoch 3, loss: 0.537, acc: 0.759, val_loss: 0.488, val_acc: 0.759
Epoch 4, loss: 0.482, acc: 0.759, val_loss: 0.487, val_acc: 0.759
Epoch 5, loss: 0.485, acc: 0.759, val_loss: 0.473, val_acc: 0.759
Epoch 6, loss: 0.460, acc: 0.759, val_loss: 0.444, val_acc: 0.759
Epoch 7, loss: 0.443, acc: 0.759, val_loss: 0.437, val_acc: 0.759
Epoch 8, loss: 0.442, acc: 0.759, val_loss: 0.432, val_acc: 0.759
Epoch 9, loss: 0.435, acc: 0.759, val_loss: 0.422, val_acc: 0.759
Epoch 10, loss: 0.429, acc: 0.759, val_loss: 0.422, val_acc: 0.759
Epoch 11, loss: 0.434, acc: 0.751, val_loss: 0.428, val_acc: 0.701
Epoch 12, loss: 0.435, acc: 0.702, val_loss: 0.424, val_acc: 0.706
Epoch 13, loss: 0.429, acc: 0.742, val_loss: 0.418, val_acc: 0.759
Epoch 14, loss: 0.427, acc: 0.759, val_loss: 0.418, val_acc: 0.759
Epoch 15, loss: 0.427, acc: 0.759, val_loss: 0.416, val_acc: 0.759
Epoch 16, loss: 0.423, acc: 0.759, val_loss: 0.414, val_acc: 0.759
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.6237040758132935
Maximum Difference: 0.37629592
Minimum Difference: 0.0
Average (Mean) Difference: 0.074711114 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 2) 0.1
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
deepbayes: Using implicit prior
(100, 2) 0.1
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.691, acc: 0.450, val_loss: 0.658, val_acc: 0.713, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.612, acc: 0.754, val_loss: 0.570, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.557, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.564, acc: 0.759, val_loss: 0.576, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.588, acc: 0.759, val_loss: 0.597, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.599, acc: 0.759, val_loss: 0.597, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.589, acc: 0.759, val_loss: 0.580, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.570, acc: 0.759, val_loss: 0.560, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.555, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.554, acc: 0.759, val_loss: 0.557, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.562, acc: 0.759, val_loss: 0.565, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.566, acc: 0.759, val_loss: 0.565, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.562, acc: 0.759, val_loss: 0.558, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.555, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.554, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy:  40%|████      | 2/5 [12:31<19:04, 381.65s/it] 60%|██████    | 3/5 [20:28<14:10, 425.47s/it]0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  1.0
Maximum Difference: 0.0
Minimum Difference: 0.0
Average (Mean) Difference: 0.0 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 3 N 2
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 2) 0.1
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
deepbayes: Using implicit prior
(100, 2) 0.1
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
Epoch 1, loss: 0.681, acc: 0.630, val_loss: 0.645, val_acc: 0.759
Epoch 2, loss: 0.606, acc: 0.759, val_loss: 0.572, val_acc: 0.759
Epoch 3, loss: 0.558, acc: 0.759, val_loss: 0.553, val_acc: 0.759
Epoch 4, loss: 0.562, acc: 0.759, val_loss: 0.574, val_acc: 0.759
Epoch 5, loss: 0.586, acc: 0.759, val_loss: 0.594, val_acc: 0.759
Epoch 6, loss: 0.596, acc: 0.759, val_loss: 0.595, val_acc: 0.759
Epoch 7, loss: 0.588, acc: 0.759, val_loss: 0.579, val_acc: 0.759
Epoch 8, loss: 0.569, acc: 0.759, val_loss: 0.560, val_acc: 0.759
Epoch 9, loss: 0.555, acc: 0.759, val_loss: 0.552, val_acc: 0.759
Epoch 10, loss: 0.554, acc: 0.759, val_loss: 0.557, val_acc: 0.759
Epoch 11, loss: 0.561, acc: 0.759, val_loss: 0.564, val_acc: 0.759
Epoch 12, loss: 0.565, acc: 0.759, val_loss: 0.564, val_acc: 0.759
Epoch 13, loss: 0.561, acc: 0.759, val_loss: 0.558, val_acc: 0.759
Epoch 14, loss: 0.555, acc: 0.759, val_loss: 0.552, val_acc: 0.759
Epoch 15, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759
Epoch 16, loss: 0.554, acc: 0.759, val_loss: 0.554, val_acc: 0.759
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9958605170249939
Maximum Difference: 0.004139483
Minimum Difference: 0.0
Average (Mean) Difference: 0.00019894024 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 2) 0.1
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
deepbayes: Using implicit prior
(100, 2) 0.1
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.676, acc: 0.715, val_loss: 0.645, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.607, acc: 0.759, val_loss: 0.573, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.558, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.562, acc: 0.759, val_loss: 0.573, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.584, acc: 0.759, val_loss: 0.593, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.596, acc: 0.759, val_loss: 0.595, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.588, acc: 0.759, val_loss: 0.579, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.570, acc: 0.759, val_loss: 0.561, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.555, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.554, acc: 0.759, val_loss: 0.557, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.561, acc: 0.759, val_loss: 0.564, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.565, acc: 0.759, val_loss: 0.564, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.562, acc: 0.759, val_loss: 0.558, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.555, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.554, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  1.0
Maximum Difference: 0.0
Minimum Difference: 0.0
Average (Mean) Difference: 0.0 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 4 N 2
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 2) 0.1
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
deepbayes: Using implicit prior
(100, 2) 0.1
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
Epoch 1, loss: 0.662, acc: 0.717, val_loss: 0.607, val_acc: 0.759
Epoch 2, loss: 0.568, acc: 0.759, val_loss: 0.554, val_acc: 0.759
Epoch 3, loss: 0.578, acc: 0.759, val_loss: 0.602, val_acc: 0.759
Epoch 4, loss: 0.610, acc: 0.759, val_loss: 0.606, val_acc: 0.759
Epoch 5, loss: 0.587, acc: 0.759, val_loss: 0.566, val_acc: 0.759
Epoch 6, loss: 0.555, acc: 0.759, val_loss: 0.553, val_acc: 0.759
Epoch 7, loss: 0.561, acc: 0.759, val_loss: 0.569, val_acc: 0.759
Epoch 8, loss: 0.574, acc: 0.759, val_loss: 0.573, val_acc: 0.759
Epoch 9, loss: 0.567, acc: 0.759, val_loss: 0.560, val_acc: 0.759
Epoch 10, loss: 0.556, acc: 0.759, val_loss: 0.552, val_acc: 0.759
Epoch 11, loss: 0.553, acc: 0.759, val_loss: 0.555, val_acc: 0.759
Epoch 12, loss: 0.558, acc: 0.759, val_loss: 0.559, val_acc: 0.759
Epoch 13, loss: 0.560, acc: 0.759, val_loss: 0.559, val_acc: 0.759
Epoch 14, loss: 0.557, acc: 0.759, val_loss: 0.554, val_acc: 0.759
Epoch 15, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759
Epoch 16, loss: 0.552, acc: 0.759, val_loss: 0.553, val_acc: 0.759
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  1.0
Maximum Difference: 0.0
Minimum Difference: 0.0
Average (Mean) Difference: 0.0 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 2) 0.1
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
deepbayes: Using implicit prior
(100, 2) 0.1
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.676, acc: 0.710, val_loss: 0.644, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.606, acc: 0.759, val_loss: 0.572, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.558, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.561, acc: 0.759, val_loss: 0.573, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.584, acc: 0.759, val_loss: 0.594, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.596, acc: 0.759, val_loss: 0.595, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.588, acc: 0.759, val_loss: 0.579, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.569, acc: 0.759, val_loss: 0.560, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.555, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.553, acc: 0.759, val_loss: 0.556, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
 80%|████████  | 4/5 [29:38<07:54, 474.55s/it]100%|██████████| 5/5 [39:49<00:00, 523.56s/it]100%|██████████| 5/5 [39:49<00:00, 477.85s/it]
Epoch 11, loss: 0.561, acc: 0.759, val_loss: 0.564, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.565, acc: 0.759, val_loss: 0.564, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.562, acc: 0.759, val_loss: 0.558, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.555, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.554, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9935231804847717
Maximum Difference: 0.0064768195
Minimum Difference: 0.0
Average (Mean) Difference: 0.00023903039 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 5 N 2
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 2) 0.1
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
deepbayes: Using implicit prior
(100, 2) 0.1
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
Epoch 1, loss: 0.679, acc: 0.654, val_loss: 0.641, val_acc: 0.759
Epoch 2, loss: 0.601, acc: 0.759, val_loss: 0.567, val_acc: 0.759
Epoch 3, loss: 0.556, acc: 0.759, val_loss: 0.555, val_acc: 0.759
Epoch 4, loss: 0.568, acc: 0.759, val_loss: 0.581, val_acc: 0.759
Epoch 5, loss: 0.592, acc: 0.759, val_loss: 0.598, val_acc: 0.759
Epoch 6, loss: 0.595, acc: 0.759, val_loss: 0.589, val_acc: 0.759
Epoch 7, loss: 0.579, acc: 0.759, val_loss: 0.568, val_acc: 0.759
Epoch 8, loss: 0.560, acc: 0.759, val_loss: 0.554, val_acc: 0.759
Epoch 9, loss: 0.553, acc: 0.759, val_loss: 0.554, val_acc: 0.759
Epoch 10, loss: 0.557, acc: 0.759, val_loss: 0.561, val_acc: 0.759
Epoch 11, loss: 0.563, acc: 0.759, val_loss: 0.564, val_acc: 0.759
Epoch 12, loss: 0.563, acc: 0.759, val_loss: 0.560, val_acc: 0.759
Epoch 13, loss: 0.557, acc: 0.759, val_loss: 0.554, val_acc: 0.759
Epoch 14, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759
Epoch 15, loss: 0.553, acc: 0.759, val_loss: 0.554, val_acc: 0.759
Epoch 16, loss: 0.555, acc: 0.759, val_loss: 0.555, val_acc: 0.759
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  1.0
Maximum Difference: 0.0
Minimum Difference: 0.0
Average (Mean) Difference: 0.0 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 2) 0.1
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
deepbayes: Using implicit prior
(100, 2) 0.1
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.676, acc: 0.710, val_loss: 0.645, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.607, acc: 0.759, val_loss: 0.573, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.558, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.561, acc: 0.759, val_loss: 0.573, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.584, acc: 0.759, val_loss: 0.594, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.596, acc: 0.759, val_loss: 0.595, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.588, acc: 0.759, val_loss: 0.579, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.569, acc: 0.759, val_loss: 0.560, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.555, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.554, acc: 0.759, val_loss: 0.557, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.561, acc: 0.759, val_loss: 0.564, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.565, acc: 0.759, val_loss: 0.564, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.562, acc: 0.759, val_loss: 0.558, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.555, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.554, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  1.0
Maximum Difference: 0.0
Minimum Difference: 0.0
Average (Mean) Difference: 0.0 

>> Writing out to dataframe ...
> Done.
Trial complete!

>> Models tested. Writing out to file ...
Epsilon= 0.1  testing complete.
> Testing epsilon= 0.15
  0%|          | 0/5 [00:00<?, ?it/s] 20%|██        | 1/5 [05:52<23:30, 352.59s/it]Network : L 1 N 64
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 64) 0.1
(64, 2) 0.125
deepbayes: Using implicit prior
(100, 64) 0.1
(64, 2) 0.125
Epoch 1, loss: 0.610, acc: 0.689, val_loss: 0.557, val_acc: 0.759
Epoch 2, loss: 0.467, acc: 0.756, val_loss: 0.449, val_acc: 0.735
Epoch 3, loss: 0.432, acc: 0.770, val_loss: 0.431, val_acc: 0.774
Epoch 4, loss: 0.412, acc: 0.788, val_loss: 0.399, val_acc: 0.789
Epoch 5, loss: 0.398, acc: 0.809, val_loss: 0.401, val_acc: 0.807
Epoch 6, loss: 0.387, acc: 0.815, val_loss: 0.390, val_acc: 0.814
Epoch 7, loss: 0.383, acc: 0.823, val_loss: 0.387, val_acc: 0.818
Epoch 8, loss: 0.376, acc: 0.823, val_loss: 0.369, val_acc: 0.825
Epoch 9, loss: 0.372, acc: 0.827, val_loss: 0.363, val_acc: 0.830
Epoch 10, loss: 0.367, acc: 0.828, val_loss: 0.355, val_acc: 0.830
Epoch 11, loss: 0.365, acc: 0.830, val_loss: 0.353, val_acc: 0.831
Epoch 12, loss: 0.361, acc: 0.830, val_loss: 0.350, val_acc: 0.831
Epoch 13, loss: 0.358, acc: 0.832, val_loss: 0.348, val_acc: 0.831
Epoch 14, loss: 0.355, acc: 0.835, val_loss: 0.347, val_acc: 0.834
Epoch 15, loss: 0.352, acc: 0.836, val_loss: 0.345, val_acc: 0.833
Epoch 16, loss: 0.350, acc: 0.835, val_loss: 0.343, val_acc: 0.834
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.8344848764010441 

3985 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.3881467833563642 

Threshold adjusted fairness score :  0.20046722888946533
Maximum Difference: 0.7995328
Minimum Difference: 0.025902748
Average (Mean) Difference: 0.43215716 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 64) 0.1
(64, 2) 0.125
deepbayes: Using implicit prior
(100, 64) 0.1
(64, 2) 0.125
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.713, acc: 0.730, val_loss: 1.026, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.603, acc: 0.759, val_loss: 0.573, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.582, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.563, acc: 0.759, val_loss: 0.592, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.577, acc: 0.759, val_loss: 0.580, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.570, acc: 0.759, val_loss: 0.563, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.565, acc: 0.759, val_loss: 0.566, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.557, acc: 0.759, val_loss: 0.550, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.557, acc: 0.759, val_loss: 0.558, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.559, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.553, acc: 0.759, val_loss: 0.556, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.558, acc: 0.759, val_loss: 0.557, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.554, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.554, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.555, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9514864087104797
Maximum Difference: 0.04851359
Minimum Difference: 0.0
Average (Mean) Difference: 0.0057583256 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 2 N 64
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 64) 0.1
(64, 64) 0.125
(64, 2) 0.125
deepbayes: Using implicit prior
(100, 64) 0.1
(64, 64) 0.125
(64, 2) 0.125
Epoch 1, loss: 0.599, acc: 0.693, val_loss: 0.562, val_acc: 0.759
Epoch 2, loss: 0.480, acc: 0.767, val_loss: 0.446, val_acc: 0.766
Epoch 3, loss: 0.425, acc: 0.786, val_loss: 0.400, val_acc: 0.812
Epoch 4, loss: 0.414, acc: 0.794, val_loss: 0.406, val_acc: 0.820
Epoch 5, loss: 0.397, acc: 0.809, val_loss: 0.385, val_acc: 0.816
Epoch 6, loss: 0.389, acc: 0.811, val_loss: 0.367, val_acc: 0.829
Epoch 7, loss: 0.375, acc: 0.822, val_loss: 0.372, val_acc: 0.829
Epoch 8, loss: 0.370, acc: 0.826, val_loss: 0.363, val_acc: 0.827
Epoch 9, loss: 0.368, acc: 0.830, val_loss: 0.360, val_acc: 0.828
Epoch 10, loss: 0.361, acc: 0.831, val_loss: 0.350, val_acc: 0.832
Epoch 11, loss: 0.358, acc: 0.832, val_loss: 0.347, val_acc: 0.832
Epoch 12, loss: 0.355, acc: 0.833, val_loss: 0.350, val_acc: 0.829
Epoch 13, loss: 0.353, acc: 0.834, val_loss: 0.344, val_acc: 0.835
Epoch 14, loss: 0.350, acc: 0.836, val_loss: 0.341, val_acc: 0.835
Epoch 15, loss: 0.348, acc: 0.837, val_loss: 0.339, val_acc: 0.835
Epoch 16, loss: 0.346, acc: 0.838, val_loss: 0.340, val_acc: 0.836
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.836480884385076 

4906 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.2467372946414863 

Threshold adjusted fairness score :  0.16103464365005493
Maximum Difference: 0.83896536
Minimum Difference: 0.01933366
Average (Mean) Difference: 0.5135132 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 64) 0.1
(64, 64) 0.125
(64, 2) 0.125
deepbayes: Using implicit prior
(100, 64) 0.1
(64, 64) 0.125
(64, 2) 0.125
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.633, acc: 0.641, val_loss: 0.788, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.602, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.566, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.563, acc: 0.759, val_loss: 0.581, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.559, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.557, acc: 0.759, val_loss: 0.550, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.556, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.555, acc: 0.759, val_loss: 0.557, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.554, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.554, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.554, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.552, acc: 0.759, val_loss: 0.550, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.553, acc: 0.759, val_loss: 0.550, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.552, acc: 0.759, val_loss: 0.550, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
 40%|████      | 2/5 [12:53<19:37, 392.54s/it] 60%|██████    | 3/5 [21:06<14:37, 438.56s/it]Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9755245447158813
Maximum Difference: 0.024475455
Minimum Difference: 1.4901161e-06
Average (Mean) Difference: 0.005325 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 3 N 64
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 64) 0.1
(64, 64) 0.125
(64, 64) 0.125
(64, 2) 0.125
deepbayes: Using implicit prior
(100, 64) 0.1
(64, 64) 0.125
(64, 64) 0.125
(64, 2) 0.125
Epoch 1, loss: 0.612, acc: 0.695, val_loss: 0.591, val_acc: 0.759
Epoch 2, loss: 0.539, acc: 0.759, val_loss: 0.527, val_acc: 0.759
Epoch 3, loss: 0.491, acc: 0.759, val_loss: 0.430, val_acc: 0.759
Epoch 4, loss: 0.417, acc: 0.787, val_loss: 0.425, val_acc: 0.810
Epoch 5, loss: 0.413, acc: 0.815, val_loss: 0.375, val_acc: 0.827
Epoch 6, loss: 0.401, acc: 0.814, val_loss: 0.387, val_acc: 0.830
Epoch 7, loss: 0.383, acc: 0.822, val_loss: 0.370, val_acc: 0.828
Epoch 8, loss: 0.377, acc: 0.827, val_loss: 0.361, val_acc: 0.828
Epoch 9, loss: 0.368, acc: 0.827, val_loss: 0.368, val_acc: 0.822
Epoch 10, loss: 0.366, acc: 0.827, val_loss: 0.357, val_acc: 0.828
Epoch 11, loss: 0.361, acc: 0.833, val_loss: 0.354, val_acc: 0.833
Epoch 12, loss: 0.356, acc: 0.834, val_loss: 0.348, val_acc: 0.833
Epoch 13, loss: 0.355, acc: 0.835, val_loss: 0.348, val_acc: 0.835
Epoch 14, loss: 0.351, acc: 0.837, val_loss: 0.343, val_acc: 0.837
Epoch 15, loss: 0.349, acc: 0.836, val_loss: 0.339, val_acc: 0.837
Epoch 16, loss: 0.347, acc: 0.836, val_loss: 0.338, val_acc: 0.837
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.8374021188392445 

4862 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.2534930139720559 

Threshold adjusted fairness score :  0.1810489296913147
Maximum Difference: 0.8189511
Minimum Difference: 0.018440723
Average (Mean) Difference: 0.511968 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 64) 0.1
(64, 64) 0.125
(64, 64) 0.125
(64, 2) 0.125
deepbayes: Using implicit prior
(100, 64) 0.1
(64, 64) 0.125
(64, 64) 0.125
(64, 2) 0.125
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.611, acc: 0.754, val_loss: 0.682, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.588, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.559, acc: 0.759, val_loss: 0.556, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.555, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.558, acc: 0.759, val_loss: 0.560, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.555, acc: 0.759, val_loss: 0.549, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.555, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.554, acc: 0.759, val_loss: 0.550, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.555, acc: 0.759, val_loss: 0.556, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.554, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.553, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.554, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9920510649681091
Maximum Difference: 0.007948935
Minimum Difference: 0.0
Average (Mean) Difference: 0.0014591662 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 4 N 64
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 64) 0.1
(64, 64) 0.125
(64, 64) 0.125
(64, 64) 0.125
(64, 2) 0.125
deepbayes: Using implicit prior
(100, 64) 0.1
(64, 64) 0.125
(64, 64) 0.125
(64, 64) 0.125
(64, 2) 0.125
Epoch 1, loss: 0.590, acc: 0.757, val_loss: 0.582, val_acc: 0.759
Epoch 2, loss: 0.537, acc: 0.759, val_loss: 0.513, val_acc: 0.759
Epoch 3, loss: 0.483, acc: 0.759, val_loss: 0.430, val_acc: 0.759
Epoch 4, loss: 0.431, acc: 0.766, val_loss: 0.442, val_acc: 0.719
Epoch 5, loss: 0.426, acc: 0.757, val_loss: 0.410, val_acc: 0.760
Epoch 6, loss: 0.416, acc: 0.762, val_loss: 0.415, val_acc: 0.789
Epoch 7, loss: 0.397, acc: 0.819, val_loss: 0.385, val_acc: 0.822
Epoch 8, loss: 0.389, acc: 0.813, val_loss: 0.370, val_acc: 0.825
Epoch 9, loss: 0.372, acc: 0.828, val_loss: 0.374, val_acc: 0.826
Epoch 10, loss: 0.372, acc: 0.828, val_loss: 0.360, val_acc: 0.827
Epoch 11, loss: 0.367, acc: 0.830, val_loss: 0.357, val_acc: 0.829
Epoch 12, loss: 0.359, acc: 0.833, val_loss: 0.355, val_acc: 0.835
Epoch 13, loss: 0.356, acc: 0.835, val_loss: 0.346, val_acc: 0.838
Epoch 14, loss: 0.354, acc: 0.835, val_loss: 0.345, val_acc: 0.838
Epoch 15, loss: 0.350, acc: 0.836, val_loss: 0.344, val_acc: 0.837
Epoch 16, loss: 0.348, acc: 0.838, val_loss: 0.338, val_acc: 0.841
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.8412405957316137 

4616 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.2912636265929679 

Threshold adjusted fairness score :  0.16584628820419312
Maximum Difference: 0.8341537
Minimum Difference: 0.028868675
Average (Mean) Difference: 0.5057066 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 64) 0.1
(64, 64) 0.125
(64, 64) 0.125
(64, 64) 0.125
(64, 2) 0.125
deepbayes: Using implicit prior
(100, 64) 0.1
(64, 64) 0.125
(64, 64) 0.125
(64, 64) 0.125
(64, 2) 0.125
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.609, acc: 0.737, val_loss: 0.656, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.589, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.561, acc: 0.759, val_loss: 0.556, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.555, acc: 0.759, val_loss: 0.558, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.559, acc: 0.759, val_loss: 0.557, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.553, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.557, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.553, acc: 0.759, val_loss: 0.556, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.555, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.554, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.553, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
 80%|████████  | 4/5 [30:29<08:07, 487.64s/it]100%|██████████| 5/5 [41:02<00:00, 540.16s/it]100%|██████████| 5/5 [41:02<00:00, 492.52s/it]
Epoch 14, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.553, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.553, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9872283935546875
Maximum Difference: 0.012771606
Minimum Difference: 1.5258789e-05
Average (Mean) Difference: 0.0046172766 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 5 N 64
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 64) 0.1
(64, 64) 0.125
(64, 64) 0.125
(64, 64) 0.125
(64, 64) 0.125
(64, 2) 0.125
deepbayes: Using implicit prior
(100, 64) 0.1
(64, 64) 0.125
(64, 64) 0.125
(64, 64) 0.125
(64, 64) 0.125
(64, 2) 0.125
Epoch 1, loss: 0.610, acc: 0.689, val_loss: 0.573, val_acc: 0.759
Epoch 2, loss: 0.559, acc: 0.759, val_loss: 0.539, val_acc: 0.759
Epoch 3, loss: 0.528, acc: 0.759, val_loss: 0.492, val_acc: 0.759
Epoch 4, loss: 0.453, acc: 0.760, val_loss: 0.459, val_acc: 0.734
Epoch 5, loss: 0.435, acc: 0.791, val_loss: 0.419, val_acc: 0.772
Epoch 6, loss: 0.421, acc: 0.781, val_loss: 0.409, val_acc: 0.780
Epoch 7, loss: 0.391, acc: 0.808, val_loss: 0.384, val_acc: 0.831
Epoch 8, loss: 0.391, acc: 0.820, val_loss: 0.375, val_acc: 0.825
Epoch 9, loss: 0.381, acc: 0.814, val_loss: 0.359, val_acc: 0.831
Epoch 10, loss: 0.368, acc: 0.829, val_loss: 0.372, val_acc: 0.829
Epoch 11, loss: 0.368, acc: 0.829, val_loss: 0.355, val_acc: 0.829
Epoch 12, loss: 0.362, acc: 0.833, val_loss: 0.354, val_acc: 0.829
Epoch 13, loss: 0.362, acc: 0.831, val_loss: 0.353, val_acc: 0.832
Epoch 14, loss: 0.356, acc: 0.833, val_loss: 0.346, val_acc: 0.835
Epoch 15, loss: 0.353, acc: 0.835, val_loss: 0.347, val_acc: 0.837
Epoch 16, loss: 0.353, acc: 0.837, val_loss: 0.342, val_acc: 0.836
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.836480884385076 

4190 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.3566712728389375 

Threshold adjusted fairness score :  0.168279230594635
Maximum Difference: 0.83172077
Minimum Difference: 0.019382656
Average (Mean) Difference: 0.44586843 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 64) 0.1
(64, 64) 0.125
(64, 64) 0.125
(64, 64) 0.125
(64, 64) 0.125
(64, 2) 0.125
deepbayes: Using implicit prior
(100, 64) 0.1
(64, 64) 0.125
(64, 64) 0.125
(64, 64) 0.125
(64, 64) 0.125
(64, 2) 0.125
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.602, acc: 0.753, val_loss: 0.622, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.591, acc: 0.759, val_loss: 0.556, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.558, acc: 0.759, val_loss: 0.564, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.557, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.557, acc: 0.759, val_loss: 0.561, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.556, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.555, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.555, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.554, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.552, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9960545897483826
Maximum Difference: 0.0039454103
Minimum Difference: 1.9669533e-06
Average (Mean) Difference: 0.0012258937 

>> Writing out to dataframe ...
> Done.
Trial complete!

  0%|          | 0/5 [00:00<?, ?it/s] 20%|██        | 1/5 [05:47<23:08, 347.24s/it]Network : L 1 N 32
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 32) 0.1
(32, 2) 0.1767766952966369
deepbayes: Using implicit prior
(100, 32) 0.1
(32, 2) 0.1767766952966369
Epoch 1, loss: 0.519, acc: 0.759, val_loss: 0.460, val_acc: 0.759
Epoch 2, loss: 0.424, acc: 0.792, val_loss: 0.400, val_acc: 0.800
Epoch 3, loss: 0.407, acc: 0.815, val_loss: 0.397, val_acc: 0.819
Epoch 4, loss: 0.395, acc: 0.809, val_loss: 0.376, val_acc: 0.822
Epoch 5, loss: 0.383, acc: 0.824, val_loss: 0.372, val_acc: 0.825
Epoch 6, loss: 0.379, acc: 0.822, val_loss: 0.367, val_acc: 0.830
Epoch 7, loss: 0.372, acc: 0.828, val_loss: 0.360, val_acc: 0.831
Epoch 8, loss: 0.366, acc: 0.828, val_loss: 0.358, val_acc: 0.827
Epoch 9, loss: 0.365, acc: 0.832, val_loss: 0.355, val_acc: 0.826
Epoch 10, loss: 0.362, acc: 0.831, val_loss: 0.352, val_acc: 0.829
Epoch 11, loss: 0.358, acc: 0.832, val_loss: 0.351, val_acc: 0.829
Epoch 12, loss: 0.356, acc: 0.835, val_loss: 0.349, val_acc: 0.833
Epoch 13, loss: 0.353, acc: 0.835, val_loss: 0.345, val_acc: 0.834
Epoch 14, loss: 0.350, acc: 0.836, val_loss: 0.344, val_acc: 0.836
Epoch 15, loss: 0.349, acc: 0.838, val_loss: 0.340, val_acc: 0.837
Epoch 16, loss: 0.347, acc: 0.838, val_loss: 0.340, val_acc: 0.837
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.8374021188392445 

4676 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.28205128205128205 

Threshold adjusted fairness score :  0.16889673471450806
Maximum Difference: 0.83110327
Minimum Difference: 0.016094327
Average (Mean) Difference: 0.49459052 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 32) 0.1
(32, 2) 0.1767766952966369
deepbayes: Using implicit prior
(100, 32) 0.1
(32, 2) 0.1767766952966369
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.652, acc: 0.702, val_loss: 0.842, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.620, acc: 0.759, val_loss: 0.572, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.597, acc: 0.759, val_loss: 0.558, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.559, acc: 0.759, val_loss: 0.625, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.579, acc: 0.759, val_loss: 0.623, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.565, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.560, acc: 0.759, val_loss: 0.540, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.559, acc: 0.759, val_loss: 0.549, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.553, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.553, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.552, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9136431217193604
Maximum Difference: 0.08635688
Minimum Difference: 0.0
Average (Mean) Difference: 0.00051718194 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 2 N 32
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 32) 0.1
(32, 32) 0.1767766952966369
(32, 2) 0.1767766952966369
deepbayes: Using implicit prior
(100, 32) 0.1
(32, 32) 0.1767766952966369
(32, 2) 0.1767766952966369
Epoch 1, loss: 0.554, acc: 0.755, val_loss: 0.511, val_acc: 0.759
Epoch 2, loss: 0.448, acc: 0.772, val_loss: 0.412, val_acc: 0.786
Epoch 3, loss: 0.417, acc: 0.812, val_loss: 0.401, val_acc: 0.822
Epoch 4, loss: 0.404, acc: 0.800, val_loss: 0.382, val_acc: 0.825
Epoch 5, loss: 0.394, acc: 0.810, val_loss: 0.386, val_acc: 0.818
Epoch 6, loss: 0.388, acc: 0.823, val_loss: 0.385, val_acc: 0.825
Epoch 7, loss: 0.377, acc: 0.822, val_loss: 0.363, val_acc: 0.827
Epoch 8, loss: 0.371, acc: 0.828, val_loss: 0.358, val_acc: 0.828
Epoch 9, loss: 0.367, acc: 0.828, val_loss: 0.361, val_acc: 0.827
Epoch 10, loss: 0.365, acc: 0.828, val_loss: 0.358, val_acc: 0.827
Epoch 11, loss: 0.363, acc: 0.830, val_loss: 0.360, val_acc: 0.827
Epoch 12, loss: 0.359, acc: 0.832, val_loss: 0.353, val_acc: 0.830
Epoch 13, loss: 0.357, acc: 0.833, val_loss: 0.351, val_acc: 0.831
Epoch 14, loss: 0.354, acc: 0.835, val_loss: 0.346, val_acc: 0.836
Epoch 15, loss: 0.352, acc: 0.835, val_loss: 0.344, val_acc: 0.835
Epoch 16, loss: 0.350, acc: 0.835, val_loss: 0.342, val_acc: 0.837
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.8366344234607708 

4464 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.31460156609857204 

Threshold adjusted fairness score :  0.20281028747558594
Maximum Difference: 0.7971897
Minimum Difference: 0.011077821
Average (Mean) Difference: 0.46050727 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 32) 0.1
(32, 32) 0.1767766952966369
(32, 2) 0.1767766952966369
deepbayes: Using implicit prior
(100, 32) 0.1
(32, 32) 0.1767766952966369
(32, 2) 0.1767766952966369
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.633, acc: 0.671, val_loss: 0.668, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.603, acc: 0.759, val_loss: 0.696, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.558, acc: 0.759, val_loss: 0.550, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.558, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.554, acc: 0.759, val_loss: 0.561, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.557, acc: 0.759, val_loss: 0.561, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.553, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.554, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.554, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.552, acc: 0.759, val_loss: 0.557, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.553, acc: 0.759, val_loss: 0.557, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.553, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.552, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.553, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.552, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.552, acc: 0.759, val_loss: 0.556, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done. 40%|████      | 2/5 [12:42<19:22, 387.40s/it] 60%|██████    | 3/5 [20:46<14:23, 431.57s/it]

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9845121502876282
Maximum Difference: 0.01548785
Minimum Difference: 8.881092e-06
Average (Mean) Difference: 0.0068239146 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 3 N 32
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 32) 0.1
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 2) 0.1767766952966369
deepbayes: Using implicit prior
(100, 32) 0.1
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 2) 0.1767766952966369
Epoch 1, loss: 0.613, acc: 0.669, val_loss: 0.572, val_acc: 0.759
Epoch 2, loss: 0.542, acc: 0.759, val_loss: 0.510, val_acc: 0.759
Epoch 3, loss: 0.488, acc: 0.759, val_loss: 0.442, val_acc: 0.759
Epoch 4, loss: 0.428, acc: 0.774, val_loss: 0.435, val_acc: 0.753
Epoch 5, loss: 0.424, acc: 0.801, val_loss: 0.389, val_acc: 0.815
Epoch 6, loss: 0.404, acc: 0.812, val_loss: 0.401, val_acc: 0.816
Epoch 7, loss: 0.391, acc: 0.821, val_loss: 0.377, val_acc: 0.827
Epoch 8, loss: 0.381, acc: 0.821, val_loss: 0.369, val_acc: 0.825
Epoch 9, loss: 0.374, acc: 0.830, val_loss: 0.368, val_acc: 0.829
Epoch 10, loss: 0.373, acc: 0.829, val_loss: 0.363, val_acc: 0.828
Epoch 11, loss: 0.364, acc: 0.830, val_loss: 0.359, val_acc: 0.830
Epoch 12, loss: 0.365, acc: 0.831, val_loss: 0.356, val_acc: 0.833
Epoch 13, loss: 0.362, acc: 0.832, val_loss: 0.358, val_acc: 0.829
Epoch 14, loss: 0.357, acc: 0.833, val_loss: 0.350, val_acc: 0.831
Epoch 15, loss: 0.356, acc: 0.835, val_loss: 0.347, val_acc: 0.836
Epoch 16, loss: 0.354, acc: 0.834, val_loss: 0.347, val_acc: 0.835
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.8346384154767388 

3906 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.40027637033625063 

Threshold adjusted fairness score :  0.23467248678207397
Maximum Difference: 0.7653275
Minimum Difference: 0.00570482
Average (Mean) Difference: 0.3996519 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 32) 0.1
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 2) 0.1767766952966369
deepbayes: Using implicit prior
(100, 32) 0.1
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 2) 0.1767766952966369
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.646, acc: 0.597, val_loss: 0.589, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.618, acc: 0.759, val_loss: 0.678, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.576, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.558, acc: 0.759, val_loss: 0.563, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.561, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.553, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.558, acc: 0.759, val_loss: 0.559, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.556, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.555, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.554, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.552, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9965780377388
Maximum Difference: 0.0034219623
Minimum Difference: 0.0
Average (Mean) Difference: 0.00020110371 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 4 N 32
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 32) 0.1
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 2) 0.1767766952966369
deepbayes: Using implicit prior
(100, 32) 0.1
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 2) 0.1767766952966369
Epoch 1, loss: 0.608, acc: 0.755, val_loss: 0.566, val_acc: 0.759
Epoch 2, loss: 0.575, acc: 0.759, val_loss: 0.547, val_acc: 0.759
Epoch 3, loss: 0.537, acc: 0.759, val_loss: 0.536, val_acc: 0.759
Epoch 4, loss: 0.522, acc: 0.759, val_loss: 0.498, val_acc: 0.759
Epoch 5, loss: 0.464, acc: 0.759, val_loss: 0.431, val_acc: 0.759
Epoch 6, loss: 0.432, acc: 0.749, val_loss: 0.439, val_acc: 0.713
Epoch 7, loss: 0.436, acc: 0.744, val_loss: 0.416, val_acc: 0.809
Epoch 8, loss: 0.412, acc: 0.775, val_loss: 0.408, val_acc: 0.760
Epoch 9, loss: 0.410, acc: 0.761, val_loss: 0.404, val_acc: 0.768
Epoch 10, loss: 0.395, acc: 0.808, val_loss: 0.379, val_acc: 0.828
Epoch 11, loss: 0.377, acc: 0.818, val_loss: 0.373, val_acc: 0.825
Epoch 12, loss: 0.373, acc: 0.826, val_loss: 0.362, val_acc: 0.828
Epoch 13, loss: 0.370, acc: 0.826, val_loss: 0.362, val_acc: 0.828
Epoch 14, loss: 0.364, acc: 0.831, val_loss: 0.357, val_acc: 0.829
Epoch 15, loss: 0.362, acc: 0.831, val_loss: 0.352, val_acc: 0.833
Epoch 16, loss: 0.359, acc: 0.833, val_loss: 0.348, val_acc: 0.836
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.8355596499309074 

4398 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.3247351450944266 

Threshold adjusted fairness score :  0.18909835815429688
Maximum Difference: 0.81090164
Minimum Difference: 0.022728503
Average (Mean) Difference: 0.4475179 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 32) 0.1
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 2) 0.1767766952966369
deepbayes: Using implicit prior
(100, 32) 0.1
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 2) 0.1767766952966369
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.633, acc: 0.617, val_loss: 0.558, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.600, acc: 0.759, val_loss: 0.632, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.574, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.571, acc: 0.759, val_loss: 0.566, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.557, acc: 0.759, val_loss: 0.557, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.565, acc: 0.759, val_loss: 0.568, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.561, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
 80%|████████  | 4/5 [29:58<07:58, 478.88s/it]100%|██████████| 5/5 [40:12<00:00, 527.61s/it]100%|██████████| 5/5 [40:12<00:00, 482.46s/it]
Epoch 8, loss: 0.554, acc: 0.759, val_loss: 0.557, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.560, acc: 0.759, val_loss: 0.557, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.554, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.554, acc: 0.759, val_loss: 0.556, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.555, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.554, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.554, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9973715543746948
Maximum Difference: 0.0026284456
Minimum Difference: 0.0
Average (Mean) Difference: 0.0005107155 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 5 N 32
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 32) 0.1
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 2) 0.1767766952966369
deepbayes: Using implicit prior
(100, 32) 0.1
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 2) 0.1767766952966369
Epoch 1, loss: 0.632, acc: 0.659, val_loss: 0.555, val_acc: 0.759
Epoch 2, loss: 0.584, acc: 0.759, val_loss: 0.592, val_acc: 0.759
Epoch 3, loss: 0.562, acc: 0.759, val_loss: 0.542, val_acc: 0.759
Epoch 4, loss: 0.543, acc: 0.759, val_loss: 0.518, val_acc: 0.759
Epoch 5, loss: 0.489, acc: 0.760, val_loss: 0.445, val_acc: 0.776
Epoch 6, loss: 0.431, acc: 0.797, val_loss: 0.435, val_acc: 0.804
Epoch 7, loss: 0.415, acc: 0.817, val_loss: 0.415, val_acc: 0.817
Epoch 8, loss: 0.393, acc: 0.822, val_loss: 0.387, val_acc: 0.815
Epoch 9, loss: 0.383, acc: 0.823, val_loss: 0.373, val_acc: 0.829
Epoch 10, loss: 0.375, acc: 0.827, val_loss: 0.360, val_acc: 0.832
Epoch 11, loss: 0.369, acc: 0.828, val_loss: 0.361, val_acc: 0.831
Epoch 12, loss: 0.364, acc: 0.831, val_loss: 0.356, val_acc: 0.833
Epoch 13, loss: 0.360, acc: 0.832, val_loss: 0.352, val_acc: 0.829
Epoch 14, loss: 0.356, acc: 0.833, val_loss: 0.349, val_acc: 0.832
Epoch 15, loss: 0.356, acc: 0.833, val_loss: 0.347, val_acc: 0.833
Epoch 16, loss: 0.355, acc: 0.831, val_loss: 0.344, val_acc: 0.834
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.8344848764010441 

4357 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.33103024719791185 

Threshold adjusted fairness score :  0.2141176462173462
Maximum Difference: 0.78588235
Minimum Difference: 0.0066037774
Average (Mean) Difference: 0.4632845 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 32) 0.1
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 2) 0.1767766952966369
deepbayes: Using implicit prior
(100, 32) 0.1
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 32) 0.1767766952966369
(32, 2) 0.1767766952966369
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.637, acc: 0.637, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.592, acc: 0.759, val_loss: 0.632, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.599, acc: 0.759, val_loss: 0.564, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.555, acc: 0.759, val_loss: 0.561, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.566, acc: 0.759, val_loss: 0.562, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.556, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.556, acc: 0.759, val_loss: 0.560, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.558, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.553, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.556, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.553, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.554, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9992744326591492
Maximum Difference: 0.00072556734
Minimum Difference: 0.0
Average (Mean) Difference: 0.00016441687 

>> Writing out to dataframe ...
> Done.
Trial complete!

  0%|          | 0/5 [00:00<?, ?it/s] 20%|██        | 1/5 [06:16<25:05, 376.49s/it]Network : L 1 N 16
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 16) 0.1
(16, 2) 0.25
deepbayes: Using implicit prior
(100, 16) 0.1
(16, 2) 0.25
Epoch 1, loss: 0.604, acc: 0.700, val_loss: 0.544, val_acc: 0.759
Epoch 2, loss: 0.473, acc: 0.772, val_loss: 0.464, val_acc: 0.783
Epoch 3, loss: 0.427, acc: 0.799, val_loss: 0.405, val_acc: 0.806
Epoch 4, loss: 0.421, acc: 0.803, val_loss: 0.413, val_acc: 0.823
Epoch 5, loss: 0.412, acc: 0.808, val_loss: 0.402, val_acc: 0.793
Epoch 6, loss: 0.394, acc: 0.816, val_loss: 0.384, val_acc: 0.825
Epoch 7, loss: 0.391, acc: 0.820, val_loss: 0.385, val_acc: 0.825
Epoch 8, loss: 0.388, acc: 0.822, val_loss: 0.380, val_acc: 0.819
Epoch 9, loss: 0.380, acc: 0.826, val_loss: 0.377, val_acc: 0.827
Epoch 10, loss: 0.375, acc: 0.827, val_loss: 0.369, val_acc: 0.824
Epoch 11, loss: 0.370, acc: 0.828, val_loss: 0.363, val_acc: 0.829
Epoch 12, loss: 0.367, acc: 0.830, val_loss: 0.362, val_acc: 0.829
Epoch 13, loss: 0.366, acc: 0.828, val_loss: 0.361, val_acc: 0.825
Epoch 14, loss: 0.364, acc: 0.831, val_loss: 0.360, val_acc: 0.828
Epoch 15, loss: 0.361, acc: 0.831, val_loss: 0.356, val_acc: 0.827
Epoch 16, loss: 0.359, acc: 0.831, val_loss: 0.354, val_acc: 0.832
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.831874712114233 

3570 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.45186549976969137 

Threshold adjusted fairness score :  0.2629225254058838
Maximum Difference: 0.7370775
Minimum Difference: 0.009840786
Average (Mean) Difference: 0.35308364 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 16) 0.1
(16, 2) 0.25
deepbayes: Using implicit prior
(100, 16) 0.1
(16, 2) 0.25
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.693, acc: 0.694, val_loss: 0.954, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.628, acc: 0.759, val_loss: 0.593, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.600, acc: 0.759, val_loss: 0.574, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.563, acc: 0.759, val_loss: 0.582, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.562, acc: 0.759, val_loss: 0.640, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.581, acc: 0.759, val_loss: 0.633, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.569, acc: 0.759, val_loss: 0.579, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.555, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.562, acc: 0.759, val_loss: 0.559, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.565, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.555, acc: 0.759, val_loss: 0.548, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.555, acc: 0.759, val_loss: 0.556, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.560, acc: 0.759, val_loss: 0.556, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.556, acc: 0.759, val_loss: 0.549, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.552, acc: 0.759, val_loss: 0.548, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.555, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.8429461717605591
Maximum Difference: 0.15705383
Minimum Difference: 0.0
Average (Mean) Difference: 0.0069568544 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 2 N 16
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 16) 0.1
(16, 16) 0.25
(16, 2) 0.25
deepbayes: Using implicit prior
(100, 16) 0.1
(16, 16) 0.25
(16, 2) 0.25
Epoch 1, loss: 0.582, acc: 0.758, val_loss: 0.512, val_acc: 0.759
Epoch 2, loss: 0.521, acc: 0.759, val_loss: 0.476, val_acc: 0.759
Epoch 3, loss: 0.471, acc: 0.759, val_loss: 0.451, val_acc: 0.759
Epoch 4, loss: 0.434, acc: 0.759, val_loss: 0.422, val_acc: 0.759
Epoch 5, loss: 0.424, acc: 0.768, val_loss: 0.409, val_acc: 0.812
Epoch 6, loss: 0.413, acc: 0.811, val_loss: 0.400, val_acc: 0.810
Epoch 7, loss: 0.407, acc: 0.787, val_loss: 0.393, val_acc: 0.798
Epoch 8, loss: 0.394, acc: 0.811, val_loss: 0.379, val_acc: 0.824
Epoch 9, loss: 0.386, acc: 0.823, val_loss: 0.374, val_acc: 0.827
Epoch 10, loss: 0.379, acc: 0.822, val_loss: 0.365, val_acc: 0.828
Epoch 11, loss: 0.372, acc: 0.826, val_loss: 0.361, val_acc: 0.829
Epoch 12, loss: 0.366, acc: 0.830, val_loss: 0.357, val_acc: 0.829
Epoch 13, loss: 0.362, acc: 0.831, val_loss: 0.356, val_acc: 0.825
Epoch 14, loss: 0.362, acc: 0.831, val_loss: 0.354, val_acc: 0.828
Epoch 15, loss: 0.357, acc: 0.833, val_loss: 0.351, val_acc: 0.833
Epoch 16, loss: 0.353, acc: 0.836, val_loss: 0.347, val_acc: 0.836
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.8355596499309074 

4797 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.26347305389221554 

Threshold adjusted fairness score :  0.1972143054008484
Maximum Difference: 0.8027857
Minimum Difference: 0.0339213
Average (Mean) Difference: 0.51427346 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 16) 0.1
(16, 16) 0.25
(16, 2) 0.25
deepbayes: Using implicit prior
(100, 16) 0.1
(16, 16) 0.25
(16, 2) 0.25
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.644, acc: 0.658, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.580, acc: 0.759, val_loss: 0.703, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.578, acc: 0.759, val_loss: 0.562, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.555, acc: 0.759, val_loss: 0.547, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.553, acc: 0.759, val_loss: 0.544, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.554, acc: 0.759, val_loss: 0.544, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.553, acc: 0.759, val_loss: 0.543, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.554, acc: 0.759, val_loss: 0.541, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.553, acc: 0.759, val_loss: 0.541, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.553, acc: 0.759, val_loss: 0.541, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.553, acc: 0.759, val_loss: 0.542, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.553, acc: 0.759, val_loss: 0.544, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.553, acc: 0.759, val_loss: 0.546, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.553, acc: 0.759, val_loss: 0.547, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.552, acc: 0.759, val_loss: 0.549, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.552, acc: 0.759, val_loss: 0.550, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
 40%|████      | 2/5 [13:33<20:35, 411.87s/it] 60%|██████    | 3/5 [21:37<14:50, 445.10s/it]Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9604138135910034
Maximum Difference: 0.039586186
Minimum Difference: 0.0
Average (Mean) Difference: 0.009581192 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 3 N 16
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 16) 0.1
(16, 16) 0.25
(16, 16) 0.25
(16, 2) 0.25
deepbayes: Using implicit prior
(100, 16) 0.1
(16, 16) 0.25
(16, 16) 0.25
(16, 2) 0.25
Epoch 1, loss: 0.615, acc: 0.688, val_loss: 0.537, val_acc: 0.759
Epoch 2, loss: 0.548, acc: 0.759, val_loss: 0.538, val_acc: 0.759
Epoch 3, loss: 0.502, acc: 0.759, val_loss: 0.477, val_acc: 0.759
Epoch 4, loss: 0.461, acc: 0.759, val_loss: 0.434, val_acc: 0.759
Epoch 5, loss: 0.431, acc: 0.759, val_loss: 0.414, val_acc: 0.764
Epoch 6, loss: 0.413, acc: 0.798, val_loss: 0.394, val_acc: 0.804
Epoch 7, loss: 0.394, acc: 0.811, val_loss: 0.382, val_acc: 0.821
Epoch 8, loss: 0.387, acc: 0.818, val_loss: 0.376, val_acc: 0.828
Epoch 9, loss: 0.377, acc: 0.824, val_loss: 0.363, val_acc: 0.831
Epoch 10, loss: 0.369, acc: 0.827, val_loss: 0.357, val_acc: 0.828
Epoch 11, loss: 0.366, acc: 0.828, val_loss: 0.354, val_acc: 0.830
Epoch 12, loss: 0.362, acc: 0.828, val_loss: 0.352, val_acc: 0.831
Epoch 13, loss: 0.360, acc: 0.830, val_loss: 0.348, val_acc: 0.834
Epoch 14, loss: 0.356, acc: 0.834, val_loss: 0.347, val_acc: 0.834
Epoch 15, loss: 0.354, acc: 0.836, val_loss: 0.345, val_acc: 0.835
Epoch 16, loss: 0.352, acc: 0.836, val_loss: 0.344, val_acc: 0.837
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.8372485797635498 

4241 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.3488407799785045 

Threshold adjusted fairness score :  0.1521570086479187
Maximum Difference: 0.847843
Minimum Difference: 0.015191674
Average (Mean) Difference: 0.44868094 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 16) 0.1
(16, 16) 0.25
(16, 16) 0.25
(16, 2) 0.25
deepbayes: Using implicit prior
(100, 16) 0.1
(16, 16) 0.25
(16, 16) 0.25
(16, 2) 0.25
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.582, acc: 0.759, val_loss: 0.693, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.572, acc: 0.759, val_loss: 0.549, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.568, acc: 0.759, val_loss: 0.546, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.557, acc: 0.759, val_loss: 0.582, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.561, acc: 0.759, val_loss: 0.561, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.554, acc: 0.759, val_loss: 0.550, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.557, acc: 0.759, val_loss: 0.550, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.555, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.553, acc: 0.759, val_loss: 0.550, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.553, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.554, acc: 0.759, val_loss: 0.550, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.552, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.553, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.552, acc: 0.759, val_loss: 0.550, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.552, acc: 0.759, val_loss: 0.550, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9747439026832581
Maximum Difference: 0.025256097
Minimum Difference: 0.0
Average (Mean) Difference: 0.0059760897 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 4 N 16
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 16) 0.1
(16, 16) 0.25
(16, 16) 0.25
(16, 16) 0.25
(16, 2) 0.25
deepbayes: Using implicit prior
(100, 16) 0.1
(16, 16) 0.25
(16, 16) 0.25
(16, 16) 0.25
(16, 2) 0.25
Epoch 1, loss: 0.659, acc: 0.610, val_loss: 0.584, val_acc: 0.759
Epoch 2, loss: 0.560, acc: 0.759, val_loss: 0.566, val_acc: 0.759
Epoch 3, loss: 0.597, acc: 0.759, val_loss: 0.619, val_acc: 0.759
Epoch 4, loss: 0.614, acc: 0.759, val_loss: 0.593, val_acc: 0.759
Epoch 5, loss: 0.558, acc: 0.759, val_loss: 0.529, val_acc: 0.759
Epoch 6, loss: 0.545, acc: 0.778, val_loss: 0.550, val_acc: 0.806
Epoch 7, loss: 0.514, acc: 0.770, val_loss: 0.508, val_acc: 0.759
Epoch 8, loss: 0.478, acc: 0.775, val_loss: 0.431, val_acc: 0.814
Epoch 9, loss: 0.433, acc: 0.792, val_loss: 0.419, val_acc: 0.816
Epoch 10, loss: 0.416, acc: 0.810, val_loss: 0.413, val_acc: 0.791
Epoch 11, loss: 0.405, acc: 0.809, val_loss: 0.408, val_acc: 0.799
Epoch 12, loss: 0.390, acc: 0.816, val_loss: 0.373, val_acc: 0.823
Epoch 13, loss: 0.383, acc: 0.820, val_loss: 0.369, val_acc: 0.825
Epoch 14, loss: 0.381, acc: 0.825, val_loss: 0.382, val_acc: 0.817
Epoch 15, loss: 0.373, acc: 0.825, val_loss: 0.362, val_acc: 0.827
Epoch 16, loss: 0.369, acc: 0.829, val_loss: 0.362, val_acc: 0.829
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.8288039306003377 

3816 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.4140948871487794 

Threshold adjusted fairness score :  0.31010836362838745
Maximum Difference: 0.68989164
Minimum Difference: 0.0021308064
Average (Mean) Difference: 0.37613198 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 16) 0.1
(16, 16) 0.25
(16, 16) 0.25
(16, 16) 0.25
(16, 2) 0.25
deepbayes: Using implicit prior
(100, 16) 0.1
(16, 16) 0.25
(16, 16) 0.25
(16, 16) 0.25
(16, 2) 0.25
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.633, acc: 0.706, val_loss: 0.558, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.584, acc: 0.759, val_loss: 0.666, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.580, acc: 0.759, val_loss: 0.556, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.553, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.555, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.554, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.554, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
 80%|████████  | 4/5 [30:48<08:06, 486.93s/it]100%|██████████| 5/5 [41:07<00:00, 534.52s/it]100%|██████████| 5/5 [41:07<00:00, 493.55s/it]
Epoch 14, loss: 0.552, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.552, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9972816705703735
Maximum Difference: 0.0027183294
Minimum Difference: 8.970499e-05
Average (Mean) Difference: 0.0018645002 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 5 N 16
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 16) 0.1
(16, 16) 0.25
(16, 16) 0.25
(16, 16) 0.25
(16, 16) 0.25
(16, 2) 0.25
deepbayes: Using implicit prior
(100, 16) 0.1
(16, 16) 0.25
(16, 16) 0.25
(16, 16) 0.25
(16, 16) 0.25
(16, 2) 0.25
Epoch 1, loss: 0.658, acc: 0.578, val_loss: 0.564, val_acc: 0.759
Epoch 2, loss: 0.567, acc: 0.759, val_loss: 0.592, val_acc: 0.759
Epoch 3, loss: 0.604, acc: 0.759, val_loss: 0.593, val_acc: 0.759
Epoch 4, loss: 0.568, acc: 0.759, val_loss: 0.551, val_acc: 0.759
Epoch 5, loss: 0.561, acc: 0.759, val_loss: 0.573, val_acc: 0.759
Epoch 6, loss: 0.566, acc: 0.759, val_loss: 0.553, val_acc: 0.759
Epoch 7, loss: 0.552, acc: 0.759, val_loss: 0.556, val_acc: 0.759
Epoch 8, loss: 0.561, acc: 0.759, val_loss: 0.561, val_acc: 0.759
Epoch 9, loss: 0.555, acc: 0.759, val_loss: 0.548, val_acc: 0.759
Epoch 10, loss: 0.544, acc: 0.759, val_loss: 0.544, val_acc: 0.759
Epoch 11, loss: 0.542, acc: 0.759, val_loss: 0.536, val_acc: 0.759
Epoch 12, loss: 0.525, acc: 0.759, val_loss: 0.511, val_acc: 0.759
Epoch 13, loss: 0.492, acc: 0.759, val_loss: 0.468, val_acc: 0.759
Epoch 14, loss: 0.447, acc: 0.777, val_loss: 0.424, val_acc: 0.807
Epoch 15, loss: 0.425, acc: 0.798, val_loss: 0.421, val_acc: 0.796
Epoch 16, loss: 0.417, acc: 0.810, val_loss: 0.393, val_acc: 0.805
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.8046982957162598 

3629 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.44280669430370034 

Threshold adjusted fairness score :  0.22039806842803955
Maximum Difference: 0.77960193
Minimum Difference: 0.0
Average (Mean) Difference: 0.31671625 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 16) 0.1
(16, 16) 0.25
(16, 16) 0.25
(16, 16) 0.25
(16, 16) 0.25
(16, 2) 0.25
deepbayes: Using implicit prior
(100, 16) 0.1
(16, 16) 0.25
(16, 16) 0.25
(16, 16) 0.25
(16, 16) 0.25
(16, 2) 0.25
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.636, acc: 0.720, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.574, acc: 0.759, val_loss: 0.625, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.597, acc: 0.759, val_loss: 0.571, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.556, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.558, acc: 0.759, val_loss: 0.561, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.560, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.556, acc: 0.759, val_loss: 0.558, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.558, acc: 0.759, val_loss: 0.556, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.554, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.553, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.555, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.552, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.999371349811554
Maximum Difference: 0.0006286502
Minimum Difference: 0.0
Average (Mean) Difference: 0.000109166416 

>> Writing out to dataframe ...
> Done.
Trial complete!

  0%|          | 0/5 [00:00<?, ?it/s] 20%|██        | 1/5 [05:47<23:09, 347.42s/it]Network : L 1 N 8
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 8) 0.1
(8, 2) 0.3535533905932738
deepbayes: Using implicit prior
(100, 8) 0.1
(8, 2) 0.3535533905932738
Epoch 1, loss: 0.555, acc: 0.757, val_loss: 0.517, val_acc: 0.759
Epoch 2, loss: 0.490, acc: 0.759, val_loss: 0.441, val_acc: 0.760
Epoch 3, loss: 0.437, acc: 0.770, val_loss: 0.424, val_acc: 0.776
Epoch 4, loss: 0.415, acc: 0.791, val_loss: 0.407, val_acc: 0.798
Epoch 5, loss: 0.413, acc: 0.810, val_loss: 0.408, val_acc: 0.814
Epoch 6, loss: 0.404, acc: 0.810, val_loss: 0.391, val_acc: 0.810
Epoch 7, loss: 0.393, acc: 0.810, val_loss: 0.384, val_acc: 0.822
Epoch 8, loss: 0.388, acc: 0.822, val_loss: 0.383, val_acc: 0.825
Epoch 9, loss: 0.383, acc: 0.824, val_loss: 0.376, val_acc: 0.827
Epoch 10, loss: 0.375, acc: 0.825, val_loss: 0.367, val_acc: 0.827
Epoch 11, loss: 0.368, acc: 0.827, val_loss: 0.362, val_acc: 0.829
Epoch 12, loss: 0.366, acc: 0.828, val_loss: 0.360, val_acc: 0.828
Epoch 13, loss: 0.365, acc: 0.828, val_loss: 0.358, val_acc: 0.828
Epoch 14, loss: 0.363, acc: 0.830, val_loss: 0.356, val_acc: 0.831
Epoch 15, loss: 0.360, acc: 0.830, val_loss: 0.354, val_acc: 0.832
Epoch 16, loss: 0.358, acc: 0.833, val_loss: 0.352, val_acc: 0.833
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.8331030247197911 

3676 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.4355903577460464 

Threshold adjusted fairness score :  0.21006596088409424
Maximum Difference: 0.78993404
Minimum Difference: 0.0
Average (Mean) Difference: 0.3762634 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 8) 0.1
(8, 2) 0.3535533905932738
deepbayes: Using implicit prior
(100, 8) 0.1
(8, 2) 0.3535533905932738
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.673, acc: 0.693, val_loss: 0.594, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.588, acc: 0.759, val_loss: 0.815, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.580, acc: 0.759, val_loss: 0.580, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.576, acc: 0.759, val_loss: 0.558, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.561, acc: 0.759, val_loss: 0.599, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.572, acc: 0.759, val_loss: 0.577, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.565, acc: 0.759, val_loss: 0.559, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.554, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.554, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.559, acc: 0.759, val_loss: 0.557, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.558, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.553, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.553, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.556, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.555, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.552, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9699956774711609
Maximum Difference: 0.030004323
Minimum Difference: 0.0
Average (Mean) Difference: 0.0039637326 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 2 N 8
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 8) 0.1
(8, 8) 0.3535533905932738
(8, 2) 0.3535533905932738
deepbayes: Using implicit prior
(100, 8) 0.1
(8, 8) 0.3535533905932738
(8, 2) 0.3535533905932738
Epoch 1, loss: 0.585, acc: 0.749, val_loss: 0.547, val_acc: 0.759
Epoch 2, loss: 0.511, acc: 0.759, val_loss: 0.455, val_acc: 0.759
Epoch 3, loss: 0.459, acc: 0.759, val_loss: 0.442, val_acc: 0.759
Epoch 4, loss: 0.431, acc: 0.759, val_loss: 0.422, val_acc: 0.759
Epoch 5, loss: 0.425, acc: 0.759, val_loss: 0.415, val_acc: 0.759
Epoch 6, loss: 0.419, acc: 0.774, val_loss: 0.404, val_acc: 0.813
Epoch 7, loss: 0.403, acc: 0.818, val_loss: 0.393, val_acc: 0.825
Epoch 8, loss: 0.394, acc: 0.821, val_loss: 0.386, val_acc: 0.826
Epoch 9, loss: 0.389, acc: 0.821, val_loss: 0.379, val_acc: 0.826
Epoch 10, loss: 0.381, acc: 0.824, val_loss: 0.370, val_acc: 0.828
Epoch 11, loss: 0.372, acc: 0.827, val_loss: 0.363, val_acc: 0.831
Epoch 12, loss: 0.368, acc: 0.831, val_loss: 0.361, val_acc: 0.831
Epoch 13, loss: 0.364, acc: 0.830, val_loss: 0.356, val_acc: 0.829
Epoch 14, loss: 0.360, acc: 0.832, val_loss: 0.354, val_acc: 0.828
Epoch 15, loss: 0.357, acc: 0.834, val_loss: 0.351, val_acc: 0.830
Epoch 16, loss: 0.353, acc: 0.837, val_loss: 0.348, val_acc: 0.835
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.8350990327038231 

4200 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.3551358820819899 

Threshold adjusted fairness score :  0.14365345239639282
Maximum Difference: 0.85634655
Minimum Difference: 0.006812632
Average (Mean) Difference: 0.45456284 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 8) 0.1
(8, 8) 0.3535533905932738
(8, 2) 0.3535533905932738
deepbayes: Using implicit prior
(100, 8) 0.1
(8, 8) 0.3535533905932738
(8, 2) 0.3535533905932738
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.669, acc: 0.628, val_loss: 0.594, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.565, acc: 0.759, val_loss: 0.567, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.590, acc: 0.759, val_loss: 0.612, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.600, acc: 0.759, val_loss: 0.586, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.570, acc: 0.759, val_loss: 0.558, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.559, acc: 0.759, val_loss: 0.563, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.564, acc: 0.759, val_loss: 0.561, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.557, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.555, acc: 0.759, val_loss: 0.557, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.557, acc: 0.759, val_loss: 0.556, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.554, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.553, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.554, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.
 40%|████      | 2/5 [12:43<19:23, 387.87s/it] 60%|██████    | 3/5 [20:42<14:19, 429.59s/it]
 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  1.0
Maximum Difference: 0.0
Minimum Difference: 0.0
Average (Mean) Difference: 0.0 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 3 N 8
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 8) 0.1
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 2) 0.3535533905932738
deepbayes: Using implicit prior
(100, 8) 0.1
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 2) 0.3535533905932738
Epoch 1, loss: 0.629, acc: 0.654, val_loss: 0.545, val_acc: 0.759
Epoch 2, loss: 0.558, acc: 0.759, val_loss: 0.574, val_acc: 0.759
Epoch 3, loss: 0.545, acc: 0.759, val_loss: 0.526, val_acc: 0.759
Epoch 4, loss: 0.525, acc: 0.759, val_loss: 0.518, val_acc: 0.759
Epoch 5, loss: 0.494, acc: 0.759, val_loss: 0.464, val_acc: 0.759
Epoch 6, loss: 0.462, acc: 0.759, val_loss: 0.455, val_acc: 0.759
Epoch 7, loss: 0.434, acc: 0.759, val_loss: 0.420, val_acc: 0.759
Epoch 8, loss: 0.430, acc: 0.761, val_loss: 0.424, val_acc: 0.756
Epoch 9, loss: 0.423, acc: 0.778, val_loss: 0.418, val_acc: 0.801
Epoch 10, loss: 0.414, acc: 0.808, val_loss: 0.399, val_acc: 0.809
Epoch 11, loss: 0.406, acc: 0.809, val_loss: 0.396, val_acc: 0.816
Epoch 12, loss: 0.403, acc: 0.812, val_loss: 0.393, val_acc: 0.819
Epoch 13, loss: 0.396, acc: 0.818, val_loss: 0.387, val_acc: 0.824
Epoch 14, loss: 0.390, acc: 0.820, val_loss: 0.382, val_acc: 0.820
Epoch 15, loss: 0.388, acc: 0.814, val_loss: 0.378, val_acc: 0.823
Epoch 16, loss: 0.385, acc: 0.823, val_loss: 0.375, val_acc: 0.826
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.8263473053892215 

2909 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.5533548288039306 

Threshold adjusted fairness score :  0.33756744861602783
Maximum Difference: 0.66243255
Minimum Difference: 0.0
Average (Mean) Difference: 0.26872787 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 8) 0.1
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 2) 0.3535533905932738
deepbayes: Using implicit prior
(100, 8) 0.1
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 2) 0.3535533905932738
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.685, acc: 0.634, val_loss: 0.596, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.566, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.583, acc: 0.759, val_loss: 0.605, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.611, acc: 0.759, val_loss: 0.600, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.594, acc: 0.759, val_loss: 0.575, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.562, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.556, acc: 0.759, val_loss: 0.563, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.571, acc: 0.759, val_loss: 0.575, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.569, acc: 0.759, val_loss: 0.561, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.556, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.555, acc: 0.759, val_loss: 0.558, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.561, acc: 0.759, val_loss: 0.562, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.560, acc: 0.759, val_loss: 0.557, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.554, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.553, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.555, acc: 0.759, val_loss: 0.556, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  1.0
Maximum Difference: 0.0
Minimum Difference: 0.0
Average (Mean) Difference: 0.0 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 4 N 8
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 8) 0.1
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 2) 0.3535533905932738
deepbayes: Using implicit prior
(100, 8) 0.1
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 2) 0.3535533905932738
Epoch 1, loss: 0.654, acc: 0.709, val_loss: 0.591, val_acc: 0.759
Epoch 2, loss: 0.562, acc: 0.759, val_loss: 0.559, val_acc: 0.759
Epoch 3, loss: 0.580, acc: 0.759, val_loss: 0.580, val_acc: 0.759
Epoch 4, loss: 0.556, acc: 0.759, val_loss: 0.527, val_acc: 0.759
Epoch 5, loss: 0.498, acc: 0.759, val_loss: 0.460, val_acc: 0.760
Epoch 6, loss: 0.443, acc: 0.799, val_loss: 0.429, val_acc: 0.805
Epoch 7, loss: 0.442, acc: 0.790, val_loss: 0.440, val_acc: 0.823
Epoch 8, loss: 0.409, acc: 0.819, val_loss: 0.393, val_acc: 0.823
Epoch 9, loss: 0.403, acc: 0.819, val_loss: 0.388, val_acc: 0.826
Epoch 10, loss: 0.381, acc: 0.824, val_loss: 0.370, val_acc: 0.830
Epoch 11, loss: 0.381, acc: 0.826, val_loss: 0.374, val_acc: 0.823
Epoch 12, loss: 0.379, acc: 0.827, val_loss: 0.367, val_acc: 0.833
Epoch 13, loss: 0.369, acc: 0.826, val_loss: 0.360, val_acc: 0.829
Epoch 14, loss: 0.365, acc: 0.831, val_loss: 0.356, val_acc: 0.830
Epoch 15, loss: 0.361, acc: 0.830, val_loss: 0.358, val_acc: 0.826
Epoch 16, loss: 0.359, acc: 0.832, val_loss: 0.354, val_acc: 0.830
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.8304928604329802 

4287 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.34177798249654534 

Threshold adjusted fairness score :  0.2003043293952942
Maximum Difference: 0.7996957
Minimum Difference: 0.010313332
Average (Mean) Difference: 0.45268252 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 8) 0.1
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 2) 0.3535533905932738
deepbayes: Using implicit prior
(100, 8) 0.1
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 2) 0.3535533905932738
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.665, acc: 0.612, val_loss: 0.570, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.563, acc: 0.759, val_loss: 0.590, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.612, acc: 0.759, val_loss: 0.618, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.588, acc: 0.759, val_loss: 0.562, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.554, acc: 0.759, val_loss: 0.557, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.564, acc: 0.759, val_loss: 0.569, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.566, acc: 0.759, val_loss: 0.559, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.555, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.554, acc: 0.759, val_loss: 0.557, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
 80%|████████  | 4/5 [29:50<07:56, 476.19s/it]100%|██████████| 5/5 [39:59<00:00, 523.99s/it]100%|██████████| 5/5 [39:59<00:00, 479.85s/it]
Epoch 10, loss: 0.560, acc: 0.759, val_loss: 0.560, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.559, acc: 0.759, val_loss: 0.556, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.553, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.556, acc: 0.759, val_loss: 0.556, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.555, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  1.0
Maximum Difference: 0.0
Minimum Difference: 0.0
Average (Mean) Difference: 0.0 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 5 N 8
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 8) 0.1
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 2) 0.3535533905932738
deepbayes: Using implicit prior
(100, 8) 0.1
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 2) 0.3535533905932738
Epoch 1, loss: 0.628, acc: 0.748, val_loss: 0.554, val_acc: 0.759
Epoch 2, loss: 0.574, acc: 0.759, val_loss: 0.608, val_acc: 0.759
Epoch 3, loss: 0.590, acc: 0.759, val_loss: 0.559, val_acc: 0.759
Epoch 4, loss: 0.550, acc: 0.759, val_loss: 0.554, val_acc: 0.759
Epoch 5, loss: 0.562, acc: 0.759, val_loss: 0.565, val_acc: 0.759
Epoch 6, loss: 0.560, acc: 0.759, val_loss: 0.553, val_acc: 0.759
Epoch 7, loss: 0.550, acc: 0.759, val_loss: 0.549, val_acc: 0.759
Epoch 8, loss: 0.550, acc: 0.759, val_loss: 0.548, val_acc: 0.759
Epoch 9, loss: 0.540, acc: 0.759, val_loss: 0.527, val_acc: 0.759
Epoch 10, loss: 0.510, acc: 0.759, val_loss: 0.490, val_acc: 0.759
Epoch 11, loss: 0.463, acc: 0.759, val_loss: 0.436, val_acc: 0.759
Epoch 12, loss: 0.425, acc: 0.783, val_loss: 0.416, val_acc: 0.797
Epoch 13, loss: 0.432, acc: 0.780, val_loss: 0.428, val_acc: 0.805
Epoch 14, loss: 0.417, acc: 0.812, val_loss: 0.399, val_acc: 0.806
Epoch 15, loss: 0.400, acc: 0.816, val_loss: 0.399, val_acc: 0.816
Epoch 16, loss: 0.400, acc: 0.822, val_loss: 0.388, val_acc: 0.822
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.8215875940426839 

3525 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.4587747581759558 

Threshold adjusted fairness score :  0.3590075969696045
Maximum Difference: 0.6409924
Minimum Difference: 0.033125997
Average (Mean) Difference: 0.30810538 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 8) 0.1
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 2) 0.3535533905932738
deepbayes: Using implicit prior
(100, 8) 0.1
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 8) 0.3535533905932738
(8, 2) 0.3535533905932738
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.677, acc: 0.602, val_loss: 0.604, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.567, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.573, acc: 0.759, val_loss: 0.596, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.611, acc: 0.759, val_loss: 0.614, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.601, acc: 0.759, val_loss: 0.583, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.564, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.556, acc: 0.759, val_loss: 0.565, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.573, acc: 0.759, val_loss: 0.570, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.563, acc: 0.759, val_loss: 0.556, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.555, acc: 0.759, val_loss: 0.557, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.558, acc: 0.759, val_loss: 0.558, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.556, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.553, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.555, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  1.0
Maximum Difference: 0.0
Minimum Difference: 0.0
Average (Mean) Difference: 0.0 

>> Writing out to dataframe ...
> Done.
Trial complete!

  0%|          | 0/5 [00:00<?, ?it/s] 20%|██        | 1/5 [05:45<23:00, 345.15s/it]Network : L 1 N 4
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 4) 0.1
(4, 2) 0.5
deepbayes: Using implicit prior
(100, 4) 0.1
(4, 2) 0.5
Epoch 1, loss: 0.681, acc: 0.630, val_loss: 0.625, val_acc: 0.759
Epoch 2, loss: 0.578, acc: 0.759, val_loss: 0.545, val_acc: 0.759
Epoch 3, loss: 0.529, acc: 0.759, val_loss: 0.518, val_acc: 0.759
Epoch 4, loss: 0.523, acc: 0.759, val_loss: 0.521, val_acc: 0.759
Epoch 5, loss: 0.519, acc: 0.759, val_loss: 0.501, val_acc: 0.759
Epoch 6, loss: 0.486, acc: 0.759, val_loss: 0.459, val_acc: 0.759
Epoch 7, loss: 0.449, acc: 0.759, val_loss: 0.429, val_acc: 0.759
Epoch 8, loss: 0.430, acc: 0.759, val_loss: 0.418, val_acc: 0.759
Epoch 9, loss: 0.431, acc: 0.729, val_loss: 0.424, val_acc: 0.710
Epoch 10, loss: 0.441, acc: 0.708, val_loss: 0.432, val_acc: 0.718
Epoch 11, loss: 0.444, acc: 0.717, val_loss: 0.429, val_acc: 0.728
Epoch 12, loss: 0.434, acc: 0.731, val_loss: 0.416, val_acc: 0.743
Epoch 13, loss: 0.416, acc: 0.768, val_loss: 0.405, val_acc: 0.786
Epoch 14, loss: 0.406, acc: 0.804, val_loss: 0.400, val_acc: 0.813
Epoch 15, loss: 0.400, acc: 0.785, val_loss: 0.398, val_acc: 0.759
Epoch 16, loss: 0.402, acc: 0.803, val_loss: 0.402, val_acc: 0.822
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.822201750345463 

2345 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.6399508674957777 

Threshold adjusted fairness score :  0.5866135358810425
Maximum Difference: 0.41338646
Minimum Difference: 0.0
Average (Mean) Difference: 0.16367891 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 4) 0.1
(4, 2) 0.5
deepbayes: Using implicit prior
(100, 4) 0.1
(4, 2) 0.5
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.697, acc: 0.556, val_loss: 0.609, val_acc: 0.758, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.583, acc: 0.759, val_loss: 0.560, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.565, acc: 0.759, val_loss: 0.632, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.597, acc: 0.759, val_loss: 0.627, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.592, acc: 0.759, val_loss: 0.583, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.565, acc: 0.759, val_loss: 0.558, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.562, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.555, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.555, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.556, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.555, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.554, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9443311095237732
Maximum Difference: 0.05566889
Minimum Difference: 0.0
Average (Mean) Difference: 0.00020240866 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 2 N 4
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 4) 0.1
(4, 4) 0.5
(4, 2) 0.5
deepbayes: Using implicit prior
(100, 4) 0.1
(4, 4) 0.5
(4, 2) 0.5
Epoch 1, loss: 0.668, acc: 0.690, val_loss: 0.621, val_acc: 0.759
Epoch 2, loss: 0.577, acc: 0.759, val_loss: 0.546, val_acc: 0.759
Epoch 3, loss: 0.554, acc: 0.759, val_loss: 0.561, val_acc: 0.759
Epoch 4, loss: 0.558, acc: 0.759, val_loss: 0.560, val_acc: 0.759
Epoch 5, loss: 0.558, acc: 0.759, val_loss: 0.546, val_acc: 0.759
Epoch 6, loss: 0.525, acc: 0.759, val_loss: 0.501, val_acc: 0.759
Epoch 7, loss: 0.478, acc: 0.759, val_loss: 0.450, val_acc: 0.759
Epoch 8, loss: 0.438, acc: 0.759, val_loss: 0.420, val_acc: 0.759
Epoch 9, loss: 0.420, acc: 0.761, val_loss: 0.411, val_acc: 0.776
Epoch 10, loss: 0.417, acc: 0.771, val_loss: 0.409, val_acc: 0.773
Epoch 11, loss: 0.409, acc: 0.795, val_loss: 0.400, val_acc: 0.810
Epoch 12, loss: 0.398, acc: 0.809, val_loss: 0.389, val_acc: 0.815
Epoch 13, loss: 0.394, acc: 0.812, val_loss: 0.387, val_acc: 0.824
Epoch 14, loss: 0.392, acc: 0.819, val_loss: 0.386, val_acc: 0.823
Epoch 15, loss: 0.387, acc: 0.821, val_loss: 0.379, val_acc: 0.827
Epoch 16, loss: 0.379, acc: 0.824, val_loss: 0.371, val_acc: 0.831
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.8307999385843697 

3207 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.5076001842468909 

Threshold adjusted fairness score :  0.30955731868743896
Maximum Difference: 0.6904427
Minimum Difference: 0.0
Average (Mean) Difference: 0.30305353 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 4) 0.1
(4, 4) 0.5
(4, 2) 0.5
deepbayes: Using implicit prior
(100, 4) 0.1
(4, 4) 0.5
(4, 2) 0.5
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.651, acc: 0.693, val_loss: 0.540, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.587, acc: 0.759, val_loss: 0.725, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.569, acc: 0.759, val_loss: 0.561, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.553, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.553, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.552, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.552, acc: 0.759, val_loss: 0.550, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.552, acc: 0.759, val_loss: 0.549, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.552, acc: 0.759, val_loss: 0.550, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.552, acc: 0.759, val_loss: 0.549, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.552, acc: 0.759, val_loss: 0.548, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.552, acc: 0.759, val_loss: 0.549, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.552, acc: 0.759, val_loss: 0.549, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.552, acc: 0.759, val_loss: 0.548, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.552, acc: 0.759, val_loss: 0.549, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :   40%|████      | 2/5 [12:37<19:14, 384.67s/it] 60%|██████    | 3/5 [20:41<14:19, 429.84s/it]0.9703742265701294
Maximum Difference: 0.029625773
Minimum Difference: 0.020688534
Average (Mean) Difference: 0.024379913 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 3 N 4
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 4) 0.1
(4, 4) 0.5
(4, 4) 0.5
(4, 2) 0.5
deepbayes: Using implicit prior
(100, 4) 0.1
(4, 4) 0.5
(4, 4) 0.5
(4, 2) 0.5
Epoch 1, loss: 0.643, acc: 0.741, val_loss: 0.575, val_acc: 0.759
Epoch 2, loss: 0.561, acc: 0.759, val_loss: 0.580, val_acc: 0.759
Epoch 3, loss: 0.582, acc: 0.759, val_loss: 0.571, val_acc: 0.759
Epoch 4, loss: 0.553, acc: 0.759, val_loss: 0.540, val_acc: 0.759
Epoch 5, loss: 0.527, acc: 0.759, val_loss: 0.507, val_acc: 0.759
Epoch 6, loss: 0.474, acc: 0.759, val_loss: 0.447, val_acc: 0.759
Epoch 7, loss: 0.443, acc: 0.759, val_loss: 0.421, val_acc: 0.759
Epoch 8, loss: 0.423, acc: 0.762, val_loss: 0.427, val_acc: 0.731
Epoch 9, loss: 0.433, acc: 0.733, val_loss: 0.425, val_acc: 0.744
Epoch 10, loss: 0.419, acc: 0.785, val_loss: 0.413, val_acc: 0.814
Epoch 11, loss: 0.406, acc: 0.817, val_loss: 0.394, val_acc: 0.819
Epoch 12, loss: 0.401, acc: 0.817, val_loss: 0.401, val_acc: 0.822
Epoch 13, loss: 0.396, acc: 0.822, val_loss: 0.396, val_acc: 0.820
Epoch 14, loss: 0.392, acc: 0.823, val_loss: 0.383, val_acc: 0.825
Epoch 15, loss: 0.386, acc: 0.818, val_loss: 0.379, val_acc: 0.824
Epoch 16, loss: 0.380, acc: 0.824, val_loss: 0.377, val_acc: 0.825
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.8252725318593582 

2474 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.620144326731153 

Threshold adjusted fairness score :  0.31261366605758667
Maximum Difference: 0.68738633
Minimum Difference: 0.0
Average (Mean) Difference: 0.24324244 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 4) 0.1
(4, 4) 0.5
(4, 4) 0.5
(4, 2) 0.5
deepbayes: Using implicit prior
(100, 4) 0.1
(4, 4) 0.5
(4, 4) 0.5
(4, 2) 0.5
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.665, acc: 0.698, val_loss: 0.622, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.577, acc: 0.759, val_loss: 0.568, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.562, acc: 0.759, val_loss: 0.607, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.592, acc: 0.759, val_loss: 0.639, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.592, acc: 0.759, val_loss: 0.606, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.566, acc: 0.759, val_loss: 0.567, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.554, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.556, acc: 0.759, val_loss: 0.559, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.562, acc: 0.759, val_loss: 0.562, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.561, acc: 0.759, val_loss: 0.557, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.555, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.552, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.555, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.556, acc: 0.759, val_loss: 0.556, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.555, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9785541892051697
Maximum Difference: 0.02144581
Minimum Difference: 0.0
Average (Mean) Difference: 0.00054663874 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 4 N 4
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 4) 0.1
(4, 4) 0.5
(4, 4) 0.5
(4, 4) 0.5
(4, 2) 0.5
deepbayes: Using implicit prior
(100, 4) 0.1
(4, 4) 0.5
(4, 4) 0.5
(4, 4) 0.5
(4, 2) 0.5
Epoch 1, loss: 0.657, acc: 0.660, val_loss: 0.589, val_acc: 0.759
Epoch 2, loss: 0.560, acc: 0.759, val_loss: 0.561, val_acc: 0.759
Epoch 3, loss: 0.590, acc: 0.759, val_loss: 0.610, val_acc: 0.759
Epoch 4, loss: 0.599, acc: 0.759, val_loss: 0.577, val_acc: 0.759
Epoch 5, loss: 0.557, acc: 0.759, val_loss: 0.544, val_acc: 0.759
Epoch 6, loss: 0.545, acc: 0.759, val_loss: 0.548, val_acc: 0.759
Epoch 7, loss: 0.546, acc: 0.759, val_loss: 0.539, val_acc: 0.759
Epoch 8, loss: 0.522, acc: 0.759, val_loss: 0.502, val_acc: 0.759
Epoch 9, loss: 0.485, acc: 0.759, val_loss: 0.459, val_acc: 0.759
Epoch 10, loss: 0.446, acc: 0.759, val_loss: 0.435, val_acc: 0.759
Epoch 11, loss: 0.437, acc: 0.759, val_loss: 0.430, val_acc: 0.759
Epoch 12, loss: 0.435, acc: 0.759, val_loss: 0.427, val_acc: 0.759
Epoch 13, loss: 0.437, acc: 0.759, val_loss: 0.428, val_acc: 0.759
Epoch 14, loss: 0.438, acc: 0.759, val_loss: 0.426, val_acc: 0.759
Epoch 15, loss: 0.436, acc: 0.759, val_loss: 0.423, val_acc: 0.759
Epoch 16, loss: 0.430, acc: 0.759, val_loss: 0.417, val_acc: 0.759
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.5453790426254272
Maximum Difference: 0.45462096
Minimum Difference: 0.0
Average (Mean) Difference: 0.17417085 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 4) 0.1
(4, 4) 0.5
(4, 4) 0.5
(4, 4) 0.5
(4, 2) 0.5
deepbayes: Using implicit prior
(100, 4) 0.1
(4, 4) 0.5
(4, 4) 0.5
(4, 4) 0.5
(4, 2) 0.5
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.690, acc: 0.585, val_loss: 0.625, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.584, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.557, acc: 0.759, val_loss: 0.567, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.586, acc: 0.759, val_loss: 0.601, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.606, acc: 0.759, val_loss: 0.606, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.596, acc: 0.759, val_loss: 0.582, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.568, acc: 0.759, val_loss: 0.557, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.553, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.561, acc: 0.759, val_loss: 0.568, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.572, acc: 0.759, val_loss: 0.571, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.566, acc: 0.759, val_loss: 0.560, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.555, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.553, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.557, acc: 0.759, val_loss: 0.559, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.560, acc: 0.759, val_loss: 0.559, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
 80%|████████  | 4/5 [29:48<07:56, 476.36s/it]100%|██████████| 5/5 [40:01<00:00, 525.62s/it]100%|██████████| 5/5 [40:01<00:00, 480.34s/it]
Epoch 16, loss: 0.557, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  1.0
Maximum Difference: 0.0
Minimum Difference: 0.0
Average (Mean) Difference: 0.0 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 5 N 4
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 4) 0.1
(4, 4) 0.5
(4, 4) 0.5
(4, 4) 0.5
(4, 4) 0.5
(4, 2) 0.5
deepbayes: Using implicit prior
(100, 4) 0.1
(4, 4) 0.5
(4, 4) 0.5
(4, 4) 0.5
(4, 4) 0.5
(4, 2) 0.5
Epoch 1, loss: 0.670, acc: 0.707, val_loss: 0.629, val_acc: 0.759
Epoch 2, loss: 0.588, acc: 0.759, val_loss: 0.557, val_acc: 0.759
Epoch 3, loss: 0.556, acc: 0.759, val_loss: 0.565, val_acc: 0.759
Epoch 4, loss: 0.582, acc: 0.759, val_loss: 0.597, val_acc: 0.759
Epoch 5, loss: 0.604, acc: 0.759, val_loss: 0.604, val_acc: 0.759
Epoch 6, loss: 0.595, acc: 0.759, val_loss: 0.582, val_acc: 0.759
Epoch 7, loss: 0.569, acc: 0.759, val_loss: 0.557, val_acc: 0.759
Epoch 8, loss: 0.553, acc: 0.759, val_loss: 0.554, val_acc: 0.759
Epoch 9, loss: 0.560, acc: 0.759, val_loss: 0.567, val_acc: 0.759
Epoch 10, loss: 0.570, acc: 0.759, val_loss: 0.570, val_acc: 0.759
Epoch 11, loss: 0.566, acc: 0.759, val_loss: 0.559, val_acc: 0.759
Epoch 12, loss: 0.555, acc: 0.759, val_loss: 0.552, val_acc: 0.759
Epoch 13, loss: 0.553, acc: 0.759, val_loss: 0.554, val_acc: 0.759
Epoch 14, loss: 0.557, acc: 0.759, val_loss: 0.558, val_acc: 0.759
Epoch 15, loss: 0.558, acc: 0.759, val_loss: 0.557, val_acc: 0.759
Epoch 16, loss: 0.555, acc: 0.759, val_loss: 0.553, val_acc: 0.759
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9956082105636597
Maximum Difference: 0.0043917894
Minimum Difference: 0.0
Average (Mean) Difference: 0.0024350598 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 4) 0.1
(4, 4) 0.5
(4, 4) 0.5
(4, 4) 0.5
(4, 4) 0.5
(4, 2) 0.5
deepbayes: Using implicit prior
(100, 4) 0.1
(4, 4) 0.5
(4, 4) 0.5
(4, 4) 0.5
(4, 4) 0.5
(4, 2) 0.5
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.669, acc: 0.703, val_loss: 0.619, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.578, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.562, acc: 0.759, val_loss: 0.580, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.597, acc: 0.759, val_loss: 0.605, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.598, acc: 0.759, val_loss: 0.584, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.569, acc: 0.759, val_loss: 0.557, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.553, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.559, acc: 0.759, val_loss: 0.563, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.561, acc: 0.759, val_loss: 0.557, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.554, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.553, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.555, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.554, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.552, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  1.0
Maximum Difference: 0.0
Minimum Difference: 0.0
Average (Mean) Difference: 0.0 

>> Writing out to dataframe ...
> Done.
Trial complete!

  0%|          | 0/5 [00:00<?, ?it/s] 20%|██        | 1/5 [05:47<23:09, 347.43s/it]Network : L 1 N 2
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 2) 0.1
(2, 2) 0.7071067811865476
deepbayes: Using implicit prior
(100, 2) 0.1
(2, 2) 0.7071067811865476
Epoch 1, loss: 0.579, acc: 0.752, val_loss: 0.505, val_acc: 0.759
Epoch 2, loss: 0.447, acc: 0.759, val_loss: 0.429, val_acc: 0.759
Epoch 3, loss: 0.425, acc: 0.759, val_loss: 0.417, val_acc: 0.759
Epoch 4, loss: 0.424, acc: 0.759, val_loss: 0.414, val_acc: 0.759
Epoch 5, loss: 0.419, acc: 0.759, val_loss: 0.408, val_acc: 0.759
Epoch 6, loss: 0.412, acc: 0.759, val_loss: 0.403, val_acc: 0.759
Epoch 7, loss: 0.408, acc: 0.759, val_loss: 0.400, val_acc: 0.759
Epoch 8, loss: 0.403, acc: 0.789, val_loss: 0.393, val_acc: 0.822
Epoch 9, loss: 0.397, acc: 0.823, val_loss: 0.387, val_acc: 0.828
Epoch 10, loss: 0.390, acc: 0.825, val_loss: 0.381, val_acc: 0.829
Epoch 11, loss: 0.386, acc: 0.825, val_loss: 0.376, val_acc: 0.830
Epoch 12, loss: 0.382, acc: 0.826, val_loss: 0.372, val_acc: 0.828
Epoch 13, loss: 0.378, acc: 0.828, val_loss: 0.368, val_acc: 0.830
Epoch 14, loss: 0.374, acc: 0.828, val_loss: 0.364, val_acc: 0.830
Epoch 15, loss: 0.371, acc: 0.829, val_loss: 0.361, val_acc: 0.829
Epoch 16, loss: 0.368, acc: 0.830, val_loss: 0.359, val_acc: 0.828
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.8275756179947796 

3637 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 0.44157838169814223 

Threshold adjusted fairness score :  0.3525996208190918
Maximum Difference: 0.6474004
Minimum Difference: 0.0
Average (Mean) Difference: 0.35481277 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 2) 0.1
(2, 2) 0.7071067811865476
deepbayes: Using implicit prior
(100, 2) 0.1
(2, 2) 0.7071067811865476
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.703, acc: 0.411, val_loss: 0.668, val_acc: 0.667, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.610, acc: 0.751, val_loss: 0.569, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.557, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.564, acc: 0.759, val_loss: 0.576, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.588, acc: 0.759, val_loss: 0.597, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.599, acc: 0.759, val_loss: 0.597, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.589, acc: 0.759, val_loss: 0.580, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.570, acc: 0.759, val_loss: 0.560, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.555, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.554, acc: 0.759, val_loss: 0.557, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.562, acc: 0.759, val_loss: 0.565, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.566, acc: 0.759, val_loss: 0.565, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.562, acc: 0.759, val_loss: 0.558, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.555, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.554, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9837608933448792
Maximum Difference: 0.016239107
Minimum Difference: 0.0
Average (Mean) Difference: 0.00010925606 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 2 N 2
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 2) 0.1
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
deepbayes: Using implicit prior
(100, 2) 0.1
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
Epoch 1, loss: 0.676, acc: 0.715, val_loss: 0.644, val_acc: 0.759
Epoch 2, loss: 0.605, acc: 0.759, val_loss: 0.571, val_acc: 0.759
Epoch 3, loss: 0.556, acc: 0.759, val_loss: 0.552, val_acc: 0.759
Epoch 4, loss: 0.562, acc: 0.759, val_loss: 0.574, val_acc: 0.759
Epoch 5, loss: 0.582, acc: 0.759, val_loss: 0.586, val_acc: 0.759
Epoch 6, loss: 0.588, acc: 0.759, val_loss: 0.586, val_acc: 0.759
Epoch 7, loss: 0.580, acc: 0.759, val_loss: 0.572, val_acc: 0.759
Epoch 8, loss: 0.562, acc: 0.759, val_loss: 0.552, val_acc: 0.759
Epoch 9, loss: 0.545, acc: 0.759, val_loss: 0.538, val_acc: 0.759
Epoch 10, loss: 0.535, acc: 0.759, val_loss: 0.532, val_acc: 0.759
Epoch 11, loss: 0.530, acc: 0.759, val_loss: 0.526, val_acc: 0.759
Epoch 12, loss: 0.519, acc: 0.759, val_loss: 0.510, val_acc: 0.759
Epoch 13, loss: 0.496, acc: 0.759, val_loss: 0.482, val_acc: 0.759
Epoch 14, loss: 0.469, acc: 0.759, val_loss: 0.457, val_acc: 0.759
Epoch 15, loss: 0.448, acc: 0.759, val_loss: 0.438, val_acc: 0.759
Epoch 16, loss: 0.433, acc: 0.759, val_loss: 0.422, val_acc: 0.759
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.6659929156303406
Maximum Difference: 0.33400708
Minimum Difference: 0.0
Average (Mean) Difference: 0.08259512 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 2) 0.1
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
deepbayes: Using implicit prior
(100, 2) 0.1
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.676, acc: 0.750, val_loss: 0.635, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.607, acc: 0.759, val_loss: 0.567, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.558, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.561, acc: 0.759, val_loss: 0.574, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.585, acc: 0.759, val_loss: 0.596, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.596, acc: 0.759, val_loss: 0.598, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.588, acc: 0.759, val_loss: 0.582, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.570, acc: 0.759, val_loss: 0.561, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.555, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.554, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.561, acc: 0.759, val_loss: 0.560, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.565, acc: 0.759, val_loss: 0.560, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.562, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.555, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.552, acc: 0.759, val_loss: 0.551, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.554, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
 40%|████      | 2/5 [12:38<19:14, 384.92s/it] 60%|██████    | 3/5 [20:37<14:15, 427.64s/it]Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9709733724594116
Maximum Difference: 0.029026628
Minimum Difference: 0.0
Average (Mean) Difference: 0.0068107825 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 3 N 2
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 2) 0.1
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
deepbayes: Using implicit prior
(100, 2) 0.1
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
Epoch 1, loss: 0.675, acc: 0.696, val_loss: 0.639, val_acc: 0.759
Epoch 2, loss: 0.597, acc: 0.759, val_loss: 0.562, val_acc: 0.759
Epoch 3, loss: 0.555, acc: 0.759, val_loss: 0.560, val_acc: 0.759
Epoch 4, loss: 0.577, acc: 0.759, val_loss: 0.592, val_acc: 0.759
Epoch 5, loss: 0.598, acc: 0.759, val_loss: 0.599, val_acc: 0.759
Epoch 6, loss: 0.591, acc: 0.759, val_loss: 0.579, val_acc: 0.759
Epoch 7, loss: 0.567, acc: 0.759, val_loss: 0.557, val_acc: 0.759
Epoch 8, loss: 0.554, acc: 0.759, val_loss: 0.552, val_acc: 0.759
Epoch 9, loss: 0.556, acc: 0.759, val_loss: 0.559, val_acc: 0.759
Epoch 10, loss: 0.562, acc: 0.759, val_loss: 0.564, val_acc: 0.759
Epoch 11, loss: 0.563, acc: 0.759, val_loss: 0.560, val_acc: 0.759
Epoch 12, loss: 0.557, acc: 0.759, val_loss: 0.554, val_acc: 0.759
Epoch 13, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759
Epoch 14, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759
Epoch 15, loss: 0.555, acc: 0.759, val_loss: 0.555, val_acc: 0.759
Epoch 16, loss: 0.556, acc: 0.759, val_loss: 0.556, val_acc: 0.759
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  1.0
Maximum Difference: 0.0
Minimum Difference: 0.0
Average (Mean) Difference: 0.0 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 2) 0.1
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
deepbayes: Using implicit prior
(100, 2) 0.1
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.658, acc: 0.750, val_loss: 0.608, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.564, acc: 0.759, val_loss: 0.664, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.588, acc: 0.759, val_loss: 0.731, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.609, acc: 0.759, val_loss: 0.662, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.574, acc: 0.759, val_loss: 0.574, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.554, acc: 0.759, val_loss: 0.562, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.569, acc: 0.759, val_loss: 0.576, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.573, acc: 0.759, val_loss: 0.567, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.560, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.553, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.557, acc: 0.759, val_loss: 0.560, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.560, acc: 0.759, val_loss: 0.560, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.558, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.554, acc: 0.759, val_loss: 0.555, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  0.9716351628303528
Maximum Difference: 0.028364837
Minimum Difference: 0.0
Average (Mean) Difference: 1.3076928e-05 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 4 N 2
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 2) 0.1
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
deepbayes: Using implicit prior
(100, 2) 0.1
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
Epoch 1, loss: 0.672, acc: 0.719, val_loss: 0.635, val_acc: 0.759
Epoch 2, loss: 0.592, acc: 0.759, val_loss: 0.558, val_acc: 0.759
Epoch 3, loss: 0.556, acc: 0.759, val_loss: 0.566, val_acc: 0.759
Epoch 4, loss: 0.583, acc: 0.759, val_loss: 0.595, val_acc: 0.759
Epoch 5, loss: 0.591, acc: 0.759, val_loss: 0.585, val_acc: 0.759
Epoch 6, loss: 0.577, acc: 0.759, val_loss: 0.567, val_acc: 0.759
Epoch 7, loss: 0.560, acc: 0.759, val_loss: 0.553, val_acc: 0.759
Epoch 8, loss: 0.552, acc: 0.759, val_loss: 0.554, val_acc: 0.759
Epoch 9, loss: 0.557, acc: 0.759, val_loss: 0.560, val_acc: 0.759
Epoch 10, loss: 0.562, acc: 0.759, val_loss: 0.562, val_acc: 0.759
Epoch 11, loss: 0.560, acc: 0.759, val_loss: 0.557, val_acc: 0.759
Epoch 12, loss: 0.555, acc: 0.759, val_loss: 0.553, val_acc: 0.759
Epoch 13, loss: 0.552, acc: 0.759, val_loss: 0.552, val_acc: 0.759
Epoch 14, loss: 0.553, acc: 0.759, val_loss: 0.554, val_acc: 0.759
Epoch 15, loss: 0.555, acc: 0.759, val_loss: 0.555, val_acc: 0.759
Epoch 16, loss: 0.555, acc: 0.759, val_loss: 0.555, val_acc: 0.759
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  1.0
Maximum Difference: 0.0
Minimum Difference: 0.0
Average (Mean) Difference: 0.0 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 2) 0.1
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
deepbayes: Using implicit prior
(100, 2) 0.1
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.646, acc: 0.738, val_loss: 0.570, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.567, acc: 0.759, val_loss: 0.599, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.623, acc: 0.759, val_loss: 0.619, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.584, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.562, acc: 0.759, val_loss: 0.584, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.588, acc: 0.759, val_loss: 0.577, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.561, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.561, acc: 0.759, val_loss: 0.570, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.571, acc: 0.759, val_loss: 0.566, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.558, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
 80%|████████  | 4/5 [29:42<07:54, 474.01s/it]100%|██████████| 5/5 [39:56<00:00, 524.45s/it]100%|██████████| 5/5 [39:56<00:00, 479.21s/it]
Epoch 11, loss: 0.554, acc: 0.759, val_loss: 0.558, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.561, acc: 0.759, val_loss: 0.560, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.557, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.555, acc: 0.759, val_loss: 0.556, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.556, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  1.0
Maximum Difference: 0.0
Minimum Difference: 0.0
Average (Mean) Difference: 0.0 

>> Writing out to dataframe ...
> Done.
Trial complete!

Network : L 5 N 2
>> Training Ordinary BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 2) 0.1
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
deepbayes: Using implicit prior
(100, 2) 0.1
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
Epoch 1, loss: 0.676, acc: 0.715, val_loss: 0.645, val_acc: 0.759
Epoch 2, loss: 0.607, acc: 0.759, val_loss: 0.573, val_acc: 0.759
Epoch 3, loss: 0.558, acc: 0.759, val_loss: 0.552, val_acc: 0.759
Epoch 4, loss: 0.561, acc: 0.759, val_loss: 0.572, val_acc: 0.759
Epoch 5, loss: 0.585, acc: 0.759, val_loss: 0.593, val_acc: 0.759
Epoch 6, loss: 0.596, acc: 0.759, val_loss: 0.595, val_acc: 0.759
Epoch 7, loss: 0.588, acc: 0.759, val_loss: 0.579, val_acc: 0.759
Epoch 8, loss: 0.570, acc: 0.759, val_loss: 0.561, val_acc: 0.759
Epoch 9, loss: 0.555, acc: 0.759, val_loss: 0.552, val_acc: 0.759
Epoch 10, loss: 0.554, acc: 0.759, val_loss: 0.557, val_acc: 0.759
Epoch 11, loss: 0.561, acc: 0.759, val_loss: 0.564, val_acc: 0.759
Epoch 12, loss: 0.565, acc: 0.759, val_loss: 0.564, val_acc: 0.759
Epoch 13, loss: 0.561, acc: 0.759, val_loss: 0.558, val_acc: 0.759
Epoch 14, loss: 0.555, acc: 0.759, val_loss: 0.553, val_acc: 0.759
Epoch 15, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759
Epoch 16, loss: 0.553, acc: 0.759, val_loss: 0.555, val_acc: 0.759
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Normal, No regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  1.0
Maximum Difference: 0.0
Minimum Difference: 0.0
Average (Mean) Difference: 0.0 

>> Training Regularized BNN model ...
This optimizer does not have a default compilation method. Please make sure to call the correct .compile method before use.
deepbayes: Using implicit prior
(100, 2) 0.1
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
deepbayes: Using implicit prior
(100, 2) 0.1
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
(2, 2) 0.7071067811865476
deepbayes: Detected robust training at compilation. Please ensure you have selected a robust-compatible loss
Epoch 1, loss: 0.672, acc: 0.718, val_loss: 0.634, val_acc: 0.759, rob: 0.000, (eps = 0.000000)
Epoch 2, loss: 0.592, acc: 0.759, val_loss: 0.559, val_acc: 0.759, rob: 0.000, (eps = 0.006250)
Epoch 3, loss: 0.556, acc: 0.759, val_loss: 0.564, val_acc: 0.759, rob: 0.000, (eps = 0.012500)
Epoch 4, loss: 0.581, acc: 0.759, val_loss: 0.595, val_acc: 0.759, rob: 0.000, (eps = 0.018750)
Epoch 5, loss: 0.595, acc: 0.759, val_loss: 0.589, val_acc: 0.759, rob: 0.000, (eps = 0.025000)
Epoch 6, loss: 0.576, acc: 0.759, val_loss: 0.563, val_acc: 0.759, rob: 0.000, (eps = 0.031250)
Epoch 7, loss: 0.555, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.037500)
Epoch 8, loss: 0.554, acc: 0.759, val_loss: 0.558, val_acc: 0.759, rob: 0.000, (eps = 0.043750)
Epoch 9, loss: 0.561, acc: 0.759, val_loss: 0.563, val_acc: 0.759, rob: 0.000, (eps = 0.050000)
Epoch 10, loss: 0.561, acc: 0.759, val_loss: 0.557, val_acc: 0.759, rob: 0.000, (eps = 0.056250)
Epoch 11, loss: 0.554, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.062500)
Epoch 12, loss: 0.553, acc: 0.759, val_loss: 0.553, val_acc: 0.759, rob: 0.000, (eps = 0.068750)
Epoch 13, loss: 0.555, acc: 0.759, val_loss: 0.556, val_acc: 0.759, rob: 0.000, (eps = 0.075000)
Epoch 14, loss: 0.556, acc: 0.759, val_loss: 0.556, val_acc: 0.759, rob: 0.000, (eps = 0.081250)
Epoch 15, loss: 0.555, acc: 0.759, val_loss: 0.554, val_acc: 0.759, rob: 0.000, (eps = 0.087500)
Epoch 16, loss: 0.553, acc: 0.759, val_loss: 0.552, val_acc: 0.759, rob: 0.000, (eps = 0.093750)
> Done.
>>Generating results.
>>Creating adversarial examples
Done.

 ❗️BNN - Adversarial Regularisation RESULTS❗️
Accuracy: 0.7592507293106096 

0 / 6513 individuals classified differently after adversarial attack
Basic Fairness Score: 1.0 

Threshold adjusted fairness score :  1.0
Maximum Difference: 0.0
Minimum Difference: 0.0
Average (Mean) Difference: 0.0 

>> Writing out to dataframe ...
> Done.
Trial complete!

>> Models tested. Writing out to file ...
Epsilon= 0.15  testing complete.
Full suite complete.
