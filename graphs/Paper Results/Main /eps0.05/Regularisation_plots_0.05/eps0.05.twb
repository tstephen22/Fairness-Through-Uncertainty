<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20233.23.1017.0948                               -->
<workbook original-version='18.1' source-build='2023.3.0 (20233.23.1017.0948)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.PatternedLineMarks.true...PatternedLineMarks />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='mean_eps_0.05' inline='true' name='federated.0ueb61k1spooa01d6x9500ltbfbt' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='mean_eps_0.05' name='textscan.1euq9jh1sapb6n17df38w1sieu31'>
            <connection class='textscan' directory='C:/Users/theos/OneDrive/Desktop/College/5th year/Thesis/Results/Fairness Regularisation/Charts/eps0.05/Regularisation_plots_0.05' filename='mean_eps_0.05.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1euq9jh1sapb6n17df38w1sieu31' name='mean_eps_0.05.csv' table='[mean_eps_0.05#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=' '>
            <column datatype='string' name='F1' ordinal='0' />
            <column datatype='real' name='Layer' ordinal='1' />
            <column datatype='real' name='Neurons' ordinal='2' />
            <column datatype='real' name='BNNAccuracy' ordinal='3' />
            <column datatype='real' name='BNNFairTrainingAccuracy' ordinal='4' />
            <column datatype='real' name='BNNMaxDifference' ordinal='5' />
            <column datatype='real' name='BNNFairTrainingMaxDifference' ordinal='6' />
            <column datatype='real' name='BNNMinDifference' ordinal='7' />
            <column datatype='real' name='BNNFairTrainingMinDifference' ordinal='8' />
            <column datatype='real' name='BNNFairnessScore' ordinal='9' />
            <column datatype='real' name='BNNFairTrainingFairnessScore' ordinal='10' />
            <column datatype='real' name='BNNAvgDiff' ordinal='11' />
            <column datatype='real' name='BNNFairTrainingAvgDiff' ordinal='12' />
            <column datatype='real' name='BNNRecall' ordinal='13' />
            <column datatype='real' name='BNNFairTrainingRecall' ordinal='14' />
            <column datatype='real' name='BNNPrecision' ordinal='15' />
            <column datatype='real' name='BNNFairTrainingPrecision' ordinal='16' />
            <column datatype='real' name='BNNMeanEntropy' ordinal='17' />
            <column datatype='real' name='BNNFairTrainingMeanEntropy' ordinal='18' />
            <column datatype='real' name='BNNTime' ordinal='19' />
            <column datatype='real' name='BNNFairTrainingTime' ordinal='20' />
            <column datatype='real' name='BNNAdversaryAccuracy' ordinal='21' />
            <column datatype='real' name='BNNAdversaryMaxDifference' ordinal='22' />
            <column datatype='real' name='BNNAdversaryMinDifference' ordinal='23' />
            <column datatype='real' name='BNNAdversaryFairnessScore' ordinal='24' />
            <column datatype='real' name='BNNAdversaryAvgDiff' ordinal='25' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1euq9jh1sapb6n17df38w1sieu31' name='mean_eps_0.05.csv' table='[mean_eps_0.05#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=' '>
            <column datatype='string' name='F1' ordinal='0' />
            <column datatype='real' name='Layer' ordinal='1' />
            <column datatype='real' name='Neurons' ordinal='2' />
            <column datatype='real' name='BNNAccuracy' ordinal='3' />
            <column datatype='real' name='BNNFairTrainingAccuracy' ordinal='4' />
            <column datatype='real' name='BNNMaxDifference' ordinal='5' />
            <column datatype='real' name='BNNFairTrainingMaxDifference' ordinal='6' />
            <column datatype='real' name='BNNMinDifference' ordinal='7' />
            <column datatype='real' name='BNNFairTrainingMinDifference' ordinal='8' />
            <column datatype='real' name='BNNFairnessScore' ordinal='9' />
            <column datatype='real' name='BNNFairTrainingFairnessScore' ordinal='10' />
            <column datatype='real' name='BNNAvgDiff' ordinal='11' />
            <column datatype='real' name='BNNFairTrainingAvgDiff' ordinal='12' />
            <column datatype='real' name='BNNRecall' ordinal='13' />
            <column datatype='real' name='BNNFairTrainingRecall' ordinal='14' />
            <column datatype='real' name='BNNPrecision' ordinal='15' />
            <column datatype='real' name='BNNFairTrainingPrecision' ordinal='16' />
            <column datatype='real' name='BNNMeanEntropy' ordinal='17' />
            <column datatype='real' name='BNNFairTrainingMeanEntropy' ordinal='18' />
            <column datatype='real' name='BNNTime' ordinal='19' />
            <column datatype='real' name='BNNFairTrainingTime' ordinal='20' />
            <column datatype='real' name='BNNAdversaryAccuracy' ordinal='21' />
            <column datatype='real' name='BNNAdversaryMaxDifference' ordinal='22' />
            <column datatype='real' name='BNNAdversaryMinDifference' ordinal='23' />
            <column datatype='real' name='BNNAdversaryFairnessScore' ordinal='24' />
            <column datatype='real' name='BNNAdversaryAvgDiff' ordinal='25' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[mean_eps_0.05.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot; &quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[mean_eps_0.05.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.05.csv_B2D0048C9F6D42AB808439E515CF239B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Layer</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Layer]</local-name>
            <parent-name>[mean_eps_0.05.csv]</parent-name>
            <remote-alias>Layer</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.05.csv_B2D0048C9F6D42AB808439E515CF239B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Neurons</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Neurons]</local-name>
            <parent-name>[mean_eps_0.05.csv]</parent-name>
            <remote-alias>Neurons</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.05.csv_B2D0048C9F6D42AB808439E515CF239B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNAccuracy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNAccuracy]</local-name>
            <parent-name>[mean_eps_0.05.csv]</parent-name>
            <remote-alias>BNNAccuracy</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.05.csv_B2D0048C9F6D42AB808439E515CF239B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNFairTrainingAccuracy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNFairTrainingAccuracy]</local-name>
            <parent-name>[mean_eps_0.05.csv]</parent-name>
            <remote-alias>BNNFairTrainingAccuracy</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.05.csv_B2D0048C9F6D42AB808439E515CF239B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNMaxDifference</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNMaxDifference]</local-name>
            <parent-name>[mean_eps_0.05.csv]</parent-name>
            <remote-alias>BNNMaxDifference</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.05.csv_B2D0048C9F6D42AB808439E515CF239B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNFairTrainingMaxDifference</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNFairTrainingMaxDifference]</local-name>
            <parent-name>[mean_eps_0.05.csv]</parent-name>
            <remote-alias>BNNFairTrainingMaxDifference</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.05.csv_B2D0048C9F6D42AB808439E515CF239B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNMinDifference</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNMinDifference]</local-name>
            <parent-name>[mean_eps_0.05.csv]</parent-name>
            <remote-alias>BNNMinDifference</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.05.csv_B2D0048C9F6D42AB808439E515CF239B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNFairTrainingMinDifference</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNFairTrainingMinDifference]</local-name>
            <parent-name>[mean_eps_0.05.csv]</parent-name>
            <remote-alias>BNNFairTrainingMinDifference</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.05.csv_B2D0048C9F6D42AB808439E515CF239B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNFairnessScore</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNFairnessScore]</local-name>
            <parent-name>[mean_eps_0.05.csv]</parent-name>
            <remote-alias>BNNFairnessScore</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.05.csv_B2D0048C9F6D42AB808439E515CF239B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNFairTrainingFairnessScore</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNFairTrainingFairnessScore]</local-name>
            <parent-name>[mean_eps_0.05.csv]</parent-name>
            <remote-alias>BNNFairTrainingFairnessScore</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.05.csv_B2D0048C9F6D42AB808439E515CF239B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNAvgDiff</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNAvgDiff]</local-name>
            <parent-name>[mean_eps_0.05.csv]</parent-name>
            <remote-alias>BNNAvgDiff</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.05.csv_B2D0048C9F6D42AB808439E515CF239B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNFairTrainingAvgDiff</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNFairTrainingAvgDiff]</local-name>
            <parent-name>[mean_eps_0.05.csv]</parent-name>
            <remote-alias>BNNFairTrainingAvgDiff</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.05.csv_B2D0048C9F6D42AB808439E515CF239B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNRecall</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNRecall]</local-name>
            <parent-name>[mean_eps_0.05.csv]</parent-name>
            <remote-alias>BNNRecall</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.05.csv_B2D0048C9F6D42AB808439E515CF239B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNFairTrainingRecall</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNFairTrainingRecall]</local-name>
            <parent-name>[mean_eps_0.05.csv]</parent-name>
            <remote-alias>BNNFairTrainingRecall</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.05.csv_B2D0048C9F6D42AB808439E515CF239B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNPrecision</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNPrecision]</local-name>
            <parent-name>[mean_eps_0.05.csv]</parent-name>
            <remote-alias>BNNPrecision</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.05.csv_B2D0048C9F6D42AB808439E515CF239B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNFairTrainingPrecision</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNFairTrainingPrecision]</local-name>
            <parent-name>[mean_eps_0.05.csv]</parent-name>
            <remote-alias>BNNFairTrainingPrecision</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.05.csv_B2D0048C9F6D42AB808439E515CF239B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNMeanEntropy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNMeanEntropy]</local-name>
            <parent-name>[mean_eps_0.05.csv]</parent-name>
            <remote-alias>BNNMeanEntropy</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.05.csv_B2D0048C9F6D42AB808439E515CF239B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNFairTrainingMeanEntropy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNFairTrainingMeanEntropy]</local-name>
            <parent-name>[mean_eps_0.05.csv]</parent-name>
            <remote-alias>BNNFairTrainingMeanEntropy</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.05.csv_B2D0048C9F6D42AB808439E515CF239B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNTime</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNTime]</local-name>
            <parent-name>[mean_eps_0.05.csv]</parent-name>
            <remote-alias>BNNTime</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.05.csv_B2D0048C9F6D42AB808439E515CF239B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNFairTrainingTime</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNFairTrainingTime]</local-name>
            <parent-name>[mean_eps_0.05.csv]</parent-name>
            <remote-alias>BNNFairTrainingTime</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.05.csv_B2D0048C9F6D42AB808439E515CF239B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNAdversaryAccuracy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNAdversaryAccuracy]</local-name>
            <parent-name>[mean_eps_0.05.csv]</parent-name>
            <remote-alias>BNNAdversaryAccuracy</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.05.csv_B2D0048C9F6D42AB808439E515CF239B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNAdversaryMaxDifference</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNAdversaryMaxDifference]</local-name>
            <parent-name>[mean_eps_0.05.csv]</parent-name>
            <remote-alias>BNNAdversaryMaxDifference</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.05.csv_B2D0048C9F6D42AB808439E515CF239B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNAdversaryMinDifference</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNAdversaryMinDifference]</local-name>
            <parent-name>[mean_eps_0.05.csv]</parent-name>
            <remote-alias>BNNAdversaryMinDifference</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.05.csv_B2D0048C9F6D42AB808439E515CF239B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNAdversaryFairnessScore</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNAdversaryFairnessScore]</local-name>
            <parent-name>[mean_eps_0.05.csv]</parent-name>
            <remote-alias>BNNAdversaryFairnessScore</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.05.csv_B2D0048C9F6D42AB808439E515CF239B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNAdversaryAvgDiff</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNAdversaryAvgDiff]</local-name>
            <parent-name>[mean_eps_0.05.csv]</parent-name>
            <remote-alias>BNNAdversaryAvgDiff</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.05.csv_B2D0048C9F6D42AB808439E515CF239B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='BNN Accuracy' datatype='real' name='[BNNAccuracy]' role='measure' type='quantitative' />
      <column caption='BNN Adversary Accuracy' datatype='real' name='[BNNAdversaryAccuracy]' role='measure' type='quantitative' />
      <column caption='BNN Adversary Avg Diff' datatype='real' name='[BNNAdversaryAvgDiff]' role='measure' type='quantitative' />
      <column caption='BNN Adversary Fairness Score' datatype='real' name='[BNNAdversaryFairnessScore]' role='measure' type='quantitative' />
      <column caption='BNN Adversary Max Difference' datatype='real' name='[BNNAdversaryMaxDifference]' role='measure' type='quantitative' />
      <column caption='BNN Adversary Min Difference' datatype='real' name='[BNNAdversaryMinDifference]' role='measure' type='quantitative' />
      <column caption='BNN Avg Diff' datatype='real' name='[BNNAvgDiff]' role='measure' type='quantitative' />
      <column caption='BNN Fair Training Accuracy' datatype='real' name='[BNNFairTrainingAccuracy]' role='measure' type='quantitative' />
      <column caption='BNN Fair Training Avg Diff' datatype='real' name='[BNNFairTrainingAvgDiff]' role='measure' type='quantitative' />
      <column caption='BNN Fair Training Fairness Score' datatype='real' name='[BNNFairTrainingFairnessScore]' role='measure' type='quantitative' />
      <column caption='BNN Fair Training Max Difference' datatype='real' name='[BNNFairTrainingMaxDifference]' role='measure' type='quantitative' />
      <column caption='BNN Fair Training Mean Entropy' datatype='real' name='[BNNFairTrainingMeanEntropy]' role='measure' type='quantitative' />
      <column caption='BNN Fair Training Min Difference' datatype='real' name='[BNNFairTrainingMinDifference]' role='measure' type='quantitative' />
      <column caption='BNN Fair Training Precision' datatype='real' name='[BNNFairTrainingPrecision]' role='measure' type='quantitative' />
      <column caption='BNN Fair Training Recall' datatype='real' name='[BNNFairTrainingRecall]' role='measure' type='quantitative' />
      <column caption='BNN Fair Training Time' datatype='real' name='[BNNFairTrainingTime]' role='measure' type='quantitative' />
      <column caption='BNN Fairness Score' datatype='real' name='[BNNFairnessScore]' role='measure' type='quantitative' />
      <column caption='BNN Max Difference' datatype='real' name='[BNNMaxDifference]' role='measure' type='quantitative' />
      <column caption='BNN Mean Entropy' datatype='real' name='[BNNMeanEntropy]' role='measure' type='quantitative' />
      <column caption='BNN Min Difference' datatype='real' name='[BNNMinDifference]' role='measure' type='quantitative' />
      <column caption='BNN Precision' datatype='real' name='[BNNPrecision]' role='measure' type='quantitative' />
      <column caption='BNN Recall' datatype='real' name='[BNNRecall]' role='measure' type='quantitative' />
      <column caption='BNN Time' datatype='real' name='[BNNTime]' role='measure' type='quantitative' />
      <column datatype='real' name='[Layer]' role='measure' type='quantitative' />
      <column datatype='real' name='[Neurons]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='mean_eps_0.05.csv' datatype='table' name='[__tableau_internal_object_id__].[mean_eps_0.05.csv_B2D0048C9F6D42AB808439E515CF239B]' role='measure' type='quantitative' />
      <column-instance column='[Layer]' derivation='None' name='[none:Layer:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Neurons]' derivation='None' name='[none:Neurons:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BNNAccuracy]' derivation='Sum' name='[sum:BNNAccuracy:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BNNAvgDiff]' derivation='Sum' name='[sum:BNNAvgDiff:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BNNFairTrainingAccuracy]' derivation='Sum' name='[sum:BNNFairTrainingAccuracy:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BNNFairTrainingAvgDiff]' derivation='Sum' name='[sum:BNNFairTrainingAvgDiff:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BNNFairTrainingFairnessScore]' derivation='Sum' name='[sum:BNNFairTrainingFairnessScore:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BNNFairTrainingMeanEntropy]' derivation='Sum' name='[sum:BNNFairTrainingMeanEntropy:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BNNFairTrainingPrecision]' derivation='Sum' name='[sum:BNNFairTrainingPrecision:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BNNFairTrainingRecall]' derivation='Sum' name='[sum:BNNFairTrainingRecall:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BNNFairTrainingTime]' derivation='Sum' name='[sum:BNNFairTrainingTime:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BNNFairnessScore]' derivation='Sum' name='[sum:BNNFairnessScore:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BNNMeanEntropy]' derivation='Sum' name='[sum:BNNMeanEntropy:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BNNPrecision]' derivation='Sum' name='[sum:BNNPrecision:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BNNRecall]' derivation='Sum' name='[sum:BNNRecall:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BNNTime]' derivation='Sum' name='[sum:BNNTime:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Layer]' derivation='Sum' name='[sum:Layer:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Neurons]' derivation='Sum' name='[sum:Neurons:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ueb61k1spooa01d6x9500ltbfbt].[none:Layer:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingAvgDiff:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingFairnessScore:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingTime:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:Layer:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNAccuracy:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingAccuracy:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNRecall:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingPrecision:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingRecall:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNPrecision:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNAvgDiff:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairnessScore:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingMeanEntropy:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNMeanEntropy:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ueb61k1spooa01d6x9500ltbfbt].[none:Neurons:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNTime:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:Neurons:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Ireland&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='mean_eps_0.05.csv' id='mean_eps_0.05.csv_B2D0048C9F6D42AB808439E515CF239B'>
            <properties context=''>
              <relation connection='textscan.1euq9jh1sapb6n17df38w1sieu31' name='mean_eps_0.05.csv' table='[mean_eps_0.05#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=' '>
                  <column datatype='string' name='F1' ordinal='0' />
                  <column datatype='real' name='Layer' ordinal='1' />
                  <column datatype='real' name='Neurons' ordinal='2' />
                  <column datatype='real' name='BNNAccuracy' ordinal='3' />
                  <column datatype='real' name='BNNFairTrainingAccuracy' ordinal='4' />
                  <column datatype='real' name='BNNMaxDifference' ordinal='5' />
                  <column datatype='real' name='BNNFairTrainingMaxDifference' ordinal='6' />
                  <column datatype='real' name='BNNMinDifference' ordinal='7' />
                  <column datatype='real' name='BNNFairTrainingMinDifference' ordinal='8' />
                  <column datatype='real' name='BNNFairnessScore' ordinal='9' />
                  <column datatype='real' name='BNNFairTrainingFairnessScore' ordinal='10' />
                  <column datatype='real' name='BNNAvgDiff' ordinal='11' />
                  <column datatype='real' name='BNNFairTrainingAvgDiff' ordinal='12' />
                  <column datatype='real' name='BNNRecall' ordinal='13' />
                  <column datatype='real' name='BNNFairTrainingRecall' ordinal='14' />
                  <column datatype='real' name='BNNPrecision' ordinal='15' />
                  <column datatype='real' name='BNNFairTrainingPrecision' ordinal='16' />
                  <column datatype='real' name='BNNMeanEntropy' ordinal='17' />
                  <column datatype='real' name='BNNFairTrainingMeanEntropy' ordinal='18' />
                  <column datatype='real' name='BNNTime' ordinal='19' />
                  <column datatype='real' name='BNNFairTrainingTime' ordinal='20' />
                  <column datatype='real' name='BNNAdversaryAccuracy' ordinal='21' />
                  <column datatype='real' name='BNNAdversaryMaxDifference' ordinal='22' />
                  <column datatype='real' name='BNNAdversaryMinDifference' ordinal='23' />
                  <column datatype='real' name='BNNAdversaryFairnessScore' ordinal='24' />
                  <column datatype='real' name='BNNAdversaryAvgDiff' ordinal='25' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Accuracy'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Accuracy for BNN and BNN with fair training, epsilon = 0.05

</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='mean_eps_0.05' name='federated.0ueb61k1spooa01d6x9500ltbfbt' />
          </datasources>
          <datasource-dependencies datasource='federated.0ueb61k1spooa01d6x9500ltbfbt'>
            <column caption='BNN Accuracy' datatype='real' name='[BNNAccuracy]' role='measure' type='quantitative' />
            <column caption='BNN Fair Training Accuracy' datatype='real' name='[BNNFairTrainingAccuracy]' role='measure' type='quantitative' />
            <column caption='BNN Fair Training Fairness Score' datatype='real' name='[BNNFairTrainingFairnessScore]' role='measure' type='quantitative' />
            <column caption='BNN Fairness Score' datatype='real' name='[BNNFairnessScore]' role='measure' type='quantitative' />
            <column datatype='real' name='[Layer]' role='measure' type='quantitative' />
            <column datatype='real' name='[Neurons]' role='measure' type='quantitative' />
            <column-instance column='[Layer]' derivation='None' name='[none:Layer:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Neurons]' derivation='None' name='[none:Neurons:ok]' pivot='key' type='ordinal' />
            <column-instance column='[BNNAccuracy]' derivation='Sum' name='[sum:BNNAccuracy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNFairTrainingAccuracy]' derivation='Sum' name='[sum:BNNFairTrainingAccuracy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNFairTrainingFairnessScore]' derivation='Sum' name='[sum:BNNFairTrainingFairnessScore:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNFairnessScore]' derivation='Sum' name='[sum:BNNFairnessScore:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairnessScore:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingFairnessScore:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNAccuracy:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingAccuracy:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairnessScore:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingFairnessScore:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingAccuracy:qk]' field-type='quantitative' max='1.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingAccuracy:qk]' scope='rows' value='BNN Fair Training ' />
            <format attr='title' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNAccuracy:qk]' scope='rows' value='BNN ' />
            <encoding attr='space' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNAccuracy:qk]' field-type='quantitative' max='1.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairnessScore:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingFairnessScore:qk]' scope='rows' value='' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='text-align' id='refline8' value='left' />
            <format attr='vertical-align' id='refline8' value='top' />
            <format attr='fill-above' id='refline8' value='#00000000' />
            <format attr='fill-below' id='refline8' value='#00000000' />
            <format attr='text-align' id='refline9' value='left' />
            <format attr='vertical-align' id='refline6' value='top' />
            <format attr='text-align' id='refline6' value='right' />
            <format attr='text-orientation' id='refline6' value='0' />
            <format attr='wrap' id='refline6' value='off' />
            <format attr='font-size' id='refline6' value='7' />
            <format attr='color' id='refline6' value='#555555a7' />
            <format attr='color' id='refline1' value='#555555a7' />
            <format attr='font-size' id='refline1' value='7' />
            <format attr='font-size' id='refline0' value='7' />
            <format attr='color' id='refline0' value='#555555a7' />
            <format attr='font-size' id='refline2' value='7' />
            <format attr='color' id='refline2' value='#555555a7' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='fill-color' id='refline3' value='#faf4e7' />
            <format attr='fill-color' id='refline0' value='#e8edda' />
            <format attr='fill-color' id='refline2' value='#e8edda' />
            <format attr='fill-color' id='refline1' value='#eff3e3' />
            <format attr='fill-color' id='refline6' value='#e9ebe0' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='cols' value='#e6e6e6' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNAccuracy:qk]' enable-instant-analytics='true' formula='min' id='refline0' label-type='value' paired-id='refline1' scope='per-pane' symmetric='false' value-column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNAccuracy:qk]' z-order='1' />
            <reference-line axis-column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNAccuracy:qk]' enable-instant-analytics='true' formula='max' id='refline1' label-type='value' paired-id='refline0' scope='per-pane' symmetric='false' value-column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNAccuracy:qk]' z-order='2' />
            <reference-line axis-column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingAccuracy:qk]' enable-instant-analytics='true' formula='min' id='refline2' label-type='value' paired-id='refline3' scope='per-pane' symmetric='false' value-column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingAccuracy:qk]' z-order='3' />
            <reference-line axis-column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingAccuracy:qk]' enable-instant-analytics='true' formula='max' id='refline3' label-type='value' paired-id='refline2' scope='per-pane' symmetric='false' value-column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingAccuracy:qk]' z-order='4' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNAccuracy:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairnessScore:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='dotted' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingAccuracy:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingFairnessScore:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='dotted' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNAccuracy:qk] + ([federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairnessScore:qk] + ([federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingAccuracy:qk] + [federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingFairnessScore:qk])))</rows>
        <cols>([federated.0ueb61k1spooa01d6x9500ltbfbt].[none:Layer:ok] / [federated.0ueb61k1spooa01d6x9500ltbfbt].[none:Neurons:ok])</cols>
      </table>
      <simple-id uuid='{0EC03B42-67A5-40BC-AB16-3451CADC2C81}' />
    </worksheet>
    <worksheet name='Average Difference'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average Difference in outputs of similar pairs for BNN and BNN with fair training, epsilon = 0.05
</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='mean_eps_0.05' name='federated.0ueb61k1spooa01d6x9500ltbfbt' />
          </datasources>
          <datasource-dependencies datasource='federated.0ueb61k1spooa01d6x9500ltbfbt'>
            <column caption='BNN Avg Diff' datatype='real' name='[BNNAvgDiff]' role='measure' type='quantitative' />
            <column caption='BNN Fair Training Avg Diff' datatype='real' name='[BNNFairTrainingAvgDiff]' role='measure' type='quantitative' />
            <column datatype='real' name='[Layer]' role='measure' type='quantitative' />
            <column datatype='real' name='[Neurons]' role='measure' type='quantitative' />
            <column-instance column='[Layer]' derivation='None' name='[none:Layer:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Neurons]' derivation='None' name='[none:Neurons:ok]' pivot='key' type='ordinal' />
            <column-instance column='[BNNAvgDiff]' derivation='Sum' name='[sum:BNNAvgDiff:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNFairTrainingAvgDiff]' derivation='Sum' name='[sum:BNNFairTrainingAvgDiff:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingAvgDiff:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNAvgDiff:qk]' field-type='quantitative' max='1.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNAvgDiff:qk]' scope='rows' value='Average Difference' />
            <format attr='title' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingAvgDiff:qk]' scope='rows' value='' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[none:Neurons:ok]' value='35' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-color' scope='cols' value='#e6e6e6' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNAvgDiff:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingAvgDiff:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNAvgDiff:qk] + [federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingAvgDiff:qk])</rows>
        <cols>([federated.0ueb61k1spooa01d6x9500ltbfbt].[none:Layer:ok] / [federated.0ueb61k1spooa01d6x9500ltbfbt].[none:Neurons:ok])</cols>
      </table>
      <simple-id uuid='{B833D03C-63FF-4AA8-88C5-BD3ED076A7B7}' />
    </worksheet>
    <worksheet name='Entropy'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Mean Predictive Entropy for BNN and BNN with fair training, epsilon = 0.05

</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='mean_eps_0.05' name='federated.0ueb61k1spooa01d6x9500ltbfbt' />
          </datasources>
          <datasource-dependencies datasource='federated.0ueb61k1spooa01d6x9500ltbfbt'>
            <column caption='BNN Accuracy' datatype='real' name='[BNNAccuracy]' role='measure' type='quantitative' />
            <column caption='BNN Fair Training Accuracy' datatype='real' name='[BNNFairTrainingAccuracy]' role='measure' type='quantitative' />
            <column caption='BNN Fair Training Fairness Score' datatype='real' name='[BNNFairTrainingFairnessScore]' role='measure' type='quantitative' />
            <column caption='BNN Fair Training Mean Entropy' datatype='real' name='[BNNFairTrainingMeanEntropy]' role='measure' type='quantitative' />
            <column caption='BNN Fairness Score' datatype='real' name='[BNNFairnessScore]' role='measure' type='quantitative' />
            <column caption='BNN Mean Entropy' datatype='real' name='[BNNMeanEntropy]' role='measure' type='quantitative' />
            <column datatype='real' name='[Layer]' role='measure' type='quantitative' />
            <column datatype='real' name='[Neurons]' role='measure' type='quantitative' />
            <column-instance column='[Layer]' derivation='None' name='[none:Layer:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Neurons]' derivation='None' name='[none:Neurons:ok]' pivot='key' type='ordinal' />
            <column-instance column='[BNNAccuracy]' derivation='Sum' name='[sum:BNNAccuracy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNFairTrainingAccuracy]' derivation='Sum' name='[sum:BNNFairTrainingAccuracy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNFairTrainingFairnessScore]' derivation='Sum' name='[sum:BNNFairTrainingFairnessScore:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNFairTrainingMeanEntropy]' derivation='Sum' name='[sum:BNNFairTrainingMeanEntropy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNFairnessScore]' derivation='Sum' name='[sum:BNNFairnessScore:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNMeanEntropy]' derivation='Sum' name='[sum:BNNMeanEntropy:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairnessScore:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingFairnessScore:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNAccuracy:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingAccuracy:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairnessScore:qk]' field-type='quantitative' max='1.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingFairnessScore:qk]' field-type='quantitative' max='1.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairnessScore:qk]' scope='rows' value='BNN' />
            <format attr='title' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingFairnessScore:qk]' scope='rows' value='BNN Fairness Training' />
            <encoding attr='space' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNMeanEntropy:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingMeanEntropy:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNMeanEntropy:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingMeanEntropy:qk]' scope='rows' value='' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='font-size' id='refline0' value='8' />
            <format attr='font-size' id='refline2' value='8' />
            <format attr='color' id='refline4' value='#555555a7' />
            <format attr='font-size' id='refline4' value='7' />
            <format attr='color' id='refline6' value='#555555a7' />
            <format attr='font-size' id='refline6' value='7' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='fill-color' id='refline3' value='#faf4e7' />
            <format attr='fill-color' id='refline0' value='#faf4e7' />
            <format attr='fill-color' id='refline2' value='#faf4e7' />
            <format attr='fill-color' id='refline4' value='#faf4e7' />
            <format attr='fill-color' id='refline6' value='#faf4e7' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='cols' value='#e6e6e6' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNMeanEntropy:qk]' enable-instant-analytics='true' formula='min' id='refline4' label-type='value' paired-id='refline5' scope='per-pane' symmetric='false' value-column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNMeanEntropy:qk]' z-order='5' />
            <reference-line axis-column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNMeanEntropy:qk]' enable-instant-analytics='true' formula='max' id='refline5' label-type='value' paired-id='refline4' scope='per-pane' symmetric='false' value-column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNMeanEntropy:qk]' z-order='6' />
            <reference-line axis-column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingMeanEntropy:qk]' enable-instant-analytics='true' formula='min' id='refline6' label-type='value' paired-id='refline7' scope='per-pane' symmetric='false' value-column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingMeanEntropy:qk]' z-order='7' />
            <reference-line axis-column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingMeanEntropy:qk]' enable-instant-analytics='true' formula='max' id='refline7' label-type='value' paired-id='refline6' scope='per-pane' symmetric='false' value-column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingMeanEntropy:qk]' z-order='8' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairnessScore:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='dotted' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingFairnessScore:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='dotted' />
              </style-rule>
            </style>
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNMeanEntropy:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingMeanEntropy:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairnessScore:qk] + ([federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNMeanEntropy:qk] + ([federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingFairnessScore:qk] + [federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingMeanEntropy:qk])))</rows>
        <cols>([federated.0ueb61k1spooa01d6x9500ltbfbt].[none:Layer:ok] / [federated.0ueb61k1spooa01d6x9500ltbfbt].[none:Neurons:ok])</cols>
      </table>
      <simple-id uuid='{6A51F461-38D3-4CAD-8D3A-136FAB6416DE}' />
    </worksheet>
    <worksheet name='Precision'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Precision for BNN and BNN with fair training, epsilon = 0.05

</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='mean_eps_0.05' name='federated.0ueb61k1spooa01d6x9500ltbfbt' />
          </datasources>
          <datasource-dependencies datasource='federated.0ueb61k1spooa01d6x9500ltbfbt'>
            <column caption='BNN Accuracy' datatype='real' name='[BNNAccuracy]' role='measure' type='quantitative' />
            <column caption='BNN Fair Training Accuracy' datatype='real' name='[BNNFairTrainingAccuracy]' role='measure' type='quantitative' />
            <column caption='BNN Fair Training Fairness Score' datatype='real' name='[BNNFairTrainingFairnessScore]' role='measure' type='quantitative' />
            <column caption='BNN Fair Training Precision' datatype='real' name='[BNNFairTrainingPrecision]' role='measure' type='quantitative' />
            <column caption='BNN Fairness Score' datatype='real' name='[BNNFairnessScore]' role='measure' type='quantitative' />
            <column caption='BNN Precision' datatype='real' name='[BNNPrecision]' role='measure' type='quantitative' />
            <column datatype='real' name='[Layer]' role='measure' type='quantitative' />
            <column datatype='real' name='[Neurons]' role='measure' type='quantitative' />
            <column-instance column='[Layer]' derivation='None' name='[none:Layer:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Neurons]' derivation='None' name='[none:Neurons:ok]' pivot='key' type='ordinal' />
            <column-instance column='[BNNAccuracy]' derivation='Sum' name='[sum:BNNAccuracy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNFairTrainingAccuracy]' derivation='Sum' name='[sum:BNNFairTrainingAccuracy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNFairTrainingFairnessScore]' derivation='Sum' name='[sum:BNNFairTrainingFairnessScore:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNFairTrainingPrecision]' derivation='Sum' name='[sum:BNNFairTrainingPrecision:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNFairnessScore]' derivation='Sum' name='[sum:BNNFairnessScore:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNPrecision]' derivation='Sum' name='[sum:BNNPrecision:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairnessScore:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingFairnessScore:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNAccuracy:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingAccuracy:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairnessScore:qk]' field-type='quantitative' max='1.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairnessScore:qk]' scope='rows' value='BNN' />
            <format attr='title' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingFairnessScore:qk]' scope='rows' value='BNN Fair Training' />
            <encoding attr='space' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNPrecision:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNPrecision:qk]' scope='rows' value='' />
            <encoding attr='space' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingPrecision:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingPrecision:qk]' scope='rows' value='' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='text-align' id='refline8' value='left' />
            <format attr='vertical-align' id='refline8' value='top' />
            <format attr='fill-above' id='refline8' value='#00000000' />
            <format attr='fill-below' id='refline8' value='#00000000' />
            <format attr='text-align' id='refline9' value='left' />
            <format attr='vertical-align' id='refline6' value='top' />
            <format attr='text-align' id='refline6' value='right' />
            <format attr='text-orientation' id='refline6' value='0' />
            <format attr='wrap' id='refline6' value='off' />
            <format attr='font-size' id='refline6' value='7' />
            <format attr='color' id='refline6' value='#555555a7' />
            <format attr='color' id='refline1' value='#555555a7' />
            <format attr='font-size' id='refline1' value='7' />
            <format attr='font-size' id='refline0' value='7' />
            <format attr='color' id='refline0' value='#555555a7' />
            <format attr='font-size' id='refline2' value='7' />
            <format attr='color' id='refline2' value='#555555a7' />
            <format attr='font-size' id='refline4' value='7' />
            <format attr='color' id='refline4' value='#555555a7' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='fill-color' id='refline3' value='#faf4e7' />
            <format attr='fill-color' id='refline0' value='#e8edda' />
            <format attr='fill-color' id='refline2' value='#e8edda' />
            <format attr='fill-color' id='refline1' value='#eff3e3' />
            <format attr='fill-color' id='refline6' value='#dfedeb' />
            <format attr='fill-color' id='refline4' value='#e8edda' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='cols' value='#e6e6e6' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairnessScore:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='dotted' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingFairnessScore:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='dotted' />
              </style-rule>
            </style>
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNPrecision:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingPrecision:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairnessScore:qk] + ([federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNPrecision:qk] + ([federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingFairnessScore:qk] + [federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingPrecision:qk])))</rows>
        <cols>([federated.0ueb61k1spooa01d6x9500ltbfbt].[none:Layer:ok] / [federated.0ueb61k1spooa01d6x9500ltbfbt].[none:Neurons:ok])</cols>
      </table>
      <simple-id uuid='{52E2A9F0-6202-489F-AD2C-9C3867EBB87D}' />
    </worksheet>
    <worksheet name='Recall'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Recall for BNN and BNN with fair training, epsilon = 0.05

</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='mean_eps_0.05' name='federated.0ueb61k1spooa01d6x9500ltbfbt' />
          </datasources>
          <datasource-dependencies datasource='federated.0ueb61k1spooa01d6x9500ltbfbt'>
            <column caption='BNN Accuracy' datatype='real' name='[BNNAccuracy]' role='measure' type='quantitative' />
            <column caption='BNN Fair Training Accuracy' datatype='real' name='[BNNFairTrainingAccuracy]' role='measure' type='quantitative' />
            <column caption='BNN Fair Training Fairness Score' datatype='real' name='[BNNFairTrainingFairnessScore]' role='measure' type='quantitative' />
            <column caption='BNN Fair Training Recall' datatype='real' name='[BNNFairTrainingRecall]' role='measure' type='quantitative' />
            <column caption='BNN Fairness Score' datatype='real' name='[BNNFairnessScore]' role='measure' type='quantitative' />
            <column caption='BNN Recall' datatype='real' name='[BNNRecall]' role='measure' type='quantitative' />
            <column datatype='real' name='[Layer]' role='measure' type='quantitative' />
            <column datatype='real' name='[Neurons]' role='measure' type='quantitative' />
            <column-instance column='[Layer]' derivation='None' name='[none:Layer:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Neurons]' derivation='None' name='[none:Neurons:ok]' pivot='key' type='ordinal' />
            <column-instance column='[BNNAccuracy]' derivation='Sum' name='[sum:BNNAccuracy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNFairTrainingAccuracy]' derivation='Sum' name='[sum:BNNFairTrainingAccuracy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNFairTrainingFairnessScore]' derivation='Sum' name='[sum:BNNFairTrainingFairnessScore:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNFairTrainingRecall]' derivation='Sum' name='[sum:BNNFairTrainingRecall:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNFairnessScore]' derivation='Sum' name='[sum:BNNFairnessScore:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNRecall]' derivation='Sum' name='[sum:BNNRecall:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairnessScore:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingFairnessScore:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNAccuracy:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingAccuracy:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairnessScore:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingFairnessScore:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairnessScore:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingFairnessScore:qk]' scope='rows' value='' />
            <encoding attr='space' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNRecall:qk]' field-type='quantitative' max='1.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingRecall:qk]' field-type='quantitative' max='1.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNRecall:qk]' scope='rows' value='BNN ' />
            <format attr='title' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingRecall:qk]' scope='rows' value='BNN Fair Training ' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='text-align' id='refline8' value='left' />
            <format attr='vertical-align' id='refline8' value='top' />
            <format attr='fill-above' id='refline8' value='#00000000' />
            <format attr='fill-below' id='refline8' value='#00000000' />
            <format attr='text-align' id='refline9' value='left' />
            <format attr='vertical-align' id='refline6' value='top' />
            <format attr='text-align' id='refline6' value='right' />
            <format attr='text-orientation' id='refline6' value='0' />
            <format attr='wrap' id='refline6' value='off' />
            <format attr='font-size' id='refline6' value='7' />
            <format attr='color' id='refline6' value='#555555a7' />
            <format attr='color' id='refline1' value='#555555a7' />
            <format attr='font-size' id='refline1' value='7' />
            <format attr='font-size' id='refline0' value='7' />
            <format attr='color' id='refline0' value='#555555a7' />
            <format attr='font-size' id='refline2' value='7' />
            <format attr='color' id='refline2' value='#555555a7' />
            <format attr='font-size' id='refline4' value='7' />
            <format attr='color' id='refline4' value='#555555a7' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='fill-color' id='refline3' value='#faf4e7' />
            <format attr='fill-color' id='refline0' value='#e8edda' />
            <format attr='fill-color' id='refline2' value='#e8edda' />
            <format attr='fill-color' id='refline1' value='#eff3e3' />
            <format attr='fill-color' id='refline6' value='#dfedeb' />
            <format attr='fill-color' id='refline4' value='#e8edda' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='cols' value='#e6e6e6' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNRecall:qk]' enable-instant-analytics='true' formula='min' id='refline4' label-type='value' paired-id='refline5' scope='per-pane' symmetric='false' value-column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNRecall:qk]' z-order='5' />
            <reference-line axis-column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNRecall:qk]' enable-instant-analytics='true' formula='max' id='refline5' label-type='value' paired-id='refline4' scope='per-pane' symmetric='false' value-column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNRecall:qk]' z-order='6' />
            <reference-line axis-column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingRecall:qk]' enable-instant-analytics='true' formula='min' id='refline6' label-type='value' paired-id='refline7' scope='per-pane' symmetric='false' value-column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingRecall:qk]' z-order='7' />
            <reference-line axis-column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingRecall:qk]' enable-instant-analytics='true' formula='max' id='refline7' label-type='value' paired-id='refline6' scope='per-pane' symmetric='false' value-column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingRecall:qk]' z-order='8' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairnessScore:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='dotted' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingFairnessScore:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='dotted' />
              </style-rule>
            </style>
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNRecall:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingRecall:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNRecall:qk] + ([federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairnessScore:qk] + ([federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingRecall:qk] + [federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingFairnessScore:qk])))</rows>
        <cols>([federated.0ueb61k1spooa01d6x9500ltbfbt].[none:Layer:ok] / [federated.0ueb61k1spooa01d6x9500ltbfbt].[none:Neurons:ok])</cols>
      </table>
      <simple-id uuid='{75FE592E-C5FA-40F0-86B3-7CCB4002089F}' />
    </worksheet>
    <worksheet name='Threshold-Fairness'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Threshold-Fairness Score for BNN and BNN with fair training, epsilon = 0.05
</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='mean_eps_0.05' name='federated.0ueb61k1spooa01d6x9500ltbfbt' />
          </datasources>
          <datasource-dependencies datasource='federated.0ueb61k1spooa01d6x9500ltbfbt'>
            <column caption='BNN Fair Training Fairness Score' datatype='real' name='[BNNFairTrainingFairnessScore]' role='measure' type='quantitative' />
            <column caption='BNN Fairness Score' datatype='real' name='[BNNFairnessScore]' role='measure' type='quantitative' />
            <column datatype='real' name='[Layer]' role='measure' type='quantitative' />
            <column datatype='real' name='[Neurons]' role='measure' type='quantitative' />
            <column-instance column='[Layer]' derivation='None' name='[none:Layer:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Neurons]' derivation='None' name='[none:Neurons:ok]' pivot='key' type='ordinal' />
            <column-instance column='[BNNFairTrainingFairnessScore]' derivation='Sum' name='[sum:BNNFairTrainingFairnessScore:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNFairnessScore]' derivation='Sum' name='[sum:BNNFairnessScore:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingFairnessScore:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairnessScore:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingFairnessScore:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairnessScore:qk]' field-type='quantitative' max='1.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairnessScore:qk]' scope='rows' value='Fairness Score' />
            <format attr='title' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingFairnessScore:qk]' scope='rows' value='' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-color' scope='cols' value='#b07aa1' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='font-size' id='refline1' value='7' />
            <format attr='color' id='refline1' value='#4e79a7' />
            <format attr='stroke-color' id='refline1' value='#4e79a74b' />
            <format attr='stroke-color' id='refline0' value='#e157594b' />
            <format attr='color' id='refline0' value='#e15759' />
            <format attr='font-size' id='refline0' value='7' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='cols' value='#e6e6e6' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-color' scope='cols' value='#c0c0c0' />
          </style-rule>
        </style>
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairnessScore:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='value' probability='95' scope='per-pane' value-column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairnessScore:qk]' z-order='1' />
            <reference-line axis-column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingFairnessScore:qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='value' probability='95' scope='per-pane' value-column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingFairnessScore:qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairnessScore:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingFairnessScore:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairnessScore:qk] + [federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingFairnessScore:qk])</rows>
        <cols>([federated.0ueb61k1spooa01d6x9500ltbfbt].[none:Layer:ok] / [federated.0ueb61k1spooa01d6x9500ltbfbt].[none:Neurons:ok])</cols>
      </table>
      <simple-id uuid='{73365519-9F4F-48B7-973D-31E326DA7F22}' />
    </worksheet>
    <worksheet name='Time'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Training Time for BNN and BNN with fair training, epsilon = 0.05
</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='mean_eps_0.05' name='federated.0ueb61k1spooa01d6x9500ltbfbt' />
          </datasources>
          <datasource-dependencies datasource='federated.0ueb61k1spooa01d6x9500ltbfbt'>
            <column caption='BNN Fair Training Time' datatype='real' name='[BNNFairTrainingTime]' role='measure' type='quantitative' />
            <column caption='BNN Time' datatype='real' name='[BNNTime]' role='measure' type='quantitative' />
            <column datatype='real' name='[Layer]' role='measure' type='quantitative' />
            <column datatype='real' name='[Neurons]' role='measure' type='quantitative' />
            <column-instance column='[Layer]' derivation='None' name='[none:Layer:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Neurons]' derivation='None' name='[none:Neurons:ok]' pivot='key' type='ordinal' />
            <column-instance column='[BNNFairTrainingTime]' derivation='Sum' name='[sum:BNNFairTrainingTime:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNTime]' derivation='Sum' name='[sum:BNNTime:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingTime:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNTime:qk]' field-type='quantitative' max='700.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNTime:qk]' scope='rows' value='Time (s)' />
            <format attr='title' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingTime:qk]' scope='rows' value='' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='cols' value='#e6e6e6' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNTime:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingTime:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNTime:qk] + [federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingTime:qk])</rows>
        <cols>([federated.0ueb61k1spooa01d6x9500ltbfbt].[none:Layer:ok] / [federated.0ueb61k1spooa01d6x9500ltbfbt].[none:Neurons:ok])</cols>
      </table>
      <simple-id uuid='{32398DC4-DAC1-4254-B081-E19D857FAE41}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' name='Time'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card pane-specification-id='3' param='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{89070FE2-A829-47C3-A169-2CF4CDF70D41}' />
    </window>
    <window class='worksheet' name='Threshold-Fairness'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='6' param='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ueb61k1spooa01d6x9500ltbfbt].[none:Layer:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{49E3EB53-7CD1-4E8C-916C-FF0DA072862A}' />
    </window>
    <window class='worksheet' name='Accuracy'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{6488FF7D-0F02-4C9D-911F-12A425A57517}' />
    </window>
    <window class='worksheet' name='Entropy'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{F6DB1A4C-D477-409B-8AC2-7F5384C605ED}' />
    </window>
    <window class='worksheet' name='Recall'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='7' param='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{13699691-EF41-4B60-8E6B-C5E585A2E13C}' />
    </window>
    <window class='worksheet' name='Precision'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{091B047C-01D0-414D-B8AC-C7AD14F37DBC}' />
    </window>
    <window class='worksheet' maximized='true' name='Average Difference'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{A8830486-7EB7-4143-89E2-97C36D0E2211}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Accuracy' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Average Difference' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Entropy' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Precision' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Recall' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Threshold-Fairness' width='192'>
      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
      S4Apig4Jd+IAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Time' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
