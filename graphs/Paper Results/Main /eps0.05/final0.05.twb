<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20233.23.1017.0948                               -->
<workbook original-version='18.1' source-build='2023.3.0 (20233.23.1017.0948)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.PatternedLineMarks.true...PatternedLineMarks />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='mean_eps_0.05' inline='true' name='federated.0ueb61k1spooa01d6x9500ltbfbt' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='mean_eps_0.05' name='textscan.1euq9jh1sapb6n17df38w1sieu31'>
            <connection class='textscan' directory='C:/Users/theos/OneDrive/Desktop/College/5th year/Thesis/Results/Fairness Regularisation/Charts/eps0.05/Regularisation_plots_0.05' filename='mean_eps_0.05.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1euq9jh1sapb6n17df38w1sieu31' name='mean_eps_0.05.csv' table='[mean_eps_0.05#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=' '>
            <column datatype='string' name='F1' ordinal='0' />
            <column datatype='real' name='Layer' ordinal='1' />
            <column datatype='real' name='Neurons' ordinal='2' />
            <column datatype='real' name='BNNAccuracy' ordinal='3' />
            <column datatype='real' name='BNNFairTrainingAccuracy' ordinal='4' />
            <column datatype='real' name='BNNMaxDifference' ordinal='5' />
            <column datatype='real' name='BNNFairTrainingMaxDifference' ordinal='6' />
            <column datatype='real' name='BNNMinDifference' ordinal='7' />
            <column datatype='real' name='BNNFairTrainingMinDifference' ordinal='8' />
            <column datatype='real' name='BNNFairnessScore' ordinal='9' />
            <column datatype='real' name='BNNFairTrainingFairnessScore' ordinal='10' />
            <column datatype='real' name='BNNAvgDiff' ordinal='11' />
            <column datatype='real' name='BNNFairTrainingAvgDiff' ordinal='12' />
            <column datatype='real' name='BNNRecall' ordinal='13' />
            <column datatype='real' name='BNNFairTrainingRecall' ordinal='14' />
            <column datatype='real' name='BNNPrecision' ordinal='15' />
            <column datatype='real' name='BNNFairTrainingPrecision' ordinal='16' />
            <column datatype='real' name='BNNMeanEntropy' ordinal='17' />
            <column datatype='real' name='BNNFairTrainingMeanEntropy' ordinal='18' />
            <column datatype='real' name='BNNTime' ordinal='19' />
            <column datatype='real' name='BNNFairTrainingTime' ordinal='20' />
            <column datatype='real' name='BNNAdversaryAccuracy' ordinal='21' />
            <column datatype='real' name='BNNAdversaryMaxDifference' ordinal='22' />
            <column datatype='real' name='BNNAdversaryMinDifference' ordinal='23' />
            <column datatype='real' name='BNNAdversaryFairnessScore' ordinal='24' />
            <column datatype='real' name='BNNAdversaryAvgDiff' ordinal='25' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1euq9jh1sapb6n17df38w1sieu31' name='mean_eps_0.05.csv' table='[mean_eps_0.05#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=' '>
            <column datatype='string' name='F1' ordinal='0' />
            <column datatype='real' name='Layer' ordinal='1' />
            <column datatype='real' name='Neurons' ordinal='2' />
            <column datatype='real' name='BNNAccuracy' ordinal='3' />
            <column datatype='real' name='BNNFairTrainingAccuracy' ordinal='4' />
            <column datatype='real' name='BNNMaxDifference' ordinal='5' />
            <column datatype='real' name='BNNFairTrainingMaxDifference' ordinal='6' />
            <column datatype='real' name='BNNMinDifference' ordinal='7' />
            <column datatype='real' name='BNNFairTrainingMinDifference' ordinal='8' />
            <column datatype='real' name='BNNFairnessScore' ordinal='9' />
            <column datatype='real' name='BNNFairTrainingFairnessScore' ordinal='10' />
            <column datatype='real' name='BNNAvgDiff' ordinal='11' />
            <column datatype='real' name='BNNFairTrainingAvgDiff' ordinal='12' />
            <column datatype='real' name='BNNRecall' ordinal='13' />
            <column datatype='real' name='BNNFairTrainingRecall' ordinal='14' />
            <column datatype='real' name='BNNPrecision' ordinal='15' />
            <column datatype='real' name='BNNFairTrainingPrecision' ordinal='16' />
            <column datatype='real' name='BNNMeanEntropy' ordinal='17' />
            <column datatype='real' name='BNNFairTrainingMeanEntropy' ordinal='18' />
            <column datatype='real' name='BNNTime' ordinal='19' />
            <column datatype='real' name='BNNFairTrainingTime' ordinal='20' />
            <column datatype='real' name='BNNAdversaryAccuracy' ordinal='21' />
            <column datatype='real' name='BNNAdversaryMaxDifference' ordinal='22' />
            <column datatype='real' name='BNNAdversaryMinDifference' ordinal='23' />
            <column datatype='real' name='BNNAdversaryFairnessScore' ordinal='24' />
            <column datatype='real' name='BNNAdversaryAvgDiff' ordinal='25' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[mean_eps_0.05.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot; &quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[mean_eps_0.05.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.05.csv_B2D0048C9F6D42AB808439E515CF239B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Layer</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Layer]</local-name>
            <parent-name>[mean_eps_0.05.csv]</parent-name>
            <remote-alias>Layer</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.05.csv_B2D0048C9F6D42AB808439E515CF239B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Neurons</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Neurons]</local-name>
            <parent-name>[mean_eps_0.05.csv]</parent-name>
            <remote-alias>Neurons</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.05.csv_B2D0048C9F6D42AB808439E515CF239B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNAccuracy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNAccuracy]</local-name>
            <parent-name>[mean_eps_0.05.csv]</parent-name>
            <remote-alias>BNNAccuracy</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.05.csv_B2D0048C9F6D42AB808439E515CF239B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNFairTrainingAccuracy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNFairTrainingAccuracy]</local-name>
            <parent-name>[mean_eps_0.05.csv]</parent-name>
            <remote-alias>BNNFairTrainingAccuracy</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.05.csv_B2D0048C9F6D42AB808439E515CF239B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNMaxDifference</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNMaxDifference]</local-name>
            <parent-name>[mean_eps_0.05.csv]</parent-name>
            <remote-alias>BNNMaxDifference</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.05.csv_B2D0048C9F6D42AB808439E515CF239B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNFairTrainingMaxDifference</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNFairTrainingMaxDifference]</local-name>
            <parent-name>[mean_eps_0.05.csv]</parent-name>
            <remote-alias>BNNFairTrainingMaxDifference</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.05.csv_B2D0048C9F6D42AB808439E515CF239B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNMinDifference</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNMinDifference]</local-name>
            <parent-name>[mean_eps_0.05.csv]</parent-name>
            <remote-alias>BNNMinDifference</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.05.csv_B2D0048C9F6D42AB808439E515CF239B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNFairTrainingMinDifference</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNFairTrainingMinDifference]</local-name>
            <parent-name>[mean_eps_0.05.csv]</parent-name>
            <remote-alias>BNNFairTrainingMinDifference</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.05.csv_B2D0048C9F6D42AB808439E515CF239B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNFairnessScore</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNFairnessScore]</local-name>
            <parent-name>[mean_eps_0.05.csv]</parent-name>
            <remote-alias>BNNFairnessScore</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.05.csv_B2D0048C9F6D42AB808439E515CF239B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNFairTrainingFairnessScore</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNFairTrainingFairnessScore]</local-name>
            <parent-name>[mean_eps_0.05.csv]</parent-name>
            <remote-alias>BNNFairTrainingFairnessScore</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.05.csv_B2D0048C9F6D42AB808439E515CF239B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNAvgDiff</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNAvgDiff]</local-name>
            <parent-name>[mean_eps_0.05.csv]</parent-name>
            <remote-alias>BNNAvgDiff</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.05.csv_B2D0048C9F6D42AB808439E515CF239B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNFairTrainingAvgDiff</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNFairTrainingAvgDiff]</local-name>
            <parent-name>[mean_eps_0.05.csv]</parent-name>
            <remote-alias>BNNFairTrainingAvgDiff</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.05.csv_B2D0048C9F6D42AB808439E515CF239B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNRecall</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNRecall]</local-name>
            <parent-name>[mean_eps_0.05.csv]</parent-name>
            <remote-alias>BNNRecall</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.05.csv_B2D0048C9F6D42AB808439E515CF239B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNFairTrainingRecall</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNFairTrainingRecall]</local-name>
            <parent-name>[mean_eps_0.05.csv]</parent-name>
            <remote-alias>BNNFairTrainingRecall</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.05.csv_B2D0048C9F6D42AB808439E515CF239B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNPrecision</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNPrecision]</local-name>
            <parent-name>[mean_eps_0.05.csv]</parent-name>
            <remote-alias>BNNPrecision</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.05.csv_B2D0048C9F6D42AB808439E515CF239B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNFairTrainingPrecision</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNFairTrainingPrecision]</local-name>
            <parent-name>[mean_eps_0.05.csv]</parent-name>
            <remote-alias>BNNFairTrainingPrecision</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.05.csv_B2D0048C9F6D42AB808439E515CF239B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNMeanEntropy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNMeanEntropy]</local-name>
            <parent-name>[mean_eps_0.05.csv]</parent-name>
            <remote-alias>BNNMeanEntropy</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.05.csv_B2D0048C9F6D42AB808439E515CF239B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNFairTrainingMeanEntropy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNFairTrainingMeanEntropy]</local-name>
            <parent-name>[mean_eps_0.05.csv]</parent-name>
            <remote-alias>BNNFairTrainingMeanEntropy</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.05.csv_B2D0048C9F6D42AB808439E515CF239B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNTime</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNTime]</local-name>
            <parent-name>[mean_eps_0.05.csv]</parent-name>
            <remote-alias>BNNTime</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.05.csv_B2D0048C9F6D42AB808439E515CF239B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNFairTrainingTime</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNFairTrainingTime]</local-name>
            <parent-name>[mean_eps_0.05.csv]</parent-name>
            <remote-alias>BNNFairTrainingTime</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.05.csv_B2D0048C9F6D42AB808439E515CF239B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNAdversaryAccuracy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNAdversaryAccuracy]</local-name>
            <parent-name>[mean_eps_0.05.csv]</parent-name>
            <remote-alias>BNNAdversaryAccuracy</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.05.csv_B2D0048C9F6D42AB808439E515CF239B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNAdversaryMaxDifference</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNAdversaryMaxDifference]</local-name>
            <parent-name>[mean_eps_0.05.csv]</parent-name>
            <remote-alias>BNNAdversaryMaxDifference</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.05.csv_B2D0048C9F6D42AB808439E515CF239B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNAdversaryMinDifference</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNAdversaryMinDifference]</local-name>
            <parent-name>[mean_eps_0.05.csv]</parent-name>
            <remote-alias>BNNAdversaryMinDifference</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.05.csv_B2D0048C9F6D42AB808439E515CF239B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNAdversaryFairnessScore</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNAdversaryFairnessScore]</local-name>
            <parent-name>[mean_eps_0.05.csv]</parent-name>
            <remote-alias>BNNAdversaryFairnessScore</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.05.csv_B2D0048C9F6D42AB808439E515CF239B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNAdversaryAvgDiff</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNAdversaryAvgDiff]</local-name>
            <parent-name>[mean_eps_0.05.csv]</parent-name>
            <remote-alias>BNNAdversaryAvgDiff</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.05.csv_B2D0048C9F6D42AB808439E515CF239B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='BNN Accuracy' datatype='real' name='[BNNAccuracy]' role='measure' type='quantitative' />
      <column caption='BNN Adversary Accuracy' datatype='real' name='[BNNAdversaryAccuracy]' role='measure' type='quantitative' />
      <column caption='BNN Adversary Avg Diff' datatype='real' name='[BNNAdversaryAvgDiff]' role='measure' type='quantitative' />
      <column caption='BNN Adversary Fairness Score' datatype='real' name='[BNNAdversaryFairnessScore]' role='measure' type='quantitative' />
      <column caption='BNN Adversary Max Difference' datatype='real' name='[BNNAdversaryMaxDifference]' role='measure' type='quantitative' />
      <column caption='BNN Adversary Min Difference' datatype='real' name='[BNNAdversaryMinDifference]' role='measure' type='quantitative' />
      <column caption='BNN Avg Diff' datatype='real' name='[BNNAvgDiff]' role='measure' type='quantitative' />
      <column caption='BNN Fair Training Accuracy' datatype='real' name='[BNNFairTrainingAccuracy]' role='measure' type='quantitative' />
      <column caption='BNN Fair Training Avg Diff' datatype='real' name='[BNNFairTrainingAvgDiff]' role='measure' type='quantitative' />
      <column caption='BNN Fair Training Fairness Score' datatype='real' name='[BNNFairTrainingFairnessScore]' role='measure' type='quantitative' />
      <column caption='BNN Fair Training Max Difference' datatype='real' name='[BNNFairTrainingMaxDifference]' role='measure' type='quantitative' />
      <column caption='BNN Fair Training Mean Entropy' datatype='real' name='[BNNFairTrainingMeanEntropy]' role='measure' type='quantitative' />
      <column caption='BNN Fair Training Min Difference' datatype='real' name='[BNNFairTrainingMinDifference]' role='measure' type='quantitative' />
      <column caption='BNN Fair Training Precision' datatype='real' name='[BNNFairTrainingPrecision]' role='measure' type='quantitative' />
      <column caption='BNN Fair Training Recall' datatype='real' name='[BNNFairTrainingRecall]' role='measure' type='quantitative' />
      <column caption='BNN Fair Training Time' datatype='real' name='[BNNFairTrainingTime]' role='measure' type='quantitative' />
      <column caption='BNN Fairness Score' datatype='real' name='[BNNFairnessScore]' role='measure' type='quantitative' />
      <column caption='BNN Max Difference' datatype='real' name='[BNNMaxDifference]' role='measure' type='quantitative' />
      <column caption='BNN Mean Entropy' datatype='real' name='[BNNMeanEntropy]' role='measure' type='quantitative' />
      <column caption='BNN Min Difference' datatype='real' name='[BNNMinDifference]' role='measure' type='quantitative' />
      <column caption='BNN Precision' datatype='real' name='[BNNPrecision]' role='measure' type='quantitative' />
      <column caption='BNN Recall' datatype='real' name='[BNNRecall]' role='measure' type='quantitative' />
      <column caption='BNN Time' datatype='real' name='[BNNTime]' role='measure' type='quantitative' />
      <column datatype='real' name='[Layer]' role='measure' type='quantitative' />
      <column datatype='real' name='[Neurons]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='mean_eps_0.05.csv' datatype='table' name='[__tableau_internal_object_id__].[mean_eps_0.05.csv_B2D0048C9F6D42AB808439E515CF239B]' role='measure' type='quantitative' />
      <column-instance column='[Layer]' derivation='None' name='[none:Layer:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Neurons]' derivation='None' name='[none:Neurons:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BNNAccuracy]' derivation='Sum' name='[sum:BNNAccuracy:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BNNAvgDiff]' derivation='Sum' name='[sum:BNNAvgDiff:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BNNFairTrainingAccuracy]' derivation='Sum' name='[sum:BNNFairTrainingAccuracy:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BNNFairTrainingAvgDiff]' derivation='Sum' name='[sum:BNNFairTrainingAvgDiff:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BNNFairTrainingFairnessScore]' derivation='Sum' name='[sum:BNNFairTrainingFairnessScore:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BNNFairTrainingMeanEntropy]' derivation='Sum' name='[sum:BNNFairTrainingMeanEntropy:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BNNFairTrainingPrecision]' derivation='Sum' name='[sum:BNNFairTrainingPrecision:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BNNFairTrainingRecall]' derivation='Sum' name='[sum:BNNFairTrainingRecall:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BNNFairTrainingTime]' derivation='Sum' name='[sum:BNNFairTrainingTime:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BNNFairnessScore]' derivation='Sum' name='[sum:BNNFairnessScore:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BNNMeanEntropy]' derivation='Sum' name='[sum:BNNMeanEntropy:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BNNPrecision]' derivation='Sum' name='[sum:BNNPrecision:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BNNRecall]' derivation='Sum' name='[sum:BNNRecall:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BNNTime]' derivation='Sum' name='[sum:BNNTime:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Layer]' derivation='Sum' name='[sum:Layer:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Neurons]' derivation='Sum' name='[sum:Neurons:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ueb61k1spooa01d6x9500ltbfbt].[none:Layer:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingAvgDiff:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingFairnessScore:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingTime:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:Layer:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNAccuracy:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingAccuracy:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNPrecision:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNRecall:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingPrecision:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingRecall:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNAvgDiff:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairnessScore:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNTime:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingMeanEntropy:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNMeanEntropy:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ueb61k1spooa01d6x9500ltbfbt].[none:Neurons:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:Neurons:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Ireland&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='mean_eps_0.05.csv' id='mean_eps_0.05.csv_B2D0048C9F6D42AB808439E515CF239B'>
            <properties context=''>
              <relation connection='textscan.1euq9jh1sapb6n17df38w1sieu31' name='mean_eps_0.05.csv' table='[mean_eps_0.05#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=' '>
                  <column datatype='string' name='F1' ordinal='0' />
                  <column datatype='real' name='Layer' ordinal='1' />
                  <column datatype='real' name='Neurons' ordinal='2' />
                  <column datatype='real' name='BNNAccuracy' ordinal='3' />
                  <column datatype='real' name='BNNFairTrainingAccuracy' ordinal='4' />
                  <column datatype='real' name='BNNMaxDifference' ordinal='5' />
                  <column datatype='real' name='BNNFairTrainingMaxDifference' ordinal='6' />
                  <column datatype='real' name='BNNMinDifference' ordinal='7' />
                  <column datatype='real' name='BNNFairTrainingMinDifference' ordinal='8' />
                  <column datatype='real' name='BNNFairnessScore' ordinal='9' />
                  <column datatype='real' name='BNNFairTrainingFairnessScore' ordinal='10' />
                  <column datatype='real' name='BNNAvgDiff' ordinal='11' />
                  <column datatype='real' name='BNNFairTrainingAvgDiff' ordinal='12' />
                  <column datatype='real' name='BNNRecall' ordinal='13' />
                  <column datatype='real' name='BNNFairTrainingRecall' ordinal='14' />
                  <column datatype='real' name='BNNPrecision' ordinal='15' />
                  <column datatype='real' name='BNNFairTrainingPrecision' ordinal='16' />
                  <column datatype='real' name='BNNMeanEntropy' ordinal='17' />
                  <column datatype='real' name='BNNFairTrainingMeanEntropy' ordinal='18' />
                  <column datatype='real' name='BNNTime' ordinal='19' />
                  <column datatype='real' name='BNNFairTrainingTime' ordinal='20' />
                  <column datatype='real' name='BNNAdversaryAccuracy' ordinal='21' />
                  <column datatype='real' name='BNNAdversaryMaxDifference' ordinal='22' />
                  <column datatype='real' name='BNNAdversaryMinDifference' ordinal='23' />
                  <column datatype='real' name='BNNAdversaryFairnessScore' ordinal='24' />
                  <column datatype='real' name='BNNAdversaryAvgDiff' ordinal='25' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Accuracy'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Accuracy for BNN and BNN with fair training, epsilon = 0.05

</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='mean_eps_0.05' name='federated.0ueb61k1spooa01d6x9500ltbfbt' />
          </datasources>
          <datasource-dependencies datasource='federated.0ueb61k1spooa01d6x9500ltbfbt'>
            <column caption='BNN Accuracy' datatype='real' name='[BNNAccuracy]' role='measure' type='quantitative' />
            <column caption='BNN Fair Training Accuracy' datatype='real' name='[BNNFairTrainingAccuracy]' role='measure' type='quantitative' />
            <column caption='BNN Fair Training Fairness Score' datatype='real' name='[BNNFairTrainingFairnessScore]' role='measure' type='quantitative' />
            <column caption='BNN Fairness Score' datatype='real' name='[BNNFairnessScore]' role='measure' type='quantitative' />
            <column datatype='real' name='[Layer]' role='measure' type='quantitative' />
            <column datatype='real' name='[Neurons]' role='measure' type='quantitative' />
            <column-instance column='[Layer]' derivation='None' name='[none:Layer:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Neurons]' derivation='None' name='[none:Neurons:ok]' pivot='key' type='ordinal' />
            <column-instance column='[BNNAccuracy]' derivation='Sum' name='[sum:BNNAccuracy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNFairTrainingAccuracy]' derivation='Sum' name='[sum:BNNFairTrainingAccuracy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNFairTrainingFairnessScore]' derivation='Sum' name='[sum:BNNFairTrainingFairnessScore:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNFairnessScore]' derivation='Sum' name='[sum:BNNFairnessScore:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairnessScore:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingFairnessScore:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNAccuracy:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingAccuracy:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairnessScore:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingFairnessScore:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingAccuracy:qk]' field-type='quantitative' max='1.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingAccuracy:qk]' scope='rows' value='BNN Fair Training ' />
            <format attr='title' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNAccuracy:qk]' scope='rows' value='BNN ' />
            <encoding attr='space' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNAccuracy:qk]' field-type='quantitative' max='1.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairnessScore:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingFairnessScore:qk]' scope='rows' value='' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='text-align' id='refline8' value='left' />
            <format attr='vertical-align' id='refline8' value='top' />
            <format attr='fill-above' id='refline8' value='#00000000' />
            <format attr='fill-below' id='refline8' value='#00000000' />
            <format attr='text-align' id='refline9' value='left' />
            <format attr='vertical-align' id='refline6' value='top' />
            <format attr='text-align' id='refline6' value='right' />
            <format attr='text-orientation' id='refline6' value='0' />
            <format attr='wrap' id='refline6' value='off' />
            <format attr='font-size' id='refline6' value='7' />
            <format attr='color' id='refline6' value='#555555a7' />
            <format attr='color' id='refline1' value='#555555a7' />
            <format attr='font-size' id='refline1' value='7' />
            <format attr='font-size' id='refline0' value='7' />
            <format attr='color' id='refline0' value='#555555a7' />
            <format attr='font-size' id='refline2' value='7' />
            <format attr='color' id='refline2' value='#555555a7' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='fill-color' id='refline3' value='#faf4e7' />
            <format attr='fill-color' id='refline0' value='#e8edda' />
            <format attr='fill-color' id='refline2' value='#e8edda' />
            <format attr='fill-color' id='refline1' value='#eff3e3' />
            <format attr='fill-color' id='refline6' value='#e9ebe0' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='cols' value='#e6e6e6' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNAccuracy:qk]' enable-instant-analytics='true' formula='min' id='refline0' label-type='value' paired-id='refline1' scope='per-pane' symmetric='false' value-column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNAccuracy:qk]' z-order='1' />
            <reference-line axis-column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNAccuracy:qk]' enable-instant-analytics='true' formula='max' id='refline1' label-type='value' paired-id='refline0' scope='per-pane' symmetric='false' value-column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNAccuracy:qk]' z-order='2' />
            <reference-line axis-column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingAccuracy:qk]' enable-instant-analytics='true' formula='min' id='refline2' label-type='value' paired-id='refline3' scope='per-pane' symmetric='false' value-column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingAccuracy:qk]' z-order='3' />
            <reference-line axis-column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingAccuracy:qk]' enable-instant-analytics='true' formula='max' id='refline3' label-type='value' paired-id='refline2' scope='per-pane' symmetric='false' value-column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingAccuracy:qk]' z-order='4' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNAccuracy:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairnessScore:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='dotted' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingAccuracy:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingFairnessScore:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='dotted' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNAccuracy:qk] + ([federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairnessScore:qk] + ([federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingAccuracy:qk] + [federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingFairnessScore:qk])))</rows>
        <cols>([federated.0ueb61k1spooa01d6x9500ltbfbt].[none:Layer:ok] / [federated.0ueb61k1spooa01d6x9500ltbfbt].[none:Neurons:ok])</cols>
      </table>
      <simple-id uuid='{0EC03B42-67A5-40BC-AB16-3451CADC2C81}' />
    </worksheet>
    <worksheet name='Average Difference'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average Difference in outputs of similar pairs for BNN and BNN with fair training, epsilon = 0.05
</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='mean_eps_0.05' name='federated.0ueb61k1spooa01d6x9500ltbfbt' />
          </datasources>
          <datasource-dependencies datasource='federated.0ueb61k1spooa01d6x9500ltbfbt'>
            <column caption='BNN Avg Diff' datatype='real' name='[BNNAvgDiff]' role='measure' type='quantitative' />
            <column caption='BNN Fair Training Avg Diff' datatype='real' name='[BNNFairTrainingAvgDiff]' role='measure' type='quantitative' />
            <column datatype='real' name='[Layer]' role='measure' type='quantitative' />
            <column datatype='real' name='[Neurons]' role='measure' type='quantitative' />
            <column-instance column='[Layer]' derivation='None' name='[none:Layer:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Neurons]' derivation='None' name='[none:Neurons:ok]' pivot='key' type='ordinal' />
            <column-instance column='[BNNAvgDiff]' derivation='Sum' name='[sum:BNNAvgDiff:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNFairTrainingAvgDiff]' derivation='Sum' name='[sum:BNNFairTrainingAvgDiff:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingAvgDiff:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNAvgDiff:qk]' field-type='quantitative' max='1.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNAvgDiff:qk]' scope='rows' value='Average Difference' />
            <format attr='title' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingAvgDiff:qk]' scope='rows' value='' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[none:Neurons:ok]' value='35' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-color' scope='cols' value='#e6e6e6' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNAvgDiff:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingAvgDiff:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNAvgDiff:qk] + [federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingAvgDiff:qk])</rows>
        <cols>([federated.0ueb61k1spooa01d6x9500ltbfbt].[none:Layer:ok] / [federated.0ueb61k1spooa01d6x9500ltbfbt].[none:Neurons:ok])</cols>
      </table>
      <simple-id uuid='{B833D03C-63FF-4AA8-88C5-BD3ED076A7B7}' />
    </worksheet>
    <worksheet name='Entropy'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Mean Predictive Entropy for BNN and BNN with fair training, epsilon = 0.05

</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='mean_eps_0.05' name='federated.0ueb61k1spooa01d6x9500ltbfbt' />
          </datasources>
          <datasource-dependencies datasource='federated.0ueb61k1spooa01d6x9500ltbfbt'>
            <column caption='BNN Accuracy' datatype='real' name='[BNNAccuracy]' role='measure' type='quantitative' />
            <column caption='BNN Fair Training Accuracy' datatype='real' name='[BNNFairTrainingAccuracy]' role='measure' type='quantitative' />
            <column caption='BNN Fair Training Fairness Score' datatype='real' name='[BNNFairTrainingFairnessScore]' role='measure' type='quantitative' />
            <column caption='BNN Fair Training Mean Entropy' datatype='real' name='[BNNFairTrainingMeanEntropy]' role='measure' type='quantitative' />
            <column caption='BNN Fairness Score' datatype='real' name='[BNNFairnessScore]' role='measure' type='quantitative' />
            <column caption='BNN Mean Entropy' datatype='real' name='[BNNMeanEntropy]' role='measure' type='quantitative' />
            <column datatype='real' name='[Layer]' role='measure' type='quantitative' />
            <column datatype='real' name='[Neurons]' role='measure' type='quantitative' />
            <column-instance column='[Layer]' derivation='None' name='[none:Layer:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Neurons]' derivation='None' name='[none:Neurons:ok]' pivot='key' type='ordinal' />
            <column-instance column='[BNNAccuracy]' derivation='Sum' name='[sum:BNNAccuracy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNFairTrainingAccuracy]' derivation='Sum' name='[sum:BNNFairTrainingAccuracy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNFairTrainingFairnessScore]' derivation='Sum' name='[sum:BNNFairTrainingFairnessScore:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNFairTrainingMeanEntropy]' derivation='Sum' name='[sum:BNNFairTrainingMeanEntropy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNFairnessScore]' derivation='Sum' name='[sum:BNNFairnessScore:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNMeanEntropy]' derivation='Sum' name='[sum:BNNMeanEntropy:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairnessScore:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingFairnessScore:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNAccuracy:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingAccuracy:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairnessScore:qk]' field-type='quantitative' max='1.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingFairnessScore:qk]' field-type='quantitative' max='1.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairnessScore:qk]' scope='rows' value='BNN' />
            <format attr='title' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingFairnessScore:qk]' scope='rows' value='BNN Fairness Training' />
            <encoding attr='space' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNMeanEntropy:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingMeanEntropy:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNMeanEntropy:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingMeanEntropy:qk]' scope='rows' value='' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='font-size' id='refline0' value='8' />
            <format attr='font-size' id='refline2' value='8' />
            <format attr='color' id='refline4' value='#555555a7' />
            <format attr='font-size' id='refline4' value='7' />
            <format attr='color' id='refline6' value='#555555a7' />
            <format attr='font-size' id='refline6' value='7' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='fill-color' id='refline3' value='#faf4e7' />
            <format attr='fill-color' id='refline0' value='#faf4e7' />
            <format attr='fill-color' id='refline2' value='#faf4e7' />
            <format attr='fill-color' id='refline4' value='#faf4e7' />
            <format attr='fill-color' id='refline6' value='#faf4e7' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='cols' value='#e6e6e6' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNMeanEntropy:qk]' enable-instant-analytics='true' formula='min' id='refline4' label-type='value' paired-id='refline5' scope='per-pane' symmetric='false' value-column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNMeanEntropy:qk]' z-order='1' />
            <reference-line axis-column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNMeanEntropy:qk]' enable-instant-analytics='true' formula='max' id='refline5' label-type='value' paired-id='refline4' scope='per-pane' symmetric='false' value-column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNMeanEntropy:qk]' z-order='2' />
            <reference-line axis-column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingMeanEntropy:qk]' enable-instant-analytics='true' formula='min' id='refline6' label-type='value' paired-id='refline7' scope='per-pane' symmetric='false' value-column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingMeanEntropy:qk]' z-order='3' />
            <reference-line axis-column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingMeanEntropy:qk]' enable-instant-analytics='true' formula='max' id='refline7' label-type='value' paired-id='refline6' scope='per-pane' symmetric='false' value-column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingMeanEntropy:qk]' z-order='4' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairnessScore:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='dotted' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingFairnessScore:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='dotted' />
              </style-rule>
            </style>
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNMeanEntropy:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingMeanEntropy:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairnessScore:qk] + ([federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNMeanEntropy:qk] + ([federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingFairnessScore:qk] + [federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingMeanEntropy:qk])))</rows>
        <cols>([federated.0ueb61k1spooa01d6x9500ltbfbt].[none:Layer:ok] / [federated.0ueb61k1spooa01d6x9500ltbfbt].[none:Neurons:ok])</cols>
      </table>
      <simple-id uuid='{6A51F461-38D3-4CAD-8D3A-136FAB6416DE}' />
    </worksheet>
    <worksheet name='Precision'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Precision for BNN and BNN with fair training, epsilon = 0.05

</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='mean_eps_0.05' name='federated.0ueb61k1spooa01d6x9500ltbfbt' />
          </datasources>
          <datasource-dependencies datasource='federated.0ueb61k1spooa01d6x9500ltbfbt'>
            <column caption='BNN Accuracy' datatype='real' name='[BNNAccuracy]' role='measure' type='quantitative' />
            <column caption='BNN Fair Training Accuracy' datatype='real' name='[BNNFairTrainingAccuracy]' role='measure' type='quantitative' />
            <column caption='BNN Fair Training Fairness Score' datatype='real' name='[BNNFairTrainingFairnessScore]' role='measure' type='quantitative' />
            <column caption='BNN Fair Training Precision' datatype='real' name='[BNNFairTrainingPrecision]' role='measure' type='quantitative' />
            <column caption='BNN Fairness Score' datatype='real' name='[BNNFairnessScore]' role='measure' type='quantitative' />
            <column caption='BNN Precision' datatype='real' name='[BNNPrecision]' role='measure' type='quantitative' />
            <column datatype='real' name='[Layer]' role='measure' type='quantitative' />
            <column datatype='real' name='[Neurons]' role='measure' type='quantitative' />
            <column-instance column='[Layer]' derivation='None' name='[none:Layer:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Neurons]' derivation='None' name='[none:Neurons:ok]' pivot='key' type='ordinal' />
            <column-instance column='[BNNAccuracy]' derivation='Sum' name='[sum:BNNAccuracy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNFairTrainingAccuracy]' derivation='Sum' name='[sum:BNNFairTrainingAccuracy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNFairTrainingFairnessScore]' derivation='Sum' name='[sum:BNNFairTrainingFairnessScore:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNFairTrainingPrecision]' derivation='Sum' name='[sum:BNNFairTrainingPrecision:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNFairnessScore]' derivation='Sum' name='[sum:BNNFairnessScore:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNPrecision]' derivation='Sum' name='[sum:BNNPrecision:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairnessScore:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingFairnessScore:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNAccuracy:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingAccuracy:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairnessScore:qk]' field-type='quantitative' max='1.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairnessScore:qk]' scope='rows' value='BNN' />
            <format attr='title' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingFairnessScore:qk]' scope='rows' value='BNN Fair Training' />
            <encoding attr='space' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNPrecision:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNPrecision:qk]' scope='rows' value='' />
            <encoding attr='space' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingPrecision:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingPrecision:qk]' scope='rows' value='' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='text-align' id='refline8' value='left' />
            <format attr='vertical-align' id='refline8' value='top' />
            <format attr='fill-above' id='refline8' value='#00000000' />
            <format attr='fill-below' id='refline8' value='#00000000' />
            <format attr='text-align' id='refline9' value='left' />
            <format attr='vertical-align' id='refline6' value='top' />
            <format attr='text-align' id='refline6' value='right' />
            <format attr='text-orientation' id='refline6' value='0' />
            <format attr='wrap' id='refline6' value='off' />
            <format attr='font-size' id='refline6' value='7' />
            <format attr='color' id='refline6' value='#555555a7' />
            <format attr='color' id='refline1' value='#555555a7' />
            <format attr='font-size' id='refline1' value='7' />
            <format attr='font-size' id='refline0' value='7' />
            <format attr='color' id='refline0' value='#555555a7' />
            <format attr='font-size' id='refline2' value='7' />
            <format attr='color' id='refline2' value='#555555a7' />
            <format attr='font-size' id='refline4' value='7' />
            <format attr='color' id='refline4' value='#555555a7' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='fill-color' id='refline3' value='#faf4e7' />
            <format attr='fill-color' id='refline0' value='#e9ebe0' />
            <format attr='fill-color' id='refline2' value='#dfedeb' />
            <format attr='fill-color' id='refline1' value='#eff3e3' />
            <format attr='fill-color' id='refline6' value='#dfedeb' />
            <format attr='fill-color' id='refline4' value='#e8edda' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='cols' value='#e6e6e6' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNPrecision:qk]' enable-instant-analytics='true' formula='min' id='refline0' label-type='value' paired-id='refline1' scope='per-pane' symmetric='false' value-column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNPrecision:qk]' z-order='1' />
            <reference-line axis-column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNPrecision:qk]' enable-instant-analytics='true' formula='max' id='refline1' label-type='value' paired-id='refline0' scope='per-pane' symmetric='false' value-column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNPrecision:qk]' z-order='2' />
            <reference-line axis-column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingPrecision:qk]' enable-instant-analytics='true' formula='min' id='refline2' label-type='value' paired-id='refline3' scope='per-pane' symmetric='false' value-column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingPrecision:qk]' z-order='3' />
            <reference-line axis-column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingPrecision:qk]' enable-instant-analytics='true' formula='max' id='refline3' label-type='value' paired-id='refline2' scope='per-pane' symmetric='false' value-column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingPrecision:qk]' z-order='4' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairnessScore:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='dotted' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingFairnessScore:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='dotted' />
              </style-rule>
            </style>
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNPrecision:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingPrecision:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairnessScore:qk] + ([federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNPrecision:qk] + ([federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingFairnessScore:qk] + [federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingPrecision:qk])))</rows>
        <cols>([federated.0ueb61k1spooa01d6x9500ltbfbt].[none:Layer:ok] / [federated.0ueb61k1spooa01d6x9500ltbfbt].[none:Neurons:ok])</cols>
      </table>
      <simple-id uuid='{52E2A9F0-6202-489F-AD2C-9C3867EBB87D}' />
    </worksheet>
    <worksheet name='Recall'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Recall for BNN and BNN with fair training, epsilon = 0.05

</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='mean_eps_0.05' name='federated.0ueb61k1spooa01d6x9500ltbfbt' />
          </datasources>
          <datasource-dependencies datasource='federated.0ueb61k1spooa01d6x9500ltbfbt'>
            <column caption='BNN Accuracy' datatype='real' name='[BNNAccuracy]' role='measure' type='quantitative' />
            <column caption='BNN Fair Training Accuracy' datatype='real' name='[BNNFairTrainingAccuracy]' role='measure' type='quantitative' />
            <column caption='BNN Fair Training Fairness Score' datatype='real' name='[BNNFairTrainingFairnessScore]' role='measure' type='quantitative' />
            <column caption='BNN Fair Training Recall' datatype='real' name='[BNNFairTrainingRecall]' role='measure' type='quantitative' />
            <column caption='BNN Fairness Score' datatype='real' name='[BNNFairnessScore]' role='measure' type='quantitative' />
            <column caption='BNN Recall' datatype='real' name='[BNNRecall]' role='measure' type='quantitative' />
            <column datatype='real' name='[Layer]' role='measure' type='quantitative' />
            <column datatype='real' name='[Neurons]' role='measure' type='quantitative' />
            <column-instance column='[Layer]' derivation='None' name='[none:Layer:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Neurons]' derivation='None' name='[none:Neurons:ok]' pivot='key' type='ordinal' />
            <column-instance column='[BNNAccuracy]' derivation='Sum' name='[sum:BNNAccuracy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNFairTrainingAccuracy]' derivation='Sum' name='[sum:BNNFairTrainingAccuracy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNFairTrainingFairnessScore]' derivation='Sum' name='[sum:BNNFairTrainingFairnessScore:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNFairTrainingRecall]' derivation='Sum' name='[sum:BNNFairTrainingRecall:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNFairnessScore]' derivation='Sum' name='[sum:BNNFairnessScore:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNRecall]' derivation='Sum' name='[sum:BNNRecall:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairnessScore:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingFairnessScore:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNAccuracy:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingAccuracy:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairnessScore:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingFairnessScore:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairnessScore:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingFairnessScore:qk]' scope='rows' value='' />
            <encoding attr='space' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNRecall:qk]' field-type='quantitative' max='1.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingRecall:qk]' field-type='quantitative' max='1.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNRecall:qk]' scope='rows' value='BNN ' />
            <format attr='title' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingRecall:qk]' scope='rows' value='BNN Fair Training ' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='text-align' id='refline8' value='left' />
            <format attr='vertical-align' id='refline8' value='top' />
            <format attr='fill-above' id='refline8' value='#00000000' />
            <format attr='fill-below' id='refline8' value='#00000000' />
            <format attr='text-align' id='refline9' value='left' />
            <format attr='vertical-align' id='refline6' value='top' />
            <format attr='text-align' id='refline6' value='right' />
            <format attr='text-orientation' id='refline6' value='0' />
            <format attr='wrap' id='refline6' value='off' />
            <format attr='font-size' id='refline6' value='7' />
            <format attr='color' id='refline6' value='#555555a7' />
            <format attr='color' id='refline1' value='#555555a7' />
            <format attr='font-size' id='refline1' value='7' />
            <format attr='font-size' id='refline0' value='7' />
            <format attr='color' id='refline0' value='#555555a7' />
            <format attr='font-size' id='refline2' value='7' />
            <format attr='color' id='refline2' value='#555555a7' />
            <format attr='font-size' id='refline4' value='7' />
            <format attr='color' id='refline4' value='#555555a7' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='fill-color' id='refline3' value='#faf4e7' />
            <format attr='fill-color' id='refline0' value='#e8edda' />
            <format attr='fill-color' id='refline2' value='#e8edda' />
            <format attr='fill-color' id='refline1' value='#eff3e3' />
            <format attr='fill-color' id='refline6' value='#dfedeb' />
            <format attr='fill-color' id='refline4' value='#e8edda' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='cols' value='#e6e6e6' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNRecall:qk]' enable-instant-analytics='true' formula='min' id='refline4' label-type='value' paired-id='refline5' scope='per-pane' symmetric='false' value-column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNRecall:qk]' z-order='1' />
            <reference-line axis-column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNRecall:qk]' enable-instant-analytics='true' formula='max' id='refline5' label-type='value' paired-id='refline4' scope='per-pane' symmetric='false' value-column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNRecall:qk]' z-order='2' />
            <reference-line axis-column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingRecall:qk]' enable-instant-analytics='true' formula='min' id='refline6' label-type='value' paired-id='refline7' scope='per-pane' symmetric='false' value-column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingRecall:qk]' z-order='3' />
            <reference-line axis-column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingRecall:qk]' enable-instant-analytics='true' formula='max' id='refline7' label-type='value' paired-id='refline6' scope='per-pane' symmetric='false' value-column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingRecall:qk]' z-order='4' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairnessScore:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='dotted' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingFairnessScore:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='dotted' />
              </style-rule>
            </style>
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNRecall:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingRecall:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNRecall:qk] + ([federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairnessScore:qk] + ([federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingRecall:qk] + [federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingFairnessScore:qk])))</rows>
        <cols>([federated.0ueb61k1spooa01d6x9500ltbfbt].[none:Layer:ok] / [federated.0ueb61k1spooa01d6x9500ltbfbt].[none:Neurons:ok])</cols>
      </table>
      <simple-id uuid='{75FE592E-C5FA-40F0-86B3-7CCB4002089F}' />
    </worksheet>
    <worksheet name='Threshold-Fairness'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Threshold-Fairness Score for BNN and BNN with fair training, epsilon = 0.05
</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='mean_eps_0.05' name='federated.0ueb61k1spooa01d6x9500ltbfbt' />
          </datasources>
          <datasource-dependencies datasource='federated.0ueb61k1spooa01d6x9500ltbfbt'>
            <column caption='BNN Fair Training Fairness Score' datatype='real' name='[BNNFairTrainingFairnessScore]' role='measure' type='quantitative' />
            <column caption='BNN Fairness Score' datatype='real' name='[BNNFairnessScore]' role='measure' type='quantitative' />
            <column datatype='real' name='[Layer]' role='measure' type='quantitative' />
            <column datatype='real' name='[Neurons]' role='measure' type='quantitative' />
            <column-instance column='[Layer]' derivation='None' name='[none:Layer:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Neurons]' derivation='None' name='[none:Neurons:ok]' pivot='key' type='ordinal' />
            <column-instance column='[BNNFairTrainingFairnessScore]' derivation='Sum' name='[sum:BNNFairTrainingFairnessScore:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNFairnessScore]' derivation='Sum' name='[sum:BNNFairnessScore:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingFairnessScore:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairnessScore:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingFairnessScore:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairnessScore:qk]' field-type='quantitative' max='1.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairnessScore:qk]' scope='rows' value='Threshold-Fairness Score' />
            <format attr='title' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingFairnessScore:qk]' scope='rows' value='' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-color' scope='cols' value='#b07aa1' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='font-size' id='refline1' value='7' />
            <format attr='color' id='refline1' value='#4e79a7' />
            <format attr='stroke-color' id='refline1' value='#4e79a74b' />
            <format attr='stroke-color' id='refline0' value='#e157594b' />
            <format attr='color' id='refline0' value='#e15759' />
            <format attr='font-size' id='refline0' value='7' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='cols' value='#e6e6e6' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-color' scope='cols' value='#c0c0c0' />
          </style-rule>
        </style>
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairnessScore:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='value' probability='95' scope='per-pane' value-column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairnessScore:qk]' z-order='1' />
            <reference-line axis-column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingFairnessScore:qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='value' probability='95' scope='per-pane' value-column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingFairnessScore:qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairnessScore:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingFairnessScore:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairnessScore:qk] + [federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingFairnessScore:qk])</rows>
        <cols>([federated.0ueb61k1spooa01d6x9500ltbfbt].[none:Layer:ok] / [federated.0ueb61k1spooa01d6x9500ltbfbt].[none:Neurons:ok])</cols>
      </table>
      <simple-id uuid='{73365519-9F4F-48B7-973D-31E326DA7F22}' />
    </worksheet>
    <worksheet name='Time'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Training Time for BNN and BNN with fair training, epsilon = 0.05
</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='mean_eps_0.05' name='federated.0ueb61k1spooa01d6x9500ltbfbt' />
          </datasources>
          <datasource-dependencies datasource='federated.0ueb61k1spooa01d6x9500ltbfbt'>
            <column caption='BNN Fair Training Time' datatype='real' name='[BNNFairTrainingTime]' role='measure' type='quantitative' />
            <column caption='BNN Time' datatype='real' name='[BNNTime]' role='measure' type='quantitative' />
            <column datatype='real' name='[Layer]' role='measure' type='quantitative' />
            <column datatype='real' name='[Neurons]' role='measure' type='quantitative' />
            <column-instance column='[Layer]' derivation='None' name='[none:Layer:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Neurons]' derivation='None' name='[none:Neurons:ok]' pivot='key' type='ordinal' />
            <column-instance column='[BNNFairTrainingTime]' derivation='Sum' name='[sum:BNNFairTrainingTime:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNTime]' derivation='Sum' name='[sum:BNNTime:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingTime:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNTime:qk]' field-type='quantitative' max='700.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNTime:qk]' scope='rows' value='Time (s)' />
            <format attr='title' class='0' field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingTime:qk]' scope='rows' value='' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-color' scope='cols' value='#b07aa1' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='font-size' id='refline1' value='7' />
            <format attr='color' id='refline1' value='#4e79a7' />
            <format attr='stroke-color' id='refline1' value='#4e79a74b' />
            <format attr='stroke-color' id='refline0' value='#e157594b' />
            <format attr='color' id='refline0' value='#e15759' />
            <format attr='font-size' id='refline0' value='7' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='cols' value='#e6e6e6' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-color' scope='cols' value='#c0c0c0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNTime:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='value' probability='95' scope='per-pane' value-column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNTime:qk]' z-order='1' />
            <reference-line axis-column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingTime:qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='value' probability='95' scope='per-pane' value-column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingTime:qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNTime:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingTime:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNTime:qk] + [federated.0ueb61k1spooa01d6x9500ltbfbt].[sum:BNNFairTrainingTime:qk])</rows>
        <cols>([federated.0ueb61k1spooa01d6x9500ltbfbt].[none:Layer:ok] / [federated.0ueb61k1spooa01d6x9500ltbfbt].[none:Neurons:ok])</cols>
      </table>
      <simple-id uuid='{32398DC4-DAC1-4254-B081-E19D857FAE41}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' name='Time'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card pane-specification-id='3' param='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{89070FE2-A829-47C3-A169-2CF4CDF70D41}' />
    </window>
    <window class='worksheet' name='Threshold-Fairness'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='6' param='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ueb61k1spooa01d6x9500ltbfbt].[none:Layer:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{49E3EB53-7CD1-4E8C-916C-FF0DA072862A}' />
    </window>
    <window class='worksheet' name='Accuracy'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{6488FF7D-0F02-4C9D-911F-12A425A57517}' />
    </window>
    <window class='worksheet' name='Entropy'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{F6DB1A4C-D477-409B-8AC2-7F5384C605ED}' />
    </window>
    <window class='worksheet' name='Recall'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='7' param='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{13699691-EF41-4B60-8E6B-C5E585A2E13C}' />
    </window>
    <window class='worksheet' name='Precision'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{091B047C-01D0-414D-B8AC-C7AD14F37DBC}' />
    </window>
    <window class='worksheet' maximized='true' name='Average Difference'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.0ueb61k1spooa01d6x9500ltbfbt].[:Measure Names]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{A8830486-7EB7-4143-89E2-97C36D0E2211}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Accuracy' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Average Difference' width='192'>
      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
      8sSjWVmNfnAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Entropy' width='192'>
      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
      69KLelb6/wPxqKh2pCFv8AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Precision' width='192'>
      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
      p7bCHgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Recall' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Threshold-Fairness' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Time' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAb7klEQVR4nO3deXAc12Hn8W93T89gLmBwDO6TJAjwkEiZFCnJuo9ItlaWbSk+4iPrZNfJ
      riv2pjbZSu1Rqd1KbaVSydZ6d5PsJo5rK/FWLFu25LVkO7YkWytFsmRKFg+AJAjivgfHDObs
      8+0fEClSBAlwiGOAfp8qlDiaN93vAf2b7tfd77UihBBIkkep670CmS+plK17ADKZzHqvQtpK
      hCj6S7G/v3/ps+8uQ9zAsi5Y9wBI0mWMBN/4zgsATI8PcW5wlMTkJJYrmJqeZiExydDYFOmF
      BBMTE2QNZ+lzQjAwMACKAsAf/M4/Y3D0PM/88HXmZyYYHp9mcWGGgiWYnp4mMTPD2NgY2dQc
      p88NYhcyDA0OMjQ2RSGT5PiJHmxX4Nus34Mk9Z54mx/85Bif+fT99I4nSEyMMTs8gIJCd3c9
      Z2f9fObjHwZgcaKX8sa9KO9+dv/RO/jlKy9BrJOnnvouCtDdVU/7kY/zjy++QH5+gq4jD/PD
      t16moSrC+HADx8/Po1kpGsIuaaWCtl1dcg8gbbypkQH6BoboOTtES3UFLQfv5Gd//zVuue0O
      psaGMB0Xy4EHH36UcEAD4K3eCQ7ta3pvIWoZXZ2NuMDU6BC2C46r8tbrL5PM2VTVd3DnrfsB
      cF0BKOw/eJh4ZYS9Nx1gbriX0bksynqfBUqn00Sj0fVcRUkRQqAoysoFt4nrbq9rcvz4KUKV
      tQQxcJQA5VE/3372R/zzL3yO5OwUE/M5Wusq8IWrCeoKCJcXXvwpDzz4wNIeQAimZ2YIh0Jk
      TRfdyTKVLNDVXk/f0CRVsQiqohKPx8ktzjGayLCruYaUoWDl04T8KsNTSfbt6dyeAbjQpM3Y
      EDezvaCw0U1ei/ZmkrPkRYB45VWW45ospC0qK8KA4EJz1+Lvuy0PgSbHznPi5LnNrsbGEA4D
      5/r45bFfkMyZm12bokRiNVff+AFU/7sbP4BD/9k+fv7aG6xFa7dlABpb2gkF9M2uxsZQNJqb
      GxCqTijghXMaPmIVIQxXoK/Bscs2DIDAdQVCuN64CCdsTvb2c+DgAfza9u97uFYBf7SGlsoA
      i9aNL88H63u1di0uVlznGpkYHQPVYTFboDxctoHr3oT2CqiuLGfg/Hla2zsI6NrGrZuNb6/i
      85OZHCFU2065/l5/oOjliSXrdsU2l8sRCoVWLGdZFrq+8mFLqZeT7S2d+q2mjA+WetPX25PP
      pOYYn5rFH4zQ1ljD0OgU7e2t5NMLpPIuDXU1Fy9arGbZhmEQCAS2fDmQ7V3v9QohME1zxXKr
      WVbRvaZIRTW7ozFO9pyhNzlLx45WTvcNYBWy1IRUZsMVxCMe6YhKW9YNdYInh/tpbN8Fmo9Q
      uBzXyOEP+KmtqWBhMbdWdZSkdVN0AIRwmc2Y1EQDhP0qPT09lFfXYecznOyfpCnunau/0tZV
      9CGQoqjcfNNNAHR07nnvjabaG66UJG2UbXgdQJJWTwZA8jQZAMnTZAAkT5MBkDxNBkDyNBkA
      ydNkACRPkwGQPE0GQPI0GQDJ04q+F8gxc/SeHaAqXoeTT5I3XWobmkmMD5IzHPbdfDO6uv2H
      6ElbW9EBGOk/h9CDGIaJa5oIVwXhYuGjqznK8EyGjngIx3GwbXvF5bmuuy3KyfaWTv1WU6bo
      AAT8fqINHUwOnKG7uxufCid7z6KqKgXDoiyko2kamqbh8628GsdxtkU52d71X68QYlXlVlOm
      6AA07NzN+b5zVMbrSc3PMLeQpn1nJ/nkNIm8S2fTxg5Gl6Ri3MB4AI1dXd0XX9fULf23PNRK
      3Q1XS5I2hjwLJHmaDIDkaTIAkqfJAEieJgMgeZoMgORpMgCSp8kASJ4mAyB5mgyA5GkyAJKn
      yQBIniYDIHnaDQRAYNsWtuNcfGKHEOA6DtYqBjRIUiko+nboQmqWs2Nz1NXGycxN4SgqerCC
      xdkJEIKd+w8RDcgdjFTaig7A6Mg4elmImZlZVGD/3t2cPNmLPxRhV12Ewdk0u+ojJT1kbj3K
      yfaWTv3WdUhkvCbGnBPGzE6g+1QW5ufQQ1GMbIqJGYt4S70cElmC9dsO7S2JIZGx+jac2Wnq
      dncTCqhMTs3StbOdQm6RjOFSFfLCU8ulra74rVRRqI7XX3zZ1NQAQDBcTjB8w/WSpA0he6mS
      p8kASJ4mAyB5mgyA5GkyAJKnyQBIniYDIHmaDIDkaTIAkqfJAEieJgMgeZoMgORpMgCSpxV9
      N6hwTc6dHSAUqyIW8jE+laC2oQXNyZHKOzQ31iEfkSeVuqL3AIX5CdxwnIa6GkbGJmhtbSMW
      CTA4OomWnyORNteynpK0LoreA+jROkK5BMdPTNDZ3sT01Dh5C3S/TnVlmOF0nuqQVtJD5taj
      nGxv6dRvXYdE5vNZcrkcmq6TyaQpFAoEwpXkFlL0DGTYc7AZTVPkEMESq992aG9JDImMxmro
      jtVcfN1w4R+tjcUuUpI2nDwLJHmaDIDkaTIAkqfJAEieJgMgeZoMgORpMgCSp8kASJ4mAyB5
      mgyA5GkyAJKnyQBIniYDIHmaDIDkaUUHQLgmZ0+fYWxyBsvI0d8/gO24pOYTjIxPIdaylpK0
      TooOQH5+AidYTX1tDWfP9tPcWMPZc+cZGptCN+aZkUMipS2g6AEx/vI6KgpznDjZg1/XCATD
      uGYB3a9TFQsznC5QI4dEllz9vNTe9R0SmcuSzmTw+f2UBxR6enqorG0iOT1Cz2CWPQfkkMhS
      rN92aG9JDom8oLm+uthFStKGk2eBJE+TAZA8TQZAWlOvnxrlz5/5BYa1cke2FMgASGuqIlIG
      wB9+/Wf86M1+8oa1yTW6tuKfFC9Jy9jbHmdve5xcweJn7wzxn//uFfZ11PLAB9qIBwKbXb0r
      yABI6yJUpvPh2zp56PAOXjs1yn99+g06W2p45Mgu6irDKMrmT52czBRkAKT1pfs07jnYztHu
      es6MJfnac28TCfp5/M4uqsqDhMv82I6L47rYjstiOoclcmTzFnnDYmgqiWE5fPahm9YsNEII
      hqZS/PX335IBkG7M3GKOtLFyOdMyqY2F+cKHDjIwucBfPHuMxEKWtvoKNFVF01R8moquKQQD
      OmV+H37dh+04vHl6gn3tceqrIgAIBJZl4devfbuNaZlXlDFth3f6pzh2ZoJP3r9PBkC6MdXl
      IaLR6IrlDMMg8G4foClezsFd9SxmDZri5Vctd8G9B9v5q+fe5j98/m7K/D6EEJimeUW5a60T
      wHUFf/j1n+LTVP79u8uSZ4GkTRENBa7Y+K+mrT7G4x/s4n98900c1y1qfUIInnu9j8ryIL/1
      +GHK/Evf/TIA0pZwZE8TLbUVfOulnuv+rBCCF98aZGQ6xZefOHrxUApkAKQt5Ffv3cvUfJY3
      esdX/RkhBC8fH+atvkl+6yOH8GmXb/IyANKWoaoK//Kjh/n+a32MJtKr+syxs5O8emKEf/Xk
      UXSfduUy17qSkrSeAn4fX37yKP/ze2+RyhauWk4IwcnBWf7hzX5+71N3EPAvf77nhgKQmp2i
      f2SC6YlRzp49y8JiltHBfnpO9+HKMZHSOqmNhfjsQ/v53z88vuz7QghODc7w3Zd7+cqTRy92
      eJdzA49JtRmbnkcoCoaVxx+uIBjwMZ63aKsKMDKXo606iBACdxU9d1lOlruect2t1YwkMvy/
      48PceVPLZe+dn1jg2z/t5StPHiFcpl9zeUUHYORcL3lLYW5ungfvuwtsg1Nn+/H5NFRVQbgC
      Id77WY3tUE62d2PWC/DQ4Q7+6G9fobE6QkdDDIChqRR/8/wv+f1P3UE4oK64rKID0NZ1M62u
      y9jkJInJMZKLGRqaWsgtTDGYMNizN4yqgKqqaNqVnY/3s217W5ST7V3/9QohUBSFsoCf3/3E
      7fzpN1/jDz5zJwXT5q++/za/+4nbqK4IYRjGisu6oSvBiqrS0tQEQH3Tu/+zanUXNyRpLdRU
      hPj8wwf44//zKpqq8uUnjlx2nn8l8lYIacvb01ZDZTTIvvb4qq8uXyADIG15iqLwbz59R1F3
      i8rrANK2UOyt0jIAkqfJAEieJgMgeZoMgORpMgCSp8kASJ4mAyB5mgyA5GkyAJKnyQBIniYD
      IHnaDd0MNzHUz0xeUFOmkMzmqKxtJjU9SsFy2HvzLZT5Nn/+R6k4q7l3fzsoOgC2kWXRVPAJ
      i2TOZd++fZw62YuqB9jbGGI0kWZHbbikH6K2HuWKbW+uYDG7mKe1tvya5W60fqspZ9ouZ0cS
      VEZDzKcLNNVEmZrPUBktozlezvnxBarKg8QigZL++67rQ/KmxsdxbIfxyRkaa6uwzAKqHsB1
      LNKZPJFYHZqmef6hcUOTSV7rGaUpXk42b5LOmeQNi2Qmj+0IDMvBtBySmQKJZJb/+Bv30dlc
      tant8PmW7q6cTxcQAvrG5mmOR8kZNqqqEg0HKFjOpv19S+Ihec07dtMkXBobGwj5NQaHJ+js
      3EVmYZpU3qW9ovTmgt8M8+k8AxMLVJcHqQgHaKyOEg7qBHwK4VAZfp9GQF/6MwxOJfnmi6fY
      1xHnsTt2LzuPzUbI5E1AIRzUMUyHlopypuezVEQCpHMGk3MZLNuhsXr1I69KlSJWOwK5SOl0
      +ronT93K5W60vbbj8vzr5zg1OMM/feQANeWBoup3eniWE+enuOvmNiJBP8GAD92nrbodtm2v
      6ht7M/6+xU6Ouxw5ImyNLaTzq54u/GrTe9/a3UhDdYS//N4xdjdXcd8HOtDUa5+wMy0Tn89g
      cHKBV0+Oki9Y+HWN6YUs+YJFzrBxXRdNVQiV+SkPB4hFygj4fRimTXdrDaqqLP0oCo5j4/fr
      qIqCpqrkTZtM3qTlfUMOw/6tPQGUDMAaq4wG1+QbsbEmysFd9XzzxRN848cn+c1Hb6G2Mrxs
      2YJp88o7U/z89ASV0SAfu6ub3c3VqOrlZ+FMy2FhMUvecplL5ZhN5TgzMsfoTIrphQyuK5Z+
      BNiOjRAKgqXO5NxiHp+m8if/4iHUS0ZfpdOrm6KwVF01AAPDY+TyefZ3d25kfaRL+HWNT963
      l6HpNP/tO2/w4KEd3H2gbWneJSGYTeX48S/O0zc6z00dcX7niaPE3n1I3dWWF4sEqAsEaK9f
      mkfn4SO7Lk4zcqn3B9SwbHIF67KNfztYNgCnTp/jmR+8SE1VJTvamgkFgxtdL+kSXa01/LvP
      3cVTL/Xwdt8ke9rjnB5OYFoO997Szifu24fr2Ks6xl7OasbTBnTfxc76dnLVFsUqonzx8096
      5oJIqQsGdH79kQM8//NzvHDsPF958jZaassvbryGszWey1tqlg1A164O9nTtXLHjJW0sRVF4
      9LZOHjmy64p57qXiLPtb1HUfuC75QmHV8zRKG0NRFLnxr6Er9gDCMfnpSy+SyTuEw2UsplLs
      uulWbups3Yz6SdK6uvIQyHU5/MH7SUyOYedS0NFNQ42c71Panq4IgKKXUe4TfONHP0TTAyia
      xhd/8zc2o26StO6uPASyDXKOxkP3fhBfRR1W3iCbzRIOL38RRpK2sisPgRR47aUfYQofZYF5
      splFstYBbtm7YxOqJ0nr68pDIC3AQx96FLNQIGdYRKNRNHV7Xf2TpAuuej5tPjFB38AQg4PD
      y74vXIeF+XkM08YyCszOzpI3TEwjTzqTW7cKS9JaWj4AAr797HMUClle+tlLyxYx8jlM2+FU
      Tw/nB86DooAQ9PaeZnzgDMm8s571lqQ1cdVbIY7c1MUbx45x650PLft+IBQhMzoEWoCqWITZ
      mWkWQ3n8wRA76iIMzmeI1kdKesjcepST7S2d+t3QkMgzQ5M8+cQTBILLn/1JJ2exFD+6ujQ8
      DUD16Si2Qe9Qge6bGtE01fNDIkutftuhvRsyJDKZGOfll1+mrm03999x6Ir3yyvjlFfGL75u
      uPCPprprrlCSSslVO8E+3U8sFiMSDm1kfSRpQ125BxCCvFHgiU98GsNyKQutPLrJaxzXZWgy
      yenhWR69vbPo51N5SaneVr/8gJhTPQgjzULGpKqhjbp41XLFPMF1BYZlM5cqkMotksoUyJs2
      whX4dQ0hlk6AeZUQgsKZM6iBAMK2AQUUBUVT0dvbsUZHEYUC2o7iLqQaZ/swh4aIPHA/yir6
      ENdrmSvBCu+88xYfeuRRGlk627PRXFfQO5zglePDfPGxQ2gbePtvIpnljd5xXCEYnEyykM5z
      ZE8ThmlTVxVB96nUV8UwbQdVWRpEfm5sDldAV0v1htWzVCiKghaOYCcX0JubcebnEYaJePdb
      QRgmrmGiXedt9UIICidPkXrqWyiBAPljb6HF4wRvOUhgdyeUXX3o5/VYNlKumef06dMAVNW3
      Eq+KrcnKrsW0HAamErzRO87g5AKV0SBjiUV+3jvGB2/amFux84bF13/wDolklo/dtYcje5qo
      Kg/i92n0Dk7j8/mIhgKYtk1U9zO9kEUIgWW7+DQV14NjJ4Tj4KQXUVSNwjvH8Xd0oARVnGQK
      N5NBDZbhpJJwHb8bN5sl+dS3EIZB/Pf/NVoshrAdrPFxCidPkHnxJYQCwb17CR4+jK+uFqXI
      wVvLBuDRx3+V5qamoha4WkIIUlmDMyOzvHl6nKm5DLtbqjnU1cCn7t9PWcBHwbT5L996Hd2n
      cWTP+tZnLpXjz5/5BfccbOOum9sum1GhYNqYtosjbEYGU3S1VpPKGqiqQiZvYjsupu3gxSMh
      RdMo27t36cW+vVe8r0Wj6M3Nqzq3D2D09JD8/vNEH/4VgkePXOxfKT4Nf1sr/rZWoo8+SmFu
      HvfcOVJPP427uIgaDuPfvZvQrYfRqqpRVnnUsOETYw1NJXn2lTMYlkPBsDiwq55DXQ1URwOE
      glfu1jJ5kz/5+3/k43fv4eCu+nWZ8GokkeVv/+E4v/bgfva0xZctV8oTRW1muYXhYSJ+/8XX
      wnHAtlHe91nLstB1/arLcfN50s89jxAQfeRX0MqvPQbl0uUJwyD32usI28ZJpnCSSRS/H6Wy
      grL2DvSWZrRY7LLOmpNKUfjlO+s/L9Bi1rhsoqjZVA7HFfyT2zupjL4328RMMos/ay27jM8+
      dDN/9+PjpDIF2uqiV51Q6lLXmnjqAoHgtRPDHB9I8Mn791ERLmNidvl5bpaW51/2vUsFfe6K
      ZbYTX1UV+iWBX3zueTIv/ZTIQw8S2NGBr6kJLRLBNQz0qwSqcPo0qe98l8gD9+O75RYCKxzf
      CyFwTfOy5fnb299733FwUinyA4O4IyNkfvICbiaLGo2g+P0Iy8JNZwjddmTrTI2YzBT402++
      xq89sI+9HStfbFtpeY7j8uyrZxieSvLbH72VUODq306rWd4FXtsDvL+9zsIC5sgIwjAx+vqw
      xsdBCNR4nODuTvw7d+KLx1F0HTdfYPHZZ7ETCSo/91m0ysp1mxpR2DbO/ALpn/wE/84dhI4c
      QVHVrRMAgJmFLH/21Gt86WNHaK2rKHp5ecPmb55/m5qKEB+5Y9eyh17F1A9kAJbjFgrkRkcR
      g0OY5weWzhS5Dk5ilopPfoLQ7bdd7MTKuUGvobYyzJc+eoivPfc2v/34YRprrv8i3Vwqx188
      e4y7D7Ry94E2THPlwynpxqhlZeitrQQ6l2YZFK6L2X8ee2aa0B23b+qFxC03v0ZdZZgvPnaI
      rz79BlPzmVV/zrQc3umf4qtPv8GT9+7hnoPt8gruJlFUlcDuTsJ33rnpf4MttQe4oLm2nC8+
      9gH++3fe5Pc+dftlnekLbMdlfi7N8HSK4akkJ87PcH5inj/70sM0FbHnkLanLRkAgJ1NVXzh
      Qwf56tNv8OuPHCCg+xiYWGBgcoGxxCLZvElVeYj2+hh72uI8cGgHpuUUddgkbV9FB6CQSTI0
      No0vEKQqpDGRWKCpbSepmVHSBYe9e/egrfPebVdzFR/c38K//euXuGN/CzsaYhzpbuKjd3bj
      1wRla3S5XNq+ig5AIFxBdWWOicQihazNvr3d9PScQdE0OmrKGJnN0lYdxHVdXHflc+NCiKLK
      3XOwjZt31hKPXT5wxzTNdV3v1ax3e0utXCm3dzVlbqgT7PcvPRSPCzcBKEt3Al463/x6d3J8
      mnrFxi9Jq1X0HiCdnGNyZo7yWCXVIR89p8/S0rGL1MwoIws2e7pDqMpSANRV3Ki0XcqpqlrS
      9dsO7b3wBbtSudWUKToA5ZU1lFfWXHwdi9cDUNGxq9hFStKG23LXAbaLzT7/LS3ZsqdBS5mT
      Ti/1hfJ5ANRQCDebRYvHEaaJyBdQI7LfUgrkHmCNCSFwM1nM/n4Uvx9rdAyjrw+3UABYukFs
      bAyRL2xyTa+Pm8thJxKbXY01J/cA68BNpfDv2ImwTPTmJhRdxxweRm9sRK+vp9B7GrW1ZbOr
      eU3CNDFnZjAHhzAHBjD7zgFQ90f/qejRV6VIBmAdCATO/BxaZRX4fOSPn8Df1oqbz4Oq4e/o
      QA2VxnQzbj6Pk0qBbb+7sQ9iT0/jWBb++jr87W1E7r4b7WMfA9fZVhs/yACsOTeTwVezdHZM
      WCb21BT2+DjW0BC+ujr8O3eixSqwZ2dhNTOlmSb2pSOuTBM3k0WrqrxmuSsIgTBNrIUF7HQa
      e2oae3oac3AIO5Eg0LkLva2NwN5uwvfdg+3z4b90vdbSXbP27Ozli73WOrcAGYA1poZCaJc8
      TESrqCDQ1YVrGBg9PSw+8wzCcQgcPox+6AOokWvPuqEaBuTymEODGH3nMHp7sadn0FtbQNNQ
      dB3FpyN0HV80ghoMXty7WNPTqGVl2FPTuLncUtnqagLNTfjb2gjddhQ1FEIYBlrl5YESpom2
      mo373Y7+ViUDsMaUdzfK99N0ndDRowSPHMFJJln82cvM/eX/QqupJnzH7QS6u1F8PoTjYCcS
      GH3nMPv7MSen0EIh/G2tBD9wC+WPPQbCRY1EEJa1NAbXsjDSGTTbQmRzuLks1uQU2A6ho0fw
      1dWhhsMoPt+qB7rgusu244r2FrZWZ/79ZAA2mKIo+CorCX/4Q/gf/wjW8AjZV18l+a1vI/J5
      tFgMraoK/86dRO67F7emhrKrjLi6dKIoLRQq+knxXiYDsIkUVcXf0Y6/ox1rcgrj7JmlQSKX
      bNiGYVz189KNkwEoEXpDPXpD/WZXw3O21zktSbpOMgCSp8kASJ5WdB8gl15gZHyavOkSDYCD
      Rm1DM+ODfZiWw56Dhwj65B2PUmkrOgChaIy66gJjsxn8OuQMC8MooASC7GsJMzyTZmdduKQf
      orYe5WR7S6d+N/SQvJVk5iYZT1rs7+4knV6ksUynt28QhEsylaWipg5N0+RD40qsftuhvWv5
      kLzi+wCaH59bYGh0HFXYDI5M0NXVRVtjLQV/jNro1r5HRPKGovcAkVgN3bH3hkR2Viw9RilQ
      Xcu1Z+2UpNIhzwJJniYDIHmaDIDkaTIAkqfJAEieVjIBkPPkSJuhZALw/ins7Pl50j95AWEt
      /+A8SVoL6z4eQAixNNPA/Dy++rqlQePV1VjjEwQPHsAcGsLN5vDt3HFxkLhwHBa/938xenvJ
      HzsGmoavthZ/eztKQwN6ayvqKp7rJUkr+f9wXpVaercVsgAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
