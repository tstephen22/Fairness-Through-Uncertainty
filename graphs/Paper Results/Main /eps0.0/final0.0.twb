<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20233.23.1017.0948                               -->
<workbook original-version='18.1' source-build='2023.3.0 (20233.23.1017.0948)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.PatternedLineMarks.true...PatternedLineMarks />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='mean_eps_0.00' inline='true' name='federated.0al7rki100lexz144t0ig140j05b' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='mean_eps_0.00' name='textscan.0x51imj1kx2ais12tjiwp0vhelk0'>
            <connection class='textscan' directory='C:/Users/theos/OneDrive/Desktop/College/5th year/Thesis/Results/Fairness Regularisation/Charts/eps0.0/Regularisation_plots_0.00' filename='mean_eps_0.00.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0x51imj1kx2ais12tjiwp0vhelk0' name='mean_eps_0.00.csv' table='[mean_eps_0.00#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=' '>
            <column datatype='string' name='F1' ordinal='0' />
            <column datatype='real' name='Layer' ordinal='1' />
            <column datatype='real' name='Neurons' ordinal='2' />
            <column datatype='real' name='BNNAccuracy' ordinal='3' />
            <column datatype='real' name='BNNFairTrainingAccuracy' ordinal='4' />
            <column datatype='real' name='BNNMaxDifference' ordinal='5' />
            <column datatype='real' name='BNNFairTrainingMaxDifference' ordinal='6' />
            <column datatype='real' name='BNNMinDifference' ordinal='7' />
            <column datatype='real' name='BNNFairTrainingMinDifference' ordinal='8' />
            <column datatype='real' name='BNNFairnessScore' ordinal='9' />
            <column datatype='real' name='BNNFairTrainingFairnessScore' ordinal='10' />
            <column datatype='real' name='BNNAvgDiff' ordinal='11' />
            <column datatype='real' name='BNNFairTrainingAvgDiff' ordinal='12' />
            <column datatype='real' name='BNNRecall' ordinal='13' />
            <column datatype='real' name='BNNFairTrainingRecall' ordinal='14' />
            <column datatype='real' name='BNNPrecision' ordinal='15' />
            <column datatype='real' name='BNNFairTrainingPrecision' ordinal='16' />
            <column datatype='real' name='BNNMeanEntropy' ordinal='17' />
            <column datatype='real' name='BNNFairTrainingMeanEntropy' ordinal='18' />
            <column datatype='real' name='BNNTime' ordinal='19' />
            <column datatype='real' name='BNNFairTrainingTime' ordinal='20' />
            <column datatype='real' name='BNNAdversaryAccuracy' ordinal='21' />
            <column datatype='real' name='BNNAdversaryMaxDifference' ordinal='22' />
            <column datatype='real' name='BNNAdversaryMinDifference' ordinal='23' />
            <column datatype='real' name='BNNAdversaryFairnessScore' ordinal='24' />
            <column datatype='real' name='BNNAdversaryAvgDiff' ordinal='25' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0x51imj1kx2ais12tjiwp0vhelk0' name='mean_eps_0.00.csv' table='[mean_eps_0.00#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=' '>
            <column datatype='string' name='F1' ordinal='0' />
            <column datatype='real' name='Layer' ordinal='1' />
            <column datatype='real' name='Neurons' ordinal='2' />
            <column datatype='real' name='BNNAccuracy' ordinal='3' />
            <column datatype='real' name='BNNFairTrainingAccuracy' ordinal='4' />
            <column datatype='real' name='BNNMaxDifference' ordinal='5' />
            <column datatype='real' name='BNNFairTrainingMaxDifference' ordinal='6' />
            <column datatype='real' name='BNNMinDifference' ordinal='7' />
            <column datatype='real' name='BNNFairTrainingMinDifference' ordinal='8' />
            <column datatype='real' name='BNNFairnessScore' ordinal='9' />
            <column datatype='real' name='BNNFairTrainingFairnessScore' ordinal='10' />
            <column datatype='real' name='BNNAvgDiff' ordinal='11' />
            <column datatype='real' name='BNNFairTrainingAvgDiff' ordinal='12' />
            <column datatype='real' name='BNNRecall' ordinal='13' />
            <column datatype='real' name='BNNFairTrainingRecall' ordinal='14' />
            <column datatype='real' name='BNNPrecision' ordinal='15' />
            <column datatype='real' name='BNNFairTrainingPrecision' ordinal='16' />
            <column datatype='real' name='BNNMeanEntropy' ordinal='17' />
            <column datatype='real' name='BNNFairTrainingMeanEntropy' ordinal='18' />
            <column datatype='real' name='BNNTime' ordinal='19' />
            <column datatype='real' name='BNNFairTrainingTime' ordinal='20' />
            <column datatype='real' name='BNNAdversaryAccuracy' ordinal='21' />
            <column datatype='real' name='BNNAdversaryMaxDifference' ordinal='22' />
            <column datatype='real' name='BNNAdversaryMinDifference' ordinal='23' />
            <column datatype='real' name='BNNAdversaryFairnessScore' ordinal='24' />
            <column datatype='real' name='BNNAdversaryAvgDiff' ordinal='25' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[mean_eps_0.00.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot; &quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[mean_eps_0.00.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.00.csv_F8F83924409140EAA0B1A077DA2ECD30]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Layer</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Layer]</local-name>
            <parent-name>[mean_eps_0.00.csv]</parent-name>
            <remote-alias>Layer</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.00.csv_F8F83924409140EAA0B1A077DA2ECD30]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Neurons</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Neurons]</local-name>
            <parent-name>[mean_eps_0.00.csv]</parent-name>
            <remote-alias>Neurons</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.00.csv_F8F83924409140EAA0B1A077DA2ECD30]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNAccuracy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNAccuracy]</local-name>
            <parent-name>[mean_eps_0.00.csv]</parent-name>
            <remote-alias>BNNAccuracy</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.00.csv_F8F83924409140EAA0B1A077DA2ECD30]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNFairTrainingAccuracy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNFairTrainingAccuracy]</local-name>
            <parent-name>[mean_eps_0.00.csv]</parent-name>
            <remote-alias>BNNFairTrainingAccuracy</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.00.csv_F8F83924409140EAA0B1A077DA2ECD30]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNMaxDifference</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNMaxDifference]</local-name>
            <parent-name>[mean_eps_0.00.csv]</parent-name>
            <remote-alias>BNNMaxDifference</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.00.csv_F8F83924409140EAA0B1A077DA2ECD30]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNFairTrainingMaxDifference</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNFairTrainingMaxDifference]</local-name>
            <parent-name>[mean_eps_0.00.csv]</parent-name>
            <remote-alias>BNNFairTrainingMaxDifference</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.00.csv_F8F83924409140EAA0B1A077DA2ECD30]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNMinDifference</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNMinDifference]</local-name>
            <parent-name>[mean_eps_0.00.csv]</parent-name>
            <remote-alias>BNNMinDifference</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.00.csv_F8F83924409140EAA0B1A077DA2ECD30]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNFairTrainingMinDifference</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNFairTrainingMinDifference]</local-name>
            <parent-name>[mean_eps_0.00.csv]</parent-name>
            <remote-alias>BNNFairTrainingMinDifference</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.00.csv_F8F83924409140EAA0B1A077DA2ECD30]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNFairnessScore</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNFairnessScore]</local-name>
            <parent-name>[mean_eps_0.00.csv]</parent-name>
            <remote-alias>BNNFairnessScore</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.00.csv_F8F83924409140EAA0B1A077DA2ECD30]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNFairTrainingFairnessScore</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNFairTrainingFairnessScore]</local-name>
            <parent-name>[mean_eps_0.00.csv]</parent-name>
            <remote-alias>BNNFairTrainingFairnessScore</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.00.csv_F8F83924409140EAA0B1A077DA2ECD30]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNAvgDiff</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNAvgDiff]</local-name>
            <parent-name>[mean_eps_0.00.csv]</parent-name>
            <remote-alias>BNNAvgDiff</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.00.csv_F8F83924409140EAA0B1A077DA2ECD30]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNFairTrainingAvgDiff</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNFairTrainingAvgDiff]</local-name>
            <parent-name>[mean_eps_0.00.csv]</parent-name>
            <remote-alias>BNNFairTrainingAvgDiff</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.00.csv_F8F83924409140EAA0B1A077DA2ECD30]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNRecall</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNRecall]</local-name>
            <parent-name>[mean_eps_0.00.csv]</parent-name>
            <remote-alias>BNNRecall</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.00.csv_F8F83924409140EAA0B1A077DA2ECD30]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNFairTrainingRecall</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNFairTrainingRecall]</local-name>
            <parent-name>[mean_eps_0.00.csv]</parent-name>
            <remote-alias>BNNFairTrainingRecall</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.00.csv_F8F83924409140EAA0B1A077DA2ECD30]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNPrecision</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNPrecision]</local-name>
            <parent-name>[mean_eps_0.00.csv]</parent-name>
            <remote-alias>BNNPrecision</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.00.csv_F8F83924409140EAA0B1A077DA2ECD30]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNFairTrainingPrecision</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNFairTrainingPrecision]</local-name>
            <parent-name>[mean_eps_0.00.csv]</parent-name>
            <remote-alias>BNNFairTrainingPrecision</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.00.csv_F8F83924409140EAA0B1A077DA2ECD30]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNMeanEntropy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNMeanEntropy]</local-name>
            <parent-name>[mean_eps_0.00.csv]</parent-name>
            <remote-alias>BNNMeanEntropy</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.00.csv_F8F83924409140EAA0B1A077DA2ECD30]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNFairTrainingMeanEntropy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNFairTrainingMeanEntropy]</local-name>
            <parent-name>[mean_eps_0.00.csv]</parent-name>
            <remote-alias>BNNFairTrainingMeanEntropy</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.00.csv_F8F83924409140EAA0B1A077DA2ECD30]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNTime</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNTime]</local-name>
            <parent-name>[mean_eps_0.00.csv]</parent-name>
            <remote-alias>BNNTime</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.00.csv_F8F83924409140EAA0B1A077DA2ECD30]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNFairTrainingTime</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNFairTrainingTime]</local-name>
            <parent-name>[mean_eps_0.00.csv]</parent-name>
            <remote-alias>BNNFairTrainingTime</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.00.csv_F8F83924409140EAA0B1A077DA2ECD30]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNAdversaryAccuracy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNAdversaryAccuracy]</local-name>
            <parent-name>[mean_eps_0.00.csv]</parent-name>
            <remote-alias>BNNAdversaryAccuracy</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.00.csv_F8F83924409140EAA0B1A077DA2ECD30]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNAdversaryMaxDifference</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNAdversaryMaxDifference]</local-name>
            <parent-name>[mean_eps_0.00.csv]</parent-name>
            <remote-alias>BNNAdversaryMaxDifference</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.00.csv_F8F83924409140EAA0B1A077DA2ECD30]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNAdversaryMinDifference</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNAdversaryMinDifference]</local-name>
            <parent-name>[mean_eps_0.00.csv]</parent-name>
            <remote-alias>BNNAdversaryMinDifference</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.00.csv_F8F83924409140EAA0B1A077DA2ECD30]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNAdversaryFairnessScore</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNAdversaryFairnessScore]</local-name>
            <parent-name>[mean_eps_0.00.csv]</parent-name>
            <remote-alias>BNNAdversaryFairnessScore</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.00.csv_F8F83924409140EAA0B1A077DA2ECD30]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNAdversaryAvgDiff</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNAdversaryAvgDiff]</local-name>
            <parent-name>[mean_eps_0.00.csv]</parent-name>
            <remote-alias>BNNAdversaryAvgDiff</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.00.csv_F8F83924409140EAA0B1A077DA2ECD30]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='BNN Accuracy' datatype='real' name='[BNNAccuracy]' role='measure' type='quantitative' />
      <column caption='BNN Adversary Accuracy' datatype='real' name='[BNNAdversaryAccuracy]' role='measure' type='quantitative' />
      <column caption='BNN Adversary Avg Diff' datatype='real' name='[BNNAdversaryAvgDiff]' role='measure' type='quantitative' />
      <column caption='BNN Adversary Fairness Score' datatype='real' name='[BNNAdversaryFairnessScore]' role='measure' type='quantitative' />
      <column caption='BNN Adversary Max Difference' datatype='real' name='[BNNAdversaryMaxDifference]' role='measure' type='quantitative' />
      <column caption='BNN Adversary Min Difference' datatype='real' name='[BNNAdversaryMinDifference]' role='measure' type='quantitative' />
      <column caption='BNN Avg Diff' datatype='real' name='[BNNAvgDiff]' role='measure' type='quantitative' />
      <column caption='BNN Fair Training Accuracy' datatype='real' name='[BNNFairTrainingAccuracy]' role='measure' type='quantitative' />
      <column caption='BNN Fair Training Avg Diff' datatype='real' name='[BNNFairTrainingAvgDiff]' role='measure' type='quantitative' />
      <column caption='BNN Fair Training Fairness Score' datatype='real' name='[BNNFairTrainingFairnessScore]' role='measure' type='quantitative' />
      <column caption='BNN Fair Training Max Difference' datatype='real' name='[BNNFairTrainingMaxDifference]' role='measure' type='quantitative' />
      <column caption='BNN Fair Training Mean Entropy' datatype='real' name='[BNNFairTrainingMeanEntropy]' role='measure' type='quantitative' />
      <column caption='BNN Fair Training Min Difference' datatype='real' name='[BNNFairTrainingMinDifference]' role='measure' type='quantitative' />
      <column caption='BNN Fair Training Precision' datatype='real' name='[BNNFairTrainingPrecision]' role='measure' type='quantitative' />
      <column caption='BNN Fair Training Recall' datatype='real' name='[BNNFairTrainingRecall]' role='measure' type='quantitative' />
      <column caption='BNN Fair Training Time' datatype='real' name='[BNNFairTrainingTime]' role='measure' type='quantitative' />
      <column caption='BNN Fairness Score' datatype='real' name='[BNNFairnessScore]' role='measure' type='quantitative' />
      <column caption='BNN Max Difference' datatype='real' name='[BNNMaxDifference]' role='measure' type='quantitative' />
      <column caption='BNN Mean Entropy' datatype='real' name='[BNNMeanEntropy]' role='measure' type='quantitative' />
      <column caption='BNN Min Difference' datatype='real' name='[BNNMinDifference]' role='measure' type='quantitative' />
      <column caption='BNN Precision' datatype='real' name='[BNNPrecision]' role='measure' type='quantitative' />
      <column caption='BNN Recall' datatype='real' name='[BNNRecall]' role='measure' type='quantitative' />
      <column caption='BNN Time' datatype='real' name='[BNNTime]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='mean_eps_0.00.csv' datatype='table' name='[__tableau_internal_object_id__].[mean_eps_0.00.csv_F8F83924409140EAA0B1A077DA2ECD30]' role='measure' type='quantitative' />
      <column-instance column='[BNNAccuracy]' derivation='Sum' name='[sum:BNNAccuracy:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BNNAvgDiff]' derivation='Sum' name='[sum:BNNAvgDiff:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BNNFairTrainingAccuracy]' derivation='Sum' name='[sum:BNNFairTrainingAccuracy:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BNNFairTrainingAvgDiff]' derivation='Sum' name='[sum:BNNFairTrainingAvgDiff:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BNNFairTrainingFairnessScore]' derivation='Sum' name='[sum:BNNFairTrainingFairnessScore:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BNNFairTrainingMeanEntropy]' derivation='Sum' name='[sum:BNNFairTrainingMeanEntropy:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BNNFairTrainingPrecision]' derivation='Sum' name='[sum:BNNFairTrainingPrecision:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BNNFairTrainingRecall]' derivation='Sum' name='[sum:BNNFairTrainingRecall:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BNNFairTrainingTime]' derivation='Sum' name='[sum:BNNFairTrainingTime:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BNNFairnessScore]' derivation='Sum' name='[sum:BNNFairnessScore:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BNNMeanEntropy]' derivation='Sum' name='[sum:BNNMeanEntropy:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BNNPrecision]' derivation='Sum' name='[sum:BNNPrecision:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BNNRecall]' derivation='Sum' name='[sum:BNNRecall:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BNNTime]' derivation='Sum' name='[sum:BNNTime:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0al7rki100lexz144t0ig140j05b]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairTrainingAvgDiff:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairTrainingFairnessScore:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairTrainingTime:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNAccuracy:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairTrainingAccuracy:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNPrecision:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNRecall:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairTrainingPrecision:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairTrainingRecall:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNAvgDiff:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairnessScore:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNTime:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairTrainingMeanEntropy:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNMeanEntropy:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Ireland&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='mean_eps_0.00.csv' id='mean_eps_0.00.csv_F8F83924409140EAA0B1A077DA2ECD30'>
            <properties context=''>
              <relation connection='textscan.0x51imj1kx2ais12tjiwp0vhelk0' name='mean_eps_0.00.csv' table='[mean_eps_0.00#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=' '>
                  <column datatype='string' name='F1' ordinal='0' />
                  <column datatype='real' name='Layer' ordinal='1' />
                  <column datatype='real' name='Neurons' ordinal='2' />
                  <column datatype='real' name='BNNAccuracy' ordinal='3' />
                  <column datatype='real' name='BNNFairTrainingAccuracy' ordinal='4' />
                  <column datatype='real' name='BNNMaxDifference' ordinal='5' />
                  <column datatype='real' name='BNNFairTrainingMaxDifference' ordinal='6' />
                  <column datatype='real' name='BNNMinDifference' ordinal='7' />
                  <column datatype='real' name='BNNFairTrainingMinDifference' ordinal='8' />
                  <column datatype='real' name='BNNFairnessScore' ordinal='9' />
                  <column datatype='real' name='BNNFairTrainingFairnessScore' ordinal='10' />
                  <column datatype='real' name='BNNAvgDiff' ordinal='11' />
                  <column datatype='real' name='BNNFairTrainingAvgDiff' ordinal='12' />
                  <column datatype='real' name='BNNRecall' ordinal='13' />
                  <column datatype='real' name='BNNFairTrainingRecall' ordinal='14' />
                  <column datatype='real' name='BNNPrecision' ordinal='15' />
                  <column datatype='real' name='BNNFairTrainingPrecision' ordinal='16' />
                  <column datatype='real' name='BNNMeanEntropy' ordinal='17' />
                  <column datatype='real' name='BNNFairTrainingMeanEntropy' ordinal='18' />
                  <column datatype='real' name='BNNTime' ordinal='19' />
                  <column datatype='real' name='BNNFairTrainingTime' ordinal='20' />
                  <column datatype='real' name='BNNAdversaryAccuracy' ordinal='21' />
                  <column datatype='real' name='BNNAdversaryMaxDifference' ordinal='22' />
                  <column datatype='real' name='BNNAdversaryMinDifference' ordinal='23' />
                  <column datatype='real' name='BNNAdversaryFairnessScore' ordinal='24' />
                  <column datatype='real' name='BNNAdversaryAvgDiff' ordinal='25' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Accuracy'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Accuracy for BNN and BNN with fair training, epsilon = 0.00</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='mean_eps_0.00' name='federated.0al7rki100lexz144t0ig140j05b' />
          </datasources>
          <datasource-dependencies datasource='federated.0al7rki100lexz144t0ig140j05b'>
            <column caption='BNN Accuracy' datatype='real' name='[BNNAccuracy]' role='measure' type='quantitative' />
            <column caption='BNN Fair Training Accuracy' datatype='real' name='[BNNFairTrainingAccuracy]' role='measure' type='quantitative' />
            <column caption='BNN Fair Training Fairness Score' datatype='real' name='[BNNFairTrainingFairnessScore]' role='measure' type='quantitative' />
            <column caption='BNN Fairness Score' datatype='real' name='[BNNFairnessScore]' role='measure' type='quantitative' />
            <column datatype='real' name='[Layer]' role='measure' type='quantitative' />
            <column datatype='real' name='[Neurons]' role='measure' type='quantitative' />
            <column-instance column='[Layer]' derivation='None' name='[none:Layer:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Neurons]' derivation='None' name='[none:Neurons:ok]' pivot='key' type='ordinal' />
            <column-instance column='[BNNAccuracy]' derivation='Sum' name='[sum:BNNAccuracy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNFairTrainingAccuracy]' derivation='Sum' name='[sum:BNNFairTrainingAccuracy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNFairTrainingFairnessScore]' derivation='Sum' name='[sum:BNNFairTrainingFairnessScore:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNFairnessScore]' derivation='Sum' name='[sum:BNNFairnessScore:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairTrainingFairnessScore:qk]' scope='rows' value='BNN Fair Training' />
            <format attr='title' class='0' field='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairnessScore:qk]' scope='rows' value='BNN' />
            <encoding attr='space' class='0' field='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairnessScore:qk]' field-type='quantitative' max='1.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNAccuracy:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' field='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairTrainingAccuracy:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='0' field='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNAccuracy:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairTrainingAccuracy:qk]' scope='rows' value='' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='text-align' id='refline8' value='left' />
            <format attr='vertical-align' id='refline8' value='top' />
            <format attr='fill-above' id='refline8' value='#00000000' />
            <format attr='fill-below' id='refline8' value='#00000000' />
            <format attr='text-align' id='refline9' value='left' />
            <format attr='vertical-align' id='refline6' value='top' />
            <format attr='text-align' id='refline6' value='right' />
            <format attr='text-orientation' id='refline6' value='0' />
            <format attr='wrap' id='refline6' value='off' />
            <format attr='font-size' id='refline6' value='7' />
            <format attr='color' id='refline6' value='#555555a7' />
            <format attr='color' id='refline1' value='#555555a7' />
            <format attr='font-size' id='refline1' value='7' />
            <format attr='color' id='refline0' value='#555555a7' />
            <format attr='font-size' id='refline0' value='7' />
            <format attr='font-size' id='refline2' value='7' />
            <format attr='color' id='refline2' value='#555555a7' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='fill-color' id='refline3' value='#faf4e7' />
            <format attr='fill-color' id='refline0' value='#e9ebe0' />
            <format attr='fill-color' id='refline2' value='#e9ebe0' />
            <format attr='fill-color' id='refline1' value='#eff3e3' />
            <format attr='fill-color' id='refline6' value='#e9ebe0' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='cols' value='#e6e6e6' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0al7rki100lexz144t0ig140j05b].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNAccuracy:qk]' enable-instant-analytics='true' formula='min' id='refline0' label-type='value' paired-id='refline1' scope='per-pane' symmetric='false' value-column='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNAccuracy:qk]' z-order='1' />
            <reference-line axis-column='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNAccuracy:qk]' enable-instant-analytics='true' formula='max' id='refline1' label-type='value' paired-id='refline0' scope='per-pane' symmetric='false' value-column='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNAccuracy:qk]' z-order='2' />
            <reference-line axis-column='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairTrainingAccuracy:qk]' enable-instant-analytics='true' formula='min' id='refline2' label-type='value' paired-id='refline3' scope='per-pane' symmetric='false' value-column='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairTrainingAccuracy:qk]' z-order='3' />
            <reference-line axis-column='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairTrainingAccuracy:qk]' enable-instant-analytics='true' formula='max' id='refline3' label-type='value' paired-id='refline2' scope='per-pane' symmetric='false' value-column='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairTrainingAccuracy:qk]' z-order='4' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairnessScore:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0al7rki100lexz144t0ig140j05b].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='dotted' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairTrainingFairnessScore:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0al7rki100lexz144t0ig140j05b].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='dotted' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNAccuracy:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0al7rki100lexz144t0ig140j05b].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairTrainingAccuracy:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0al7rki100lexz144t0ig140j05b].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairnessScore:qk] + ([federated.0al7rki100lexz144t0ig140j05b].[sum:BNNAccuracy:qk] + ([federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairTrainingFairnessScore:qk] + [federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairTrainingAccuracy:qk])))</rows>
        <cols>([federated.0al7rki100lexz144t0ig140j05b].[none:Layer:ok] / [federated.0al7rki100lexz144t0ig140j05b].[none:Neurons:ok])</cols>
      </table>
      <simple-id uuid='{00BA2697-085A-4789-B050-B56E1B631222}' />
    </worksheet>
    <worksheet name='Average Difference'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average Difference for BNN and BNN with fair training, epsilon = 0.00</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='mean_eps_0.00' name='federated.0al7rki100lexz144t0ig140j05b' />
          </datasources>
          <datasource-dependencies datasource='federated.0al7rki100lexz144t0ig140j05b'>
            <column caption='BNN Avg Diff' datatype='real' name='[BNNAvgDiff]' role='measure' type='quantitative' />
            <column caption='BNN Fair Training Avg Diff' datatype='real' name='[BNNFairTrainingAvgDiff]' role='measure' type='quantitative' />
            <column datatype='real' name='[Layer]' role='measure' type='quantitative' />
            <column datatype='real' name='[Neurons]' role='measure' type='quantitative' />
            <column-instance column='[Layer]' derivation='None' name='[none:Layer:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Neurons]' derivation='None' name='[none:Neurons:ok]' pivot='key' type='ordinal' />
            <column-instance column='[BNNAvgDiff]' derivation='Sum' name='[sum:BNNAvgDiff:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNFairTrainingAvgDiff]' derivation='Sum' name='[sum:BNNFairTrainingAvgDiff:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-color' scope='cols' value='#b07aa1' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <encoding attr='space' class='0' field='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairTrainingAvgDiff:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' field='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNAvgDiff:qk]' field-type='quantitative' max='1.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNAvgDiff:qk]' scope='rows' value='Average Difference' />
            <format attr='title' class='0' field='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairTrainingAvgDiff:qk]' scope='rows' value='' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0al7rki100lexz144t0ig140j05b].[none:Neurons:ok]' value='40' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='font-size' id='refline1' value='7' />
            <format attr='color' id='refline1' value='#4e79a7' />
            <format attr='stroke-color' id='refline1' value='#4e79a74b' />
            <format attr='stroke-color' id='refline0' value='#e157594b' />
            <format attr='color' id='refline0' value='#e15759' />
            <format attr='font-size' id='refline0' value='7' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='cols' value='#e6e6e6' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-color' scope='cols' value='#c0c0c0' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0al7rki100lexz144t0ig140j05b].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNAvgDiff:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0al7rki100lexz144t0ig140j05b].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairTrainingAvgDiff:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0al7rki100lexz144t0ig140j05b].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0al7rki100lexz144t0ig140j05b].[sum:BNNAvgDiff:qk] + [federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairTrainingAvgDiff:qk])</rows>
        <cols>([federated.0al7rki100lexz144t0ig140j05b].[none:Layer:ok] / [federated.0al7rki100lexz144t0ig140j05b].[none:Neurons:ok])</cols>
      </table>
      <simple-id uuid='{93544968-2B9D-49AA-B032-2066F26A9B89}' />
    </worksheet>
    <worksheet name='Entropy'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Mean Predictive Entropy for BNN and BNN with fair training, epsilon = 0.00</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='mean_eps_0.00' name='federated.0al7rki100lexz144t0ig140j05b' />
          </datasources>
          <datasource-dependencies datasource='federated.0al7rki100lexz144t0ig140j05b'>
            <column caption='BNN Fair Training Fairness Score' datatype='real' name='[BNNFairTrainingFairnessScore]' role='measure' type='quantitative' />
            <column caption='BNN Fair Training Mean Entropy' datatype='real' name='[BNNFairTrainingMeanEntropy]' role='measure' type='quantitative' />
            <column caption='BNN Fairness Score' datatype='real' name='[BNNFairnessScore]' role='measure' type='quantitative' />
            <column caption='BNN Mean Entropy' datatype='real' name='[BNNMeanEntropy]' role='measure' type='quantitative' />
            <column datatype='real' name='[Layer]' role='measure' type='quantitative' />
            <column datatype='real' name='[Neurons]' role='measure' type='quantitative' />
            <column-instance column='[Layer]' derivation='None' name='[none:Layer:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Neurons]' derivation='None' name='[none:Neurons:ok]' pivot='key' type='ordinal' />
            <column-instance column='[BNNFairTrainingFairnessScore]' derivation='Sum' name='[sum:BNNFairTrainingFairnessScore:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNFairTrainingMeanEntropy]' derivation='Sum' name='[sum:BNNFairTrainingMeanEntropy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNFairnessScore]' derivation='Sum' name='[sum:BNNFairnessScore:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNMeanEntropy]' derivation='Sum' name='[sum:BNNMeanEntropy:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairTrainingFairnessScore:qk]' scope='rows' value='BNN Fair Training' />
            <format attr='title' class='0' field='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairnessScore:qk]' scope='rows' value='BNN' />
            <encoding attr='space' class='0' field='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairnessScore:qk]' field-type='quantitative' max='1.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairTrainingMeanEntropy:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' field='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNMeanEntropy:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='0' field='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNMeanEntropy:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairTrainingMeanEntropy:qk]' scope='rows' value='' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='text-align' id='refline8' value='left' />
            <format attr='vertical-align' id='refline8' value='top' />
            <format attr='fill-above' id='refline8' value='#00000000' />
            <format attr='fill-below' id='refline8' value='#00000000' />
            <format attr='text-align' id='refline9' value='left' />
            <format attr='vertical-align' id='refline6' value='top' />
            <format attr='text-align' id='refline6' value='right' />
            <format attr='text-orientation' id='refline6' value='0' />
            <format attr='wrap' id='refline6' value='off' />
            <format attr='font-size' id='refline6' value='7' />
            <format attr='color' id='refline6' value='#555555a7' />
            <format attr='color' id='refline1' value='#555555a7' />
            <format attr='font-size' id='refline1' value='7' />
            <format attr='color' id='refline0' value='#555555a7' />
            <format attr='font-size' id='refline0' value='7' />
            <format attr='font-size' id='refline2' value='7' />
            <format attr='color' id='refline2' value='#555555a7' />
            <format attr='color' id='refline4' value='#555555a7' />
            <format attr='font-size' id='refline4' value='7' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='fill-color' id='refline3' value='#faf4e7' />
            <format attr='fill-color' id='refline0' value='#e9ebe0' />
            <format attr='fill-color' id='refline2' value='#e9ebe0' />
            <format attr='fill-color' id='refline1' value='#eff3e3' />
            <format attr='fill-color' id='refline6' value='#f5eddc' />
            <format attr='fill-color' id='refline4' value='#f5eddc' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='cols' value='#e6e6e6' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0al7rki100lexz144t0ig140j05b].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNMeanEntropy:qk]' enable-instant-analytics='true' formula='min' id='refline4' label-type='value' paired-id='refline5' scope='per-pane' symmetric='false' value-column='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNMeanEntropy:qk]' z-order='1' />
            <reference-line axis-column='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNMeanEntropy:qk]' enable-instant-analytics='true' formula='max' id='refline5' label-type='value' paired-id='refline4' scope='per-pane' symmetric='false' value-column='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNMeanEntropy:qk]' z-order='2' />
            <reference-line axis-column='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairTrainingMeanEntropy:qk]' enable-instant-analytics='true' formula='min' id='refline6' label-type='value' paired-id='refline7' scope='per-pane' symmetric='false' value-column='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairTrainingMeanEntropy:qk]' z-order='3' />
            <reference-line axis-column='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairTrainingMeanEntropy:qk]' enable-instant-analytics='true' formula='max' id='refline7' label-type='value' paired-id='refline6' scope='per-pane' symmetric='false' value-column='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairTrainingMeanEntropy:qk]' z-order='4' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairnessScore:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0al7rki100lexz144t0ig140j05b].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='dotted' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairTrainingFairnessScore:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0al7rki100lexz144t0ig140j05b].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='dotted' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNMeanEntropy:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0al7rki100lexz144t0ig140j05b].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairTrainingMeanEntropy:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0al7rki100lexz144t0ig140j05b].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairnessScore:qk] + ([federated.0al7rki100lexz144t0ig140j05b].[sum:BNNMeanEntropy:qk] + ([federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairTrainingFairnessScore:qk] + [federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairTrainingMeanEntropy:qk])))</rows>
        <cols>([federated.0al7rki100lexz144t0ig140j05b].[none:Layer:ok] / [federated.0al7rki100lexz144t0ig140j05b].[none:Neurons:ok])</cols>
      </table>
      <simple-id uuid='{72E7FEE4-F3EB-437D-B42C-F4EAC815BB66}' />
    </worksheet>
    <worksheet name='Precision'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Precision for BNN and BNN with fair training, epsilon = 0.00</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='mean_eps_0.00' name='federated.0al7rki100lexz144t0ig140j05b' />
          </datasources>
          <datasource-dependencies datasource='federated.0al7rki100lexz144t0ig140j05b'>
            <column caption='BNN Fair Training Fairness Score' datatype='real' name='[BNNFairTrainingFairnessScore]' role='measure' type='quantitative' />
            <column caption='BNN Fair Training Precision' datatype='real' name='[BNNFairTrainingPrecision]' role='measure' type='quantitative' />
            <column caption='BNN Fairness Score' datatype='real' name='[BNNFairnessScore]' role='measure' type='quantitative' />
            <column caption='BNN Precision' datatype='real' name='[BNNPrecision]' role='measure' type='quantitative' />
            <column datatype='real' name='[Layer]' role='measure' type='quantitative' />
            <column datatype='real' name='[Neurons]' role='measure' type='quantitative' />
            <column-instance column='[Layer]' derivation='None' name='[none:Layer:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Neurons]' derivation='None' name='[none:Neurons:ok]' pivot='key' type='ordinal' />
            <column-instance column='[BNNFairTrainingFairnessScore]' derivation='Sum' name='[sum:BNNFairTrainingFairnessScore:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNFairTrainingPrecision]' derivation='Sum' name='[sum:BNNFairTrainingPrecision:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNFairnessScore]' derivation='Sum' name='[sum:BNNFairnessScore:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNPrecision]' derivation='Sum' name='[sum:BNNPrecision:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairTrainingFairnessScore:qk]' scope='rows' value='BNN Fair Training' />
            <format attr='title' class='0' field='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairnessScore:qk]' scope='rows' value='BNN' />
            <encoding attr='space' class='0' field='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairnessScore:qk]' field-type='quantitative' max='1.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNPrecision:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairTrainingPrecision:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='text-align' id='refline8' value='left' />
            <format attr='vertical-align' id='refline8' value='top' />
            <format attr='fill-above' id='refline8' value='#00000000' />
            <format attr='fill-below' id='refline8' value='#00000000' />
            <format attr='text-align' id='refline9' value='left' />
            <format attr='vertical-align' id='refline6' value='top' />
            <format attr='text-align' id='refline6' value='right' />
            <format attr='text-orientation' id='refline6' value='0' />
            <format attr='wrap' id='refline6' value='off' />
            <format attr='font-size' id='refline6' value='7' />
            <format attr='color' id='refline6' value='#555555a7' />
            <format attr='color' id='refline1' value='#555555a7' />
            <format attr='font-size' id='refline1' value='7' />
            <format attr='color' id='refline0' value='#555555a7' />
            <format attr='font-size' id='refline0' value='7' />
            <format attr='font-size' id='refline2' value='7' />
            <format attr='color' id='refline2' value='#555555a7' />
            <format attr='font-size' id='refline4' value='7' />
            <format attr='color' id='refline4' value='#555555a7' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='fill-color' id='refline3' value='#faf4e7' />
            <format attr='fill-color' id='refline0' value='#e9ebe0' />
            <format attr='fill-color' id='refline2' value='#e9ebe0' />
            <format attr='fill-color' id='refline1' value='#eff3e3' />
            <format attr='fill-color' id='refline6' value='#dfedeb' />
            <format attr='fill-color' id='refline4' value='#e9ebe0' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='cols' value='#e6e6e6' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0al7rki100lexz144t0ig140j05b].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNPrecision:qk]' enable-instant-analytics='true' formula='min' id='refline4' label-type='value' paired-id='refline5' scope='per-pane' symmetric='false' value-column='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNPrecision:qk]' z-order='1' />
            <reference-line axis-column='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNPrecision:qk]' enable-instant-analytics='true' formula='max' id='refline5' label-type='value' paired-id='refline4' scope='per-pane' symmetric='false' value-column='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNPrecision:qk]' z-order='2' />
            <reference-line axis-column='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairTrainingPrecision:qk]' enable-instant-analytics='true' formula='min' id='refline6' label-type='value' paired-id='refline7' scope='per-pane' symmetric='false' value-column='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairTrainingPrecision:qk]' z-order='3' />
            <reference-line axis-column='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairTrainingPrecision:qk]' enable-instant-analytics='true' formula='max' id='refline7' label-type='value' paired-id='refline6' scope='per-pane' symmetric='false' value-column='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairTrainingPrecision:qk]' z-order='4' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairnessScore:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0al7rki100lexz144t0ig140j05b].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='dotted' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairTrainingFairnessScore:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0al7rki100lexz144t0ig140j05b].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='dotted' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNPrecision:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0al7rki100lexz144t0ig140j05b].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairTrainingPrecision:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0al7rki100lexz144t0ig140j05b].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairnessScore:qk] + ([federated.0al7rki100lexz144t0ig140j05b].[sum:BNNPrecision:qk] + ([federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairTrainingFairnessScore:qk] + [federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairTrainingPrecision:qk])))</rows>
        <cols>([federated.0al7rki100lexz144t0ig140j05b].[none:Layer:ok] / [federated.0al7rki100lexz144t0ig140j05b].[none:Neurons:ok])</cols>
      </table>
      <simple-id uuid='{FE4F0100-D2C5-4E32-BA90-BD12EB367607}' />
    </worksheet>
    <worksheet name='Recall'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Recall for BNN and BNN with fair training, epsilon = 0.00</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='mean_eps_0.00' name='federated.0al7rki100lexz144t0ig140j05b' />
          </datasources>
          <datasource-dependencies datasource='federated.0al7rki100lexz144t0ig140j05b'>
            <column caption='BNN Fair Training Fairness Score' datatype='real' name='[BNNFairTrainingFairnessScore]' role='measure' type='quantitative' />
            <column caption='BNN Fair Training Recall' datatype='real' name='[BNNFairTrainingRecall]' role='measure' type='quantitative' />
            <column caption='BNN Fairness Score' datatype='real' name='[BNNFairnessScore]' role='measure' type='quantitative' />
            <column caption='BNN Recall' datatype='real' name='[BNNRecall]' role='measure' type='quantitative' />
            <column datatype='real' name='[Layer]' role='measure' type='quantitative' />
            <column datatype='real' name='[Neurons]' role='measure' type='quantitative' />
            <column-instance column='[Layer]' derivation='None' name='[none:Layer:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Neurons]' derivation='None' name='[none:Neurons:ok]' pivot='key' type='ordinal' />
            <column-instance column='[BNNFairTrainingFairnessScore]' derivation='Sum' name='[sum:BNNFairTrainingFairnessScore:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNFairTrainingRecall]' derivation='Sum' name='[sum:BNNFairTrainingRecall:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNFairnessScore]' derivation='Sum' name='[sum:BNNFairnessScore:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNRecall]' derivation='Sum' name='[sum:BNNRecall:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairTrainingFairnessScore:qk]' scope='rows' value='BNN Fair Training' />
            <format attr='title' class='0' field='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairnessScore:qk]' scope='rows' value='BNN' />
            <encoding attr='space' class='0' field='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairnessScore:qk]' field-type='quantitative' max='1.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNRecall:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' field='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairTrainingRecall:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='0' field='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNRecall:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairTrainingRecall:qk]' scope='rows' value='' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='text-align' id='refline8' value='left' />
            <format attr='vertical-align' id='refline8' value='top' />
            <format attr='fill-above' id='refline8' value='#00000000' />
            <format attr='fill-below' id='refline8' value='#00000000' />
            <format attr='text-align' id='refline9' value='left' />
            <format attr='vertical-align' id='refline6' value='top' />
            <format attr='text-align' id='refline6' value='right' />
            <format attr='text-orientation' id='refline6' value='0' />
            <format attr='wrap' id='refline6' value='off' />
            <format attr='font-size' id='refline6' value='7' />
            <format attr='color' id='refline6' value='#555555a7' />
            <format attr='color' id='refline1' value='#555555a7' />
            <format attr='font-size' id='refline1' value='7' />
            <format attr='color' id='refline0' value='#555555a7' />
            <format attr='font-size' id='refline0' value='7' />
            <format attr='font-size' id='refline2' value='7' />
            <format attr='color' id='refline2' value='#555555a7' />
            <format attr='font-size' id='refline4' value='7' />
            <format attr='color' id='refline4' value='#555555a7' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='fill-color' id='refline3' value='#faf4e7' />
            <format attr='fill-color' id='refline0' value='#e9ebe0' />
            <format attr='fill-color' id='refline2' value='#e9ebe0' />
            <format attr='fill-color' id='refline1' value='#eff3e3' />
            <format attr='fill-color' id='refline6' value='#dfedeb' />
            <format attr='fill-color' id='refline4' value='#e9ebe0' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='cols' value='#e6e6e6' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0al7rki100lexz144t0ig140j05b].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNRecall:qk]' enable-instant-analytics='true' formula='min' id='refline4' label-type='value' paired-id='refline5' scope='per-pane' symmetric='false' value-column='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNRecall:qk]' z-order='1' />
            <reference-line axis-column='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNRecall:qk]' enable-instant-analytics='true' formula='max' id='refline5' label-type='value' paired-id='refline4' scope='per-pane' symmetric='false' value-column='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNRecall:qk]' z-order='2' />
            <reference-line axis-column='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairTrainingRecall:qk]' enable-instant-analytics='true' formula='min' id='refline6' label-type='value' paired-id='refline7' scope='per-pane' symmetric='false' value-column='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairTrainingRecall:qk]' z-order='3' />
            <reference-line axis-column='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairTrainingRecall:qk]' enable-instant-analytics='true' formula='max' id='refline7' label-type='value' paired-id='refline6' scope='per-pane' symmetric='false' value-column='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairTrainingRecall:qk]' z-order='4' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairnessScore:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0al7rki100lexz144t0ig140j05b].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='dotted' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairTrainingFairnessScore:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0al7rki100lexz144t0ig140j05b].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='dotted' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNRecall:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0al7rki100lexz144t0ig140j05b].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairTrainingRecall:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0al7rki100lexz144t0ig140j05b].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairnessScore:qk] + ([federated.0al7rki100lexz144t0ig140j05b].[sum:BNNRecall:qk] + ([federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairTrainingFairnessScore:qk] + [federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairTrainingRecall:qk])))</rows>
        <cols>([federated.0al7rki100lexz144t0ig140j05b].[none:Layer:ok] / [federated.0al7rki100lexz144t0ig140j05b].[none:Neurons:ok])</cols>
      </table>
      <simple-id uuid='{7253F066-C903-4160-99B8-3703C160094E}' />
    </worksheet>
    <worksheet name='Threshold-Fairness'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Threshold-Fairness Score for BNN and BNN with fair training, epsilon = 0.00</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='mean_eps_0.00' name='federated.0al7rki100lexz144t0ig140j05b' />
          </datasources>
          <datasource-dependencies datasource='federated.0al7rki100lexz144t0ig140j05b'>
            <column caption='BNN Fair Training Fairness Score' datatype='real' name='[BNNFairTrainingFairnessScore]' role='measure' type='quantitative' />
            <column caption='BNN Fairness Score' datatype='real' name='[BNNFairnessScore]' role='measure' type='quantitative' />
            <column datatype='real' name='[Layer]' role='measure' type='quantitative' />
            <column datatype='real' name='[Neurons]' role='measure' type='quantitative' />
            <column-instance column='[Layer]' derivation='None' name='[none:Layer:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Neurons]' derivation='None' name='[none:Neurons:ok]' pivot='key' type='ordinal' />
            <column-instance column='[BNNFairTrainingFairnessScore]' derivation='Sum' name='[sum:BNNFairTrainingFairnessScore:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNFairnessScore]' derivation='Sum' name='[sum:BNNFairnessScore:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairTrainingFairnessScore:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='0' field='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairTrainingFairnessScore:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairnessScore:qk]' scope='rows' value='Threshold-Fairness Score' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-color' scope='cols' value='#b07aa1' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <encoding attr='space' class='0' field='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairnessScore:qk]' field-type='quantitative' max='1.0' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='font-size' id='refline1' value='7' />
            <format attr='color' id='refline1' value='#4e79a7' />
            <format attr='stroke-color' id='refline1' value='#4e79a74b' />
            <format attr='stroke-color' id='refline0' value='#e157594b' />
            <format attr='color' id='refline0' value='#e15759' />
            <format attr='font-size' id='refline0' value='7' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='cols' value='#e6e6e6' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-color' scope='cols' value='#c0c0c0' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0al7rki100lexz144t0ig140j05b].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairnessScore:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='value' probability='95' scope='per-pane' value-column='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairnessScore:qk]' z-order='1' />
            <reference-line axis-column='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairTrainingFairnessScore:qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='value' probability='95' scope='per-pane' value-column='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairTrainingFairnessScore:qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairnessScore:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0al7rki100lexz144t0ig140j05b].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairTrainingFairnessScore:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0al7rki100lexz144t0ig140j05b].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairnessScore:qk] + [federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairTrainingFairnessScore:qk])</rows>
        <cols>([federated.0al7rki100lexz144t0ig140j05b].[none:Layer:ok] / [federated.0al7rki100lexz144t0ig140j05b].[none:Neurons:ok])</cols>
      </table>
      <simple-id uuid='{5CCFCA54-93EA-4C49-8FA4-B4FA6E97639A}' />
    </worksheet>
    <worksheet name='Time'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Training Time for BNN and BNN with fair training, epsilon = 0
</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='mean_eps_0.00' name='federated.0al7rki100lexz144t0ig140j05b' />
          </datasources>
          <datasource-dependencies datasource='federated.0al7rki100lexz144t0ig140j05b'>
            <column caption='BNN Fair Training Time' datatype='real' name='[BNNFairTrainingTime]' role='measure' type='quantitative' />
            <column caption='BNN Time' datatype='real' name='[BNNTime]' role='measure' type='quantitative' />
            <column datatype='real' name='[Layer]' role='measure' type='quantitative' />
            <column datatype='real' name='[Neurons]' role='measure' type='quantitative' />
            <column-instance column='[Layer]' derivation='None' name='[none:Layer:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Neurons]' derivation='None' name='[none:Neurons:ok]' pivot='key' type='ordinal' />
            <column-instance column='[BNNFairTrainingTime]' derivation='Sum' name='[sum:BNNFairTrainingTime:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNTime]' derivation='Sum' name='[sum:BNNTime:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairTrainingTime:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' field='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNTime:qk]' field-type='quantitative' max='700.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNTime:qk]' scope='rows' value='Time (s)' />
            <format attr='title' class='0' field='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairTrainingTime:qk]' scope='rows' value='' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-color' scope='cols' value='#b07aa1' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='font-size' id='refline1' value='7' />
            <format attr='color' id='refline1' value='#4e79a7' />
            <format attr='stroke-color' id='refline1' value='#4e79a74b' />
            <format attr='stroke-color' id='refline0' value='#e157594b' />
            <format attr='color' id='refline0' value='#e15759' />
            <format attr='font-size' id='refline0' value='7' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='cols' value='#e6e6e6' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-color' scope='cols' value='#c0c0c0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0al7rki100lexz144t0ig140j05b].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNTime:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='value' probability='95' scope='per-pane' value-column='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNTime:qk]' z-order='1' />
            <reference-line axis-column='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairTrainingTime:qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='value' probability='95' scope='per-pane' value-column='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairTrainingTime:qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNTime:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0al7rki100lexz144t0ig140j05b].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairTrainingTime:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0al7rki100lexz144t0ig140j05b].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0al7rki100lexz144t0ig140j05b].[sum:BNNTime:qk] + [federated.0al7rki100lexz144t0ig140j05b].[sum:BNNFairTrainingTime:qk])</rows>
        <cols>([federated.0al7rki100lexz144t0ig140j05b].[none:Layer:ok] / [federated.0al7rki100lexz144t0ig140j05b].[none:Neurons:ok])</cols>
      </table>
      <simple-id uuid='{42EEEDA2-8818-4F2A-BA78-7711E3475D15}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' name='Time'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.0al7rki100lexz144t0ig140j05b].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.0al7rki100lexz144t0ig140j05b].[:Measure Names]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{E3963724-CDB3-4918-B144-749EDE4EF6C8}' />
    </window>
    <window class='worksheet' name='Threshold-Fairness'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.0al7rki100lexz144t0ig140j05b].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.0al7rki100lexz144t0ig140j05b].[:Measure Names]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{F1D1EBCF-C66B-4B27-A092-FDF9E3C2967D}' />
    </window>
    <window class='worksheet' name='Accuracy'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.0al7rki100lexz144t0ig140j05b].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.0al7rki100lexz144t0ig140j05b].[:Measure Names]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{87DF4E5A-5FB7-40A5-BA33-3E73422964A0}' />
    </window>
    <window class='worksheet' name='Precision'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.0al7rki100lexz144t0ig140j05b].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.0al7rki100lexz144t0ig140j05b].[:Measure Names]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{C33A8AC6-FDBF-45D3-9575-DD5DDD22FAFA}' />
    </window>
    <window class='worksheet' name='Recall'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.0al7rki100lexz144t0ig140j05b].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.0al7rki100lexz144t0ig140j05b].[:Measure Names]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{37BD4397-5027-47E1-9851-C3E355D65671}' />
    </window>
    <window class='worksheet' name='Entropy'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.0al7rki100lexz144t0ig140j05b].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.0al7rki100lexz144t0ig140j05b].[:Measure Names]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{C70FA01A-A774-4E10-9C44-075FE13B9E1F}' />
    </window>
    <window class='worksheet' maximized='true' name='Average Difference'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='5' param='[federated.0al7rki100lexz144t0ig140j05b].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.0al7rki100lexz144t0ig140j05b].[:Measure Names]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{2B407B84-F5C9-4C57-A668-F2BDF9CF5517}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Accuracy' width='192'>
      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
      d46c7RwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Average Difference' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAfaElEQVR4nO2deXBcx33nP29uzI37JoiDIHhTFEVKlGRJdrS+5MhXnMRybG2cbMWldZIq
      19Z6naqsq3YrtVv5I16vvVFtssm6rM3laG1LsW57ZVGUSYkUARIEcd/A4B7Mfbyj9w+QEA8M
      MUMCMwSmP1WsIt78pvv3e9Pf16/79e+1IoQQSCRFiqnQDkgkhWRTBBCNRjejWEkGjFSM2cVw
      od3YkmyKAAzD2IxitzWv/uwF0rd52nq7zhLVFQB6ei7y4i/PMnrhDAOB5Q30cHtiKbQDkhUW
      5ucRAsKzI/zwn17EXt6EIzXHxz/xEd58b4jp3veJCjtPPnqQf/7FBT77+d9if2sNCMH4QpTH
      73MDEIuZmZ3uo1aUYSoJ8d0/f5a42c0njneg1R7k0i9fptJvoi+Q4EBrHWcv9lLXehBjrpek
      puLdeT/LfW9iOHfwu3/wOzgKfF42GzkGuMtYmJuhueMQ0eV5ju1v4W9++AKH9tQTNvnZ21pP
      JJbkoY9+ZqXxA3oqCPYyzIqyWsaH7j/IydMXSYemiVsraN9RQyyZQtc1VFVFx8IXvvhlpqdm
      eeYP/4j44gQWTxX/5pnfJT4zR3v7bhLxIOn09p8fkQK4S/A5TTz7/b9kKSkYGuijpraO1oNH
      UXUTrS3tdFRZmFqMUVZRTW25d/V7l86eY9/Rez8ox+emtmkfDdVeKhvaaS0TzC4naGhu5tTL
      P0Yp8VNT14jLYeXxDz/AX//l9+k4/AD19XWAlcbGSkKhMC5vKdYiaB3KZkyDhsNhvF7v+obb
      lFQqhd1uv+NyfvXGC4jKPZw4tCuDheD06TPcf//9d1zXRrJR8eeDbScAXUszPhGgqbmpYN1b
      IeNPJeOMjIxRXl1PZVlhfChk/GoyyvDoJCWeUhrrq1HWsd92nVwiFiOyHEIvtCMFQjGbaWvf
      xfjIUKFdKQiK2UZr2y4WpieyagPbTgBuXylOh63QbhQMMwad596nqbW90K4UBIvVxvjQZdJY
      ULK4t9l2AggHF5mdnSUwM19oVwrC1NwivooqdDVVaFcKQnhpHmxurKioWTxXWR0DpNNpNmo4
      EI1GcbvdG1JWrqjpNKqmoZjMlDgKMxArZPy6rpFKpTGZLTjshekJCxm/EAbJRBKLzY7VYl7X
      fvVBmBBiwwSQS1npdBqbbf0fStd1FEXBZLp1p2WxWjGEwGazZeVDtvUDqKqK1Wpd124z4s/W
      1mQyYzabsdmsGxq/EAJN0+76+EHBYrViNilZ+bAqgFymrWKRZSwlXuyWlcYYXV4knBLUVleg
      XHHU4cjuGaKiKFnVrWkaiqJgNq+v6mzLzMVWCIHJZMrqx9qM+HOx3az4VVXdEvGrqorZbF73
      Ygm3MQZIJ6MM9nazFF8ZYxtqgr7RAFpwirlIOtfiJJKCkrMAbA43O+prVv/WkjGcXj+NdRXM
      zMsViZKtRc6L4YRhoGkamqqSiMbQTQ7i4RnG0zq1DXs3w0eJZNPIWQDpZJRQ2gLpWaivxGwu
      YXdzHZEUVLrXHyBJJHcTOQvA7vTS1nbDY25bGYWZ9JJI7oxt9yBMIskFKQBJUSMFIClqpAAk
      RY0UgKSokQKQFDVSAJKiRgpAUtTkLABdTXCp+wLD49MACKEz0NvDxUt9GPI1o5ItRs4CmB4d
      pqZ5D5HgSsZVKryAcJSxwwcj8/ENd1Ai2UxyXgqhGfpKps2VdHu7pxwx1cd0IgjVNei6jq7r
      aJqWVXnZ2l5NiMkmyWEz6hdC5OTrRtefi62MX1/N31iPnAVQXV1Lz6UuzNYSwvOTqPZyLBYL
      y7g4UOfFbFpJWrFYsita1/WsbbNNiMmlzGxtr2Y5ZWO7WfFna1vs8Qshsk6IyVkATn8lR49U
      Xnes3Ls712IkkrsCOQskKWqkACRFjRSApKiRApAUNVIAkqJGCkBS1EgBSIoaKQBJUSMFIClq
      pAAkRY0UgKSokQKQFDW3IQBBaHmJZFpdPZKIRQiGIhu2v4BEki9yFsBSYJyp+RAXL14CwEjH
      uNQ/QnBygOlQcW7LI9m65Lwcenl5mcbWgwz3XgBAsdjR4mECEYODu2wyIWaT6s/FVsa/iQkx
      LpeTUCiMoRuoyTjJRBRHWR27ygVjgWX2NpXJhBiZELNlEmJyvgWqamxBj8yzo3kXmppEcZRS
      67UQiFrY3Viaa3ESSUHJuQdQFDNNLW3XHXPX76B6w1ySSPKHnAaVFDVSAJKiRgpAUtRIAUiK
      GikASVEjBSApaqQAJEWNFICkqJECkBQ1UgCSokYKQFLUSAFIipqcF8NFFgP0jgbAZOW+ew6g
      q0kGB4eZnRyl5ehjNJSWbIafEsmmkLMA5ufn6Nh/D8N9KwkxZquD9o4O4imVer9DJsRsUv25
      2Mr4NzEhxm61kUylQYAwDISiEJ4dx1fZuJqwIhNiZELMtk2IqW1qZXFygLKqOqLBGZZjKklh
      p7m+LNeiJJKCk3MPYLLY6Ni7//qD7tqN8kciyStyFkhS1EgBSIoaKQBJUSMFIClqMgpACMFr
      /+8d0te8AlEi2W6sOQsUicZ45Rdvc+rMeSwWMx9++Hi+/ZJI8sKaPYDNamUxGOKRE/fx2EPH
      8u2TRJI31uwBVE3jq1/8LGlVRVGUfPskkeSNNQXgdjkBsFpzfk4mkWwpMrbw5cAQ//D8i5TX
      NrH/+KPsaZDv/ZRsPzLOAg1f7qJ2ZxuTE2PMBaP59EkiyRsZBXDggcfxOazsO3iU4x11+fRJ
      IskbGQVw/uQrOBoP02AL8k7P5OrxZGSJ98+f50LPwMoBIRi43E1Pz2VSutwiSbK1yDgG2HP4
      GD/4p+cxmS184Uv/avV4YHqStj2HGOm/CICWDDE1H6KivBQEGIaBYRjoup6VA9naXk2I2cgy
      c7G9mhCSje1m1J+L7WbFX8j6c7G9apNN8lRGASwtzKJYbLidNkKRGBUeOwBmkwndMOBK2QoK
      /opqOhqd9IzMcaCtCkVRskpGALK2NZlMWdtuRv1XM4wKVX8utpsVfyHrz8X26u90Rxlhyegy
      O/cd4/699bg83tXjtY3NXO6/hNNbRnh+EtVRhc+qcXl4gZaOfSiKsvov26Cysc2l3M2oPxdb
      Wf/dUX82thkF4K9tgQt9nD49waFjD9NQuSICq8PFwYOHrrMt93SsW5FEcjeSsY9IRRa53N3J
      +OQ044uxfPokkeSNjAJIxqJ4/eVMBWZwWNdPRJdItiIZb4E8VY08+OhOnvD7qK2qyKdPEkne
      yNgDqLEgL7z0GhOjQyyE5S2QZHuSsQcoq2vlwcNR0qoOyBWhku1JRgFM9r1P38AIJqsVzdvA
      Ywd35NMviSQvZLwFcvvKCAcX6ekfp6HSl0+fJJK8sWYPcPrNV1iIpvj1r3yd1mo3JpkUI9mm
      rCmAXbvaePm/f4/O3nEqPTYe/eTn2N0gZ4Ik2481BdB9oYuGll0cePhJ9tR5KHG68+2XRJIX
      1hwD3Hv8BNGFWd49+XNefvllphbD+fZLIskLawpgKjDLrz3xGcqcZjRNwzDkOn/J9mTtMUDH
      AeKxMCazjaq6Rir8ntXPhKExMjyMq7Sa6vKV2aHx4X6iSY2W9j04LHLALNk6rNkDqPElnn32
      b4jG4/zj3/5Pxq5ZDDczPoSjtI6p8eGVA0IjGE7StmsXdrNs/JKtxZo9QGh6EOGvw2Iy0VTj
      4dLQNDsr2gFIplKU1zivSTZQKC/zMdB9ntLmA1R7bHKLpLtgi6Bij/+Otkiq2HWMZxpX1vzv
      2bMHm92x+lltXQM9l7uwOjyE5ydJWfxEoxFUw4TbYZNbJFH4LYKKPf5ctkhaszSTyUxJSQmR
      0DKK2XrdZw5PGUfuuX47pMrSG3aMkUi2CBnlNHT+l7x6qgub083u4x/lQ/sb8umXRJIXMvYR
      FqsNNZ2ib2icCp8znz5JJHkjowBc/kqqahu4Z99uBi+cJZbKbqAikWwlMgpg5HInNR3Haau0
      Mj87zqune/Lpl0SSFzKOAfbde4If/uhFDEPhxPHDWMqq8+mXRJIXMgrA4nBSW1lBSjfw1+9m
      Z40/n35JJHnhFu8GfZXJuIUKJ8yFk/n0SSLJGxkF0NjSwfH9LYwElqnyu/Lpk0SSNzLeAula
      irE5nd/5ytNYLNZMZhLJliZjD2C2u0ktjvL8888zNrucT58kkryRWQBozAUmSKY1luJyr2DJ
      9iSjABZnJimtqmNiYgJVy+797RLJViPjGKCh4yjpkknuP/EI7S21q8cNLU1//wCu0ioaaysB
      EELnUk8v+/buQ75AQrKVyNgDCENnbHSYt954iYHppdXj02ODlDe0sTg7tXosMD7M/FIEmTgp
      2Wpk7AHikSDhaIKK2kZK3R/kA6iqhs9uQzGtXOq1VJSpxThOmyCtqljNJpkQcxckhBR7/HeU
      EANQtWM3n/p4KadOvUMomqTyyorQyqoqLnefRzHbCM9PkjT7qK0sY2BggVRaxeF2yoQYmRCz
      tRNiwoEBnv27n7G7oYzBhJcn6j9IgHGX1XBfWc3q316AMg8NjY3rRyCR3GWsKZESfw337t9F
      JBZncXKI2aB8Pbpke7JmD2At8fCRj34SgGhoCcMid4iRbE/WvaFy+8rWM5FItizZbdAqkWxT
      pAAkRY0UgKSokQKQFDVSAJKiRgpAUtRIAUiKGikASVEjBSApanIWgBAG4yODLIaiVw4YTI2P
      MDgyjpHFUmWJ5G4iZwHMjQ+iuCsZG+pfOSAEvooafCLE2FJqo/2TSDaV7BZiX0MsnqCy1stS
      4MoCOZOZVGSRS+OLHH1gD7quy4SYuyAhpNjjv+OEmEyUlvqZHB9D0yAeWiClOEjpZtqbqphZ
      iNJW75cJMTIhZmsnxNyK0podmIJL2BrrsSo6FpMVk55CK6mn1u/NtTiJpKDkLABQ8JWWX/n/
      yhvjbKt/SyRbCzkNKilqpAAkRY0UgKSokQKQFDVSAJKiRgpAUtRIAUiKGikASVEjBSApaqQA
      JEWNFICkqLkNAQiCi/PEUx/sG5aIhplbWMpqqbJEcjeRswAWp0eZDSXp6e4GQOgqc0shtOVJ
      hubkW6QlW4ucV4OGQmHqWw8yHF3ZNkkxW6kp99LZPcPBJqdMiNmk+nOxlfFvYkKM2+1keTmE
      rhmkE1F0xczFS4McPXYU85Ud8mRCjEyI2SoJMTnfAlU2tEJ8kZ1t7Ri6hq6Dz1tC3+XLhOPp
      XIuTSApKzj2Aopho3Nl63bHdHXs3zCGJJJ/IaVDJbXP1tmgrIwUguS0MQ9A5OMO//c7LzG3h
      PeRuIyd4eyOE4K2uMZpq/HhddhTAZFJAgKFrpHUwKQqKArohGJtZpqOpAnMWA67tQDCS4PSl
      SU51T+B3Ozi8qwaXw1pot24bKYBrSKs6r703xHOvX6Ch0ovXaQdWGjqAds1UrBCQTGuMzizz
      3/7wYzRW+Qrp+qai6QZ94wu8emaA2eUEx/fU88e/cT8VV/aO3spIAbBy1e8emeO51y5yqLWa
      Z7/xBF6nfeXKf42NqqrYbLbVY7puMD4Xoq7CUwi3N53laJI3z49y5vIU1aUufu1oC/tbaq47
      L1udohaAEILAYpTnT/ah6YI//o3j1JS5UZTsfmCz2URzbekme5lfdN3gf7/SxVwwxnI0yaOH
      m/jWlx7CVWJDU9Vt1fihiAUQTaR5+cwg7/dN87lH9nJkdy2mLBv+dkTXDbqGZnnhVB+RRJpP
      PdDOwwd3YDavjG22+mxPJopOAIYQnL40yQun+ji+t4FvfekEHtfWv5e9XQwheL8/wAun+ij3
      Ofm9J45QX+HJuhfc6hSNAGLJNKMzIX781mXKPCV84zcfoNLvIpUqzjda67rB2b5pfvp2Lw1V
      Pn7/iSPUVxbfqy2LRgDf//F7DE4u8Y3fOkF7Q1nRXOFuRLvS8F98p5+6cg9fe/JeGqr8RXk+
      5oKx4hDA+f4AkXiaP/nyh2iq3r7TlbdifDZE7/gCb3WNUVfh4ZlP30ddhYdUKlWUjT+WSPMX
      Pzq9/QUwvRDh737ezTefeohyb0mh3SkIhhA8+9OzxJJp/v0XH9q207bZoukGz75wjsePtuQu
      gHQsRM/ACDanl73tLYDB+NAAccVFR0vDJrh7+4RjKb7zo9N87cmjRdv4Ad48P0q5z8mffPlh
      XA7b+l/Y5vzjLy5R6XPy4SPNuQtgemqc5t0HGB3ovnJEob5xB/1jAQAMw1j9lw1CiKxsDcNA
      UZSsumshBKm0yvd+/C6//mA7O2t8GevItv6rdtn6utHx52J7rd3gVJDXzw7xrS89TInNctP3
      t2P8V9vKWrzZOcb47DLf+M0HMAwj98VwCjcWnF2SSj4RQvDc6xdpbyjnxP7GQrtTMIKRJH/9
      L+/zzGeOben1OhuBEILLY/O8cXaYr3/2GJYrzzdy7gFqG3bQ03cRu8tHeH4S1V5OMDDCwkKI
      YHUNpV4nJpMpq2wcWMnyyipzx2TK2vYX58eJxNM8/bHD69pnW+bVFLtsfd3o+HOxVRQFVTf4
      Hz89yxce20fDLaY3t2P8V+u/aqtqOi+dHuD/vH6RP//a47ivrPGC2xCAzenl8OHD1x0r9+6l
      bXeuJW0OXUOzvNM9wZ8+/ejqU8xiQwjB37/eTUdjOffuri20OwVjKZzgra4x3uwc5WBLNV/9
      5D3suGEWcFvNAk3Oh3nutQv80WfvxW7bVqHlxMmLkyyG43z5o/cX3RSnEILRmRA/f3+EkUCI
      Rw438Z+++hiea67617JtWkkknuK7z5/h9584QqXfVWh3CkZgMcqr7w3xH59+rKh6QE036Byc
      4fX3hkmrGk+caOernzyC1XLr8em2EICq6Xzv/77Hkw/upr2xvGiXNxiG4MdvXeYPPnUEj3P7
      T3caxsoy9vHZEG9fHKe+0stvf2Q/9RWuzdsm9W5DCMEPXuliZ62/qGd8hBD85O1eSuwWGqu2
      /5oeIQRvdo7y3efP8OmHOvgPTz20ksGnKKiqun4BV9jSAkimNV46PUAkkeZff+Jw0d3vXkvn
      wAwXh+f45lMPgqEX2p1NJRRL8oNXukilNb7z9Y/RWOW97ZTULSkAIQRzwRg/fO0Cp7on+Ntv
      Plk0OblrMReM8fc/7+bf/fYJ7FYLqdT2FUDP6Dz/62fn+dSJdj50qOmOE3S2lACEgMGpJX5y
      spdoIs3HjrXx1OMH8LsdhXatYCTTGt99/gxPf/zwth78J1Maz712kZlgnG8+9eCGxbolBKAb
      Bn0Ti/z07T40Q/DphzrY31y17dLzckEIwUhgmT//h3f4yJFm9jRV3NreMMAwULJ8DWG2PhjL
      y5j8m7ecWgjB0FSQv/qX97l/bx1Pf+LI6lPcjeA2zoYglUxittpXHdFUFV0IbDbbTQsl7gRN
      NzjXH+Dl0wN4nTY+98hedjWW3zWpi0IIRDKJ4nDkbfyRTGuc7w/wxrkRQHCkvZZHD++8qX4h
      BCKdRl9cJD0yQuyttzFiUWzNzShWK4rdjuJwYJjNqE7nyt92G4rVSnp0DEt1NYrJhEilMBIJ
      jEQCLRrFpGkYiQQirWJEI6R6+6j5L3+Gta5uw2NVNZ0XTvXTNTTDM5+5j2q/Y0MbP9zO26Hn
      phiZDaOqKvcdOYTQ05zv7MKCTvOB+/A77mxdkBCC4UCQybkIL50eoKHSw+89cYSaUufKo/Db
      bGhGLIbQdMy+9WdI0hOTWCrKwWzGiEYxolH0cJj0cohUMrlyLBxGXwqS6Oyk5s/+86Y0gGuZ
      Xojws1/10Tu+xMHWap7++KHrXsUihEAPBkkPDhLvuYw+PoHQNSylZdhaduI8fgzFasFSU4NQ
      VUQiiZFOo8ZiCE1dOT+pFEJViZ89h62lGWttLYrdjsnhwFxejqmuDqvbjamkBMVqBZMJdXwc
      S1XVhsc7OR/mr148R1tDOX/6lUewmE1rTm/r4TBm7/q/qdA0jGgUs9+PkUigLy2hLS6hiByz
      nYd7u6hsPshw3wUOHTxEOrLA0HyS3RUK3YsODjaXEw6H8d7gVHxoGIvdjqWqEl0xEY6nCUaT
      zCyECcVV5pdjLITiBCNJLo3O8ZEjzTz1+EFKPQ7QddREAsUwUHQDNBWhaejBIKn+fmzNLRjx
      2MqPGouhRiIo6TRGPI6IJzBSSbRAAKFqWGtrrvPLMASKAlxzFtTRUUw+H+ayUkxuN2aXG5PH
      jXC5sPq8mN0eTB43iqMEdXQU18MPoVzzupS14k+kVCKJNFU33LumUins9uufUmrBICarjZTV
      xnu90/z83QH0+Xke3VPN/S0VmJJJjHgcIxIhdvIk5vJyjFgck8uJrbUVU2sL7t27UZzOdXum
      teq/2iSu/e5ar4XJxFrxZ1O/phsMTwd57vULLIUSPPPZY3TsKF/1I5VKYbNa0RcWSU+Mk7zY
      TfSNN7Dt3Ili+yAGIQxQlOsWbhrRCNrMDJb6BkwOO+bSUswVFbn3ACUOB9F4HGEIdDUNFjvp
      RJBgUMfvK1vzO0II/usLF1haDFHicSHcHpzRZdyJKL5UlFI9SUMqykGRxue0Mj0TZKfaRbrr
      JWbSKorZDFYLisWCYrWhXPm/0HTUyQlEKo3J6UQpKcFcXg61tdi9HhSnc+W43Y4RjYGuYa64
      /l45nUpjd9jhmh9bnZrGUl2FqaTkuhjWagD21pasztuPftHNy2cG2VXlxl7iwOawUWK3YjUr
      uO1WbLEwtuUlLJEQgYlZFi1OZqsa2SMifF5boLpEQZkJocYCmEpKMLndmPw+7Hv34n7sUax1
      dasiTKVSmOxrP/rPhnzdzhmGIBhJ0t87Q+fADBPzYeorPOzbWcn+5io6dpQjUinUQIDU4BCJ
      3l7E4hKKzYZtVxslhw7i2LsH+652FPsHv4uqqjc9CDPicdSJCRwHDoDZvBpjzj2A0DWGhwZx
      ldXgsaTRbKWklgOEktDW3IiiKGteAc5cnsLlsNJSV4rTvrI0VwhBKpHAbrMhdH1lmkfXSfUP
      YGttweRwgMWCYjKhadpN+wOIK/Y3DuzWuqplIlvbO70Cjv7zC4y/+Q6N7U3oLg+6vxTN6yfp
      dGH4y4mrBvGUSiqtcbZvmo4dFXz+0b04rlnTlK2vd2P8sbffJvbue1h2dzBl99GDm67+APrY
      KG2WNEf31LOj2ofdakGdmEDoOtp0ACOZxFJVib29HaVpB86dO9cV91oCyETOAsiG2+0Cb8Va
      ArjTMnOxvdMGYKTTiGTypvvVzfD1boz/xZ+c5NWTl7CW+mnavZMj9V5a1WVcqejKxir61UQX
      QbLnMraWFlwPPoil8oMeO1tfb0sA0Wg068yc9YjFYrhc2c3T6rqeVaPOJSMs2zJzsb36KvBs
      TupmxJ+L7d0Yv64bGEJgUpTrFumtVb8QYs3feTPaymr/6na71zXOhWx7gEzBrmUH2d2fZlvm
      ZtUPGx9/LrYy/ux9zcv6gasbrK3Vw6zlpDCMm17Ft5aiDcNY2RDtlmV+kEcqhEDXtOvKXrUV
      AsPQVzdYWy37mpN5bbkrnxsIkU2uqrjOft34M5S31ly/pulrnqtij/9GX6/2YDe2w7wIIB5e
      on9ggHffPYe2zohDCIPOU6/QMxm6taGhcv7sWfq632diLpLRbGl+hl++8y4AowOX6R8cYjma
      WKtmRoeH6Ok6x/jsEgP9fXSff5dA6Oa5Zy0Vo/N8J6PjkwhgerSXk7/qzOyqkabvci9d595j
      KZq8dVzA+GAvp85lLu8qfd1dDA7209M3ktFmaS7b+I2b43//DDPhm/d901LR6+KfWi9+fSX+
      znPvshRbf6n62MBl3jnXta5d79X4+zPHn4qFefvtk0SSGstzk3Rf7iMwv7T6eV4E4PKVUV9V
      itVRsm6F85MjlNc2rf9EWTGB0EkkVez2zAOzsspaair8gMFUYAZDSxONrdEAFBNlfi/hWBKv
      x0Nry050YcJTcnMyeXBmjCRWwuEwqXiIsGbF78rsg8lkp621CaGYcdhvPfOcigVJmFx4bOvf
      65pNyspT+VsMTMuqso3fTOmV+H0eD63NO9Ew43Hc7O9S4Pr4o5rt1vGbr8ZvoWSdTL1ULEjK
      7MFtW79prsZvzVy33eWlpakegJHxCexmhXA4snrXkJ8eIDjD4HSYew7t49bLdwTTswssL84z
      MzNz063NtRjpOJSUsX9fK3OBuSy8UHB7S+nYu5eF2ambaxYGLl8Fh/a2MD09Q2dnN3sO3YvH
      fnNDdDjdVFbV4rfC4OgYqWSCyckJkhm6N6Gn6bzQw/7D9+BapwFMTUyhJqNMTgVI67eelIgk
      Vfbt3098efGWdiusH7/bV8GhPc1MTc/Q2dXN3kP34s4Qf1V1HT7L1fjjV+Jfu2ZDT3P+Qg8H
      Dt+Dcx1hT01Mkk5GmJwKoK4TfzSpsm//PuKhbOIHZ4mTHa3tpKLLq23L/O1vf/vbWX07B26c
      roqEwsSTcULhGP7S0luIQKGmroGK8lJ8pRW4bnG1VMw29GSImYUora07sWZYIzIfmGRxOURK
      h8bacgaHxmhqabtufh0AoTM6PEgwprKjoZpwOEQ4tIzD7cduvf5Hszk9RBen0awuOnbtora6
      Er+vFJ/XtWb8hpZgfjFCOBTC5fVjtWS+7pRWVFFdVYnP58XnufXEhN2qMDYxRd2OZpwZXng1
      H5hgcTlMSldorCljcHjt+IXQGRseJBjTrou/xOPHZrkxfi/RxWl0m5uOXbuoqa7E7yvD53Vm
      jH/xavw+f8bfaiX+6tX4vevFb4GxiWnqbxF/LLzEVGCeWCxBa1sLo0ODlFU34HWtPOT8/0Mq
      QB1bGsrpAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Entropy' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Precision' width='192'>
      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
      c0d9q1exAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Recall' width='192'>
      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
      TmHCCHXRAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Threshold-Fairness' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Time' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
