<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20233.23.1017.0948                               -->
<workbook original-version='18.1' source-build='2023.3.0 (20233.23.1017.0948)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.PatternedLineMarks.true...PatternedLineMarks />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='mean_eps_0.20' inline='true' name='federated.05x74n60qj7xvz10s3bs61di0rbl' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='mean_eps_0.20' name='textscan.1pqucl51vqe1hk17q8s020gclpsy'>
            <connection class='textscan' directory='C:/Users/theos/OneDrive/Desktop/College/5th year/Thesis/Results/Fairness Regularisation/Charts/eps0.20/Regularisation_plots_0.20' filename='mean_eps_0.20.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1pqucl51vqe1hk17q8s020gclpsy' name='mean_eps_0.20.csv' table='[mean_eps_0.20#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=' '>
            <column datatype='string' name='F1' ordinal='0' />
            <column datatype='real' name='Layer' ordinal='1' />
            <column datatype='real' name='Neurons' ordinal='2' />
            <column datatype='real' name='BNNAccuracy' ordinal='3' />
            <column datatype='real' name='BNNFairTrainingAccuracy' ordinal='4' />
            <column datatype='real' name='BNNMaxDifference' ordinal='5' />
            <column datatype='real' name='BNNFairTrainingMaxDifference' ordinal='6' />
            <column datatype='real' name='BNNMinDifference' ordinal='7' />
            <column datatype='real' name='BNNFairTrainingMinDifference' ordinal='8' />
            <column datatype='real' name='BNNFairnessScore' ordinal='9' />
            <column datatype='real' name='BNNFairTrainingFairnessScore' ordinal='10' />
            <column datatype='real' name='BNNAvgDiff' ordinal='11' />
            <column datatype='real' name='BNNFairTrainingAvgDiff' ordinal='12' />
            <column datatype='real' name='BNNRecall' ordinal='13' />
            <column datatype='real' name='BNNFairTrainingRecall' ordinal='14' />
            <column datatype='real' name='BNNPrecision' ordinal='15' />
            <column datatype='real' name='BNNFairTrainingPrecision' ordinal='16' />
            <column datatype='real' name='BNNMeanEntropy' ordinal='17' />
            <column datatype='real' name='BNNFairTrainingMeanEntropy' ordinal='18' />
            <column datatype='real' name='BNNTime' ordinal='19' />
            <column datatype='real' name='BNNFairTrainingTime' ordinal='20' />
            <column datatype='real' name='BNNAdversaryAccuracy' ordinal='21' />
            <column datatype='real' name='BNNAdversaryMaxDifference' ordinal='22' />
            <column datatype='real' name='BNNAdversaryMinDifference' ordinal='23' />
            <column datatype='real' name='BNNAdversaryFairnessScore' ordinal='24' />
            <column datatype='real' name='BNNAdversaryAvgDiff' ordinal='25' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1pqucl51vqe1hk17q8s020gclpsy' name='mean_eps_0.20.csv' table='[mean_eps_0.20#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=' '>
            <column datatype='string' name='F1' ordinal='0' />
            <column datatype='real' name='Layer' ordinal='1' />
            <column datatype='real' name='Neurons' ordinal='2' />
            <column datatype='real' name='BNNAccuracy' ordinal='3' />
            <column datatype='real' name='BNNFairTrainingAccuracy' ordinal='4' />
            <column datatype='real' name='BNNMaxDifference' ordinal='5' />
            <column datatype='real' name='BNNFairTrainingMaxDifference' ordinal='6' />
            <column datatype='real' name='BNNMinDifference' ordinal='7' />
            <column datatype='real' name='BNNFairTrainingMinDifference' ordinal='8' />
            <column datatype='real' name='BNNFairnessScore' ordinal='9' />
            <column datatype='real' name='BNNFairTrainingFairnessScore' ordinal='10' />
            <column datatype='real' name='BNNAvgDiff' ordinal='11' />
            <column datatype='real' name='BNNFairTrainingAvgDiff' ordinal='12' />
            <column datatype='real' name='BNNRecall' ordinal='13' />
            <column datatype='real' name='BNNFairTrainingRecall' ordinal='14' />
            <column datatype='real' name='BNNPrecision' ordinal='15' />
            <column datatype='real' name='BNNFairTrainingPrecision' ordinal='16' />
            <column datatype='real' name='BNNMeanEntropy' ordinal='17' />
            <column datatype='real' name='BNNFairTrainingMeanEntropy' ordinal='18' />
            <column datatype='real' name='BNNTime' ordinal='19' />
            <column datatype='real' name='BNNFairTrainingTime' ordinal='20' />
            <column datatype='real' name='BNNAdversaryAccuracy' ordinal='21' />
            <column datatype='real' name='BNNAdversaryMaxDifference' ordinal='22' />
            <column datatype='real' name='BNNAdversaryMinDifference' ordinal='23' />
            <column datatype='real' name='BNNAdversaryFairnessScore' ordinal='24' />
            <column datatype='real' name='BNNAdversaryAvgDiff' ordinal='25' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[mean_eps_0.20.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot; &quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[mean_eps_0.20.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.20.csv_09C8B1DAFC9843558EEF3FE9D5613E80]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Layer</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Layer]</local-name>
            <parent-name>[mean_eps_0.20.csv]</parent-name>
            <remote-alias>Layer</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.20.csv_09C8B1DAFC9843558EEF3FE9D5613E80]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Neurons</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Neurons]</local-name>
            <parent-name>[mean_eps_0.20.csv]</parent-name>
            <remote-alias>Neurons</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.20.csv_09C8B1DAFC9843558EEF3FE9D5613E80]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNAccuracy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNAccuracy]</local-name>
            <parent-name>[mean_eps_0.20.csv]</parent-name>
            <remote-alias>BNNAccuracy</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.20.csv_09C8B1DAFC9843558EEF3FE9D5613E80]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNFairTrainingAccuracy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNFairTrainingAccuracy]</local-name>
            <parent-name>[mean_eps_0.20.csv]</parent-name>
            <remote-alias>BNNFairTrainingAccuracy</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.20.csv_09C8B1DAFC9843558EEF3FE9D5613E80]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNMaxDifference</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNMaxDifference]</local-name>
            <parent-name>[mean_eps_0.20.csv]</parent-name>
            <remote-alias>BNNMaxDifference</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.20.csv_09C8B1DAFC9843558EEF3FE9D5613E80]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNFairTrainingMaxDifference</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNFairTrainingMaxDifference]</local-name>
            <parent-name>[mean_eps_0.20.csv]</parent-name>
            <remote-alias>BNNFairTrainingMaxDifference</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.20.csv_09C8B1DAFC9843558EEF3FE9D5613E80]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNMinDifference</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNMinDifference]</local-name>
            <parent-name>[mean_eps_0.20.csv]</parent-name>
            <remote-alias>BNNMinDifference</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.20.csv_09C8B1DAFC9843558EEF3FE9D5613E80]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNFairTrainingMinDifference</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNFairTrainingMinDifference]</local-name>
            <parent-name>[mean_eps_0.20.csv]</parent-name>
            <remote-alias>BNNFairTrainingMinDifference</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.20.csv_09C8B1DAFC9843558EEF3FE9D5613E80]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNFairnessScore</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNFairnessScore]</local-name>
            <parent-name>[mean_eps_0.20.csv]</parent-name>
            <remote-alias>BNNFairnessScore</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.20.csv_09C8B1DAFC9843558EEF3FE9D5613E80]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNFairTrainingFairnessScore</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNFairTrainingFairnessScore]</local-name>
            <parent-name>[mean_eps_0.20.csv]</parent-name>
            <remote-alias>BNNFairTrainingFairnessScore</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.20.csv_09C8B1DAFC9843558EEF3FE9D5613E80]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNAvgDiff</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNAvgDiff]</local-name>
            <parent-name>[mean_eps_0.20.csv]</parent-name>
            <remote-alias>BNNAvgDiff</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.20.csv_09C8B1DAFC9843558EEF3FE9D5613E80]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNFairTrainingAvgDiff</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNFairTrainingAvgDiff]</local-name>
            <parent-name>[mean_eps_0.20.csv]</parent-name>
            <remote-alias>BNNFairTrainingAvgDiff</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.20.csv_09C8B1DAFC9843558EEF3FE9D5613E80]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNRecall</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNRecall]</local-name>
            <parent-name>[mean_eps_0.20.csv]</parent-name>
            <remote-alias>BNNRecall</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.20.csv_09C8B1DAFC9843558EEF3FE9D5613E80]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNFairTrainingRecall</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNFairTrainingRecall]</local-name>
            <parent-name>[mean_eps_0.20.csv]</parent-name>
            <remote-alias>BNNFairTrainingRecall</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.20.csv_09C8B1DAFC9843558EEF3FE9D5613E80]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNPrecision</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNPrecision]</local-name>
            <parent-name>[mean_eps_0.20.csv]</parent-name>
            <remote-alias>BNNPrecision</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.20.csv_09C8B1DAFC9843558EEF3FE9D5613E80]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNFairTrainingPrecision</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNFairTrainingPrecision]</local-name>
            <parent-name>[mean_eps_0.20.csv]</parent-name>
            <remote-alias>BNNFairTrainingPrecision</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.20.csv_09C8B1DAFC9843558EEF3FE9D5613E80]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNMeanEntropy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNMeanEntropy]</local-name>
            <parent-name>[mean_eps_0.20.csv]</parent-name>
            <remote-alias>BNNMeanEntropy</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.20.csv_09C8B1DAFC9843558EEF3FE9D5613E80]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNFairTrainingMeanEntropy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNFairTrainingMeanEntropy]</local-name>
            <parent-name>[mean_eps_0.20.csv]</parent-name>
            <remote-alias>BNNFairTrainingMeanEntropy</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.20.csv_09C8B1DAFC9843558EEF3FE9D5613E80]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNTime</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNTime]</local-name>
            <parent-name>[mean_eps_0.20.csv]</parent-name>
            <remote-alias>BNNTime</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.20.csv_09C8B1DAFC9843558EEF3FE9D5613E80]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNFairTrainingTime</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNFairTrainingTime]</local-name>
            <parent-name>[mean_eps_0.20.csv]</parent-name>
            <remote-alias>BNNFairTrainingTime</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.20.csv_09C8B1DAFC9843558EEF3FE9D5613E80]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNAdversaryAccuracy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNAdversaryAccuracy]</local-name>
            <parent-name>[mean_eps_0.20.csv]</parent-name>
            <remote-alias>BNNAdversaryAccuracy</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.20.csv_09C8B1DAFC9843558EEF3FE9D5613E80]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNAdversaryMaxDifference</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNAdversaryMaxDifference]</local-name>
            <parent-name>[mean_eps_0.20.csv]</parent-name>
            <remote-alias>BNNAdversaryMaxDifference</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.20.csv_09C8B1DAFC9843558EEF3FE9D5613E80]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNAdversaryMinDifference</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNAdversaryMinDifference]</local-name>
            <parent-name>[mean_eps_0.20.csv]</parent-name>
            <remote-alias>BNNAdversaryMinDifference</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.20.csv_09C8B1DAFC9843558EEF3FE9D5613E80]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNAdversaryFairnessScore</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNAdversaryFairnessScore]</local-name>
            <parent-name>[mean_eps_0.20.csv]</parent-name>
            <remote-alias>BNNAdversaryFairnessScore</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.20.csv_09C8B1DAFC9843558EEF3FE9D5613E80]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BNNAdversaryAvgDiff</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BNNAdversaryAvgDiff]</local-name>
            <parent-name>[mean_eps_0.20.csv]</parent-name>
            <remote-alias>BNNAdversaryAvgDiff</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mean_eps_0.20.csv_09C8B1DAFC9843558EEF3FE9D5613E80]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='BNN Accuracy' datatype='real' name='[BNNAccuracy]' role='measure' type='quantitative' />
      <column caption='BNN Adversary Accuracy' datatype='real' hidden='true' name='[BNNAdversaryAccuracy]' role='measure' type='quantitative' />
      <column caption='BNN Adversary Avg Diff' datatype='real' hidden='true' name='[BNNAdversaryAvgDiff]' role='measure' type='quantitative' />
      <column caption='BNN Adversary Fairness Score' datatype='real' hidden='true' name='[BNNAdversaryFairnessScore]' role='measure' type='quantitative' />
      <column caption='BNN Adversary Max Difference' datatype='real' hidden='true' name='[BNNAdversaryMaxDifference]' role='measure' type='quantitative' />
      <column caption='BNN Adversary Min Difference' datatype='real' hidden='true' name='[BNNAdversaryMinDifference]' role='measure' type='quantitative' />
      <column caption='BNN Avg Diff' datatype='real' name='[BNNAvgDiff]' role='measure' type='quantitative' />
      <column caption='BNN Fair Training Accuracy' datatype='real' name='[BNNFairTrainingAccuracy]' role='measure' type='quantitative' />
      <column caption='BNN Fair Training Avg Diff' datatype='real' name='[BNNFairTrainingAvgDiff]' role='measure' type='quantitative' />
      <column caption='BNN Fair Training Fairness Score' datatype='real' name='[BNNFairTrainingFairnessScore]' role='measure' type='quantitative' />
      <column caption='BNN Fair Training Max Difference' datatype='real' name='[BNNFairTrainingMaxDifference]' role='measure' type='quantitative' />
      <column caption='BNN Fair Training Mean Entropy' datatype='real' name='[BNNFairTrainingMeanEntropy]' role='measure' type='quantitative' />
      <column caption='BNN Fair Training Min Difference' datatype='real' name='[BNNFairTrainingMinDifference]' role='measure' type='quantitative' />
      <column caption='BNN Fair Training Precision' datatype='real' name='[BNNFairTrainingPrecision]' role='measure' type='quantitative' />
      <column caption='BNN Fair Training Recall' datatype='real' name='[BNNFairTrainingRecall]' role='measure' type='quantitative' />
      <column caption='BNN Fair Training Time' datatype='real' name='[BNNFairTrainingTime]' role='measure' type='quantitative' />
      <column caption='BNN Fairness Score' datatype='real' name='[BNNFairnessScore]' role='measure' type='quantitative' />
      <column caption='BNN Max Difference' datatype='real' name='[BNNMaxDifference]' role='measure' type='quantitative' />
      <column caption='BNN Mean Entropy' datatype='real' name='[BNNMeanEntropy]' role='measure' type='quantitative' />
      <column caption='BNN Min Difference' datatype='real' name='[BNNMinDifference]' role='measure' type='quantitative' />
      <column caption='BNN Precision' datatype='real' name='[BNNPrecision]' role='measure' type='quantitative' />
      <column caption='BNN Recall' datatype='real' name='[BNNRecall]' role='measure' type='quantitative' />
      <column caption='BNN Time' datatype='real' name='[BNNTime]' role='measure' type='quantitative' />
      <column datatype='real' name='[Neurons]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='mean_eps_0.20.csv' datatype='table' name='[__tableau_internal_object_id__].[mean_eps_0.20.csv_09C8B1DAFC9843558EEF3FE9D5613E80]' role='measure' type='quantitative' />
      <column-instance column='[BNNAccuracy]' derivation='Sum' name='[sum:BNNAccuracy:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BNNAvgDiff]' derivation='Sum' name='[sum:BNNAvgDiff:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BNNFairTrainingAccuracy]' derivation='Sum' name='[sum:BNNFairTrainingAccuracy:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BNNFairTrainingAvgDiff]' derivation='Sum' name='[sum:BNNFairTrainingAvgDiff:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BNNFairTrainingFairnessScore]' derivation='Sum' name='[sum:BNNFairTrainingFairnessScore:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BNNFairTrainingMeanEntropy]' derivation='Sum' name='[sum:BNNFairTrainingMeanEntropy:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BNNFairTrainingPrecision]' derivation='Sum' name='[sum:BNNFairTrainingPrecision:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BNNFairTrainingRecall]' derivation='Sum' name='[sum:BNNFairTrainingRecall:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BNNFairTrainingTime]' derivation='Sum' name='[sum:BNNFairTrainingTime:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BNNFairnessScore]' derivation='Sum' name='[sum:BNNFairnessScore:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BNNMeanEntropy]' derivation='Sum' name='[sum:BNNMeanEntropy:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BNNPrecision]' derivation='Sum' name='[sum:BNNPrecision:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BNNRecall]' derivation='Sum' name='[sum:BNNRecall:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BNNTime]' derivation='Sum' name='[sum:BNNTime:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Neurons]' derivation='Sum' name='[sum:Neurons:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairTrainingAvgDiff:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairTrainingFairnessScore:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairTrainingTime:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:Neurons:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNAccuracy:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairTrainingAccuracy:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNPrecision:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNRecall:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairTrainingPrecision:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairTrainingRecall:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNAvgDiff:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairnessScore:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNTime:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairTrainingMeanEntropy:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNMeanEntropy:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.05x74n60qj7xvz10s3bs61di0rbl]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Ireland&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='mean_eps_0.20.csv' id='mean_eps_0.20.csv_09C8B1DAFC9843558EEF3FE9D5613E80'>
            <properties context=''>
              <relation connection='textscan.1pqucl51vqe1hk17q8s020gclpsy' name='mean_eps_0.20.csv' table='[mean_eps_0.20#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=' '>
                  <column datatype='string' name='F1' ordinal='0' />
                  <column datatype='real' name='Layer' ordinal='1' />
                  <column datatype='real' name='Neurons' ordinal='2' />
                  <column datatype='real' name='BNNAccuracy' ordinal='3' />
                  <column datatype='real' name='BNNFairTrainingAccuracy' ordinal='4' />
                  <column datatype='real' name='BNNMaxDifference' ordinal='5' />
                  <column datatype='real' name='BNNFairTrainingMaxDifference' ordinal='6' />
                  <column datatype='real' name='BNNMinDifference' ordinal='7' />
                  <column datatype='real' name='BNNFairTrainingMinDifference' ordinal='8' />
                  <column datatype='real' name='BNNFairnessScore' ordinal='9' />
                  <column datatype='real' name='BNNFairTrainingFairnessScore' ordinal='10' />
                  <column datatype='real' name='BNNAvgDiff' ordinal='11' />
                  <column datatype='real' name='BNNFairTrainingAvgDiff' ordinal='12' />
                  <column datatype='real' name='BNNRecall' ordinal='13' />
                  <column datatype='real' name='BNNFairTrainingRecall' ordinal='14' />
                  <column datatype='real' name='BNNPrecision' ordinal='15' />
                  <column datatype='real' name='BNNFairTrainingPrecision' ordinal='16' />
                  <column datatype='real' name='BNNMeanEntropy' ordinal='17' />
                  <column datatype='real' name='BNNFairTrainingMeanEntropy' ordinal='18' />
                  <column datatype='real' name='BNNTime' ordinal='19' />
                  <column datatype='real' name='BNNFairTrainingTime' ordinal='20' />
                  <column datatype='real' name='BNNAdversaryAccuracy' ordinal='21' />
                  <column datatype='real' name='BNNAdversaryMaxDifference' ordinal='22' />
                  <column datatype='real' name='BNNAdversaryMinDifference' ordinal='23' />
                  <column datatype='real' name='BNNAdversaryFairnessScore' ordinal='24' />
                  <column datatype='real' name='BNNAdversaryAvgDiff' ordinal='25' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Accuracy'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Accuracy for BNN and BNN with fair training, epsilon = 0.2</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='mean_eps_0.20' name='federated.05x74n60qj7xvz10s3bs61di0rbl' />
          </datasources>
          <datasource-dependencies datasource='federated.05x74n60qj7xvz10s3bs61di0rbl'>
            <column caption='BNN Accuracy' datatype='real' name='[BNNAccuracy]' role='measure' type='quantitative' />
            <column caption='BNN Fair Training Accuracy' datatype='real' name='[BNNFairTrainingAccuracy]' role='measure' type='quantitative' />
            <column caption='BNN Fair Training Fairness Score' datatype='real' name='[BNNFairTrainingFairnessScore]' role='measure' type='quantitative' />
            <column caption='BNN Fairness Score' datatype='real' name='[BNNFairnessScore]' role='measure' type='quantitative' />
            <column datatype='real' name='[Layer]' role='measure' type='quantitative' />
            <column datatype='real' name='[Neurons]' role='measure' type='quantitative' />
            <column-instance column='[Layer]' derivation='None' name='[none:Layer:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Neurons]' derivation='None' name='[none:Neurons:ok]' pivot='key' type='ordinal' />
            <column-instance column='[BNNAccuracy]' derivation='Sum' name='[sum:BNNAccuracy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNFairTrainingAccuracy]' derivation='Sum' name='[sum:BNNFairTrainingAccuracy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNFairTrainingFairnessScore]' derivation='Sum' name='[sum:BNNFairTrainingFairnessScore:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNFairnessScore]' derivation='Sum' name='[sum:BNNFairnessScore:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairnessScore:qk]' scope='rows' value='BNN' />
            <format attr='title' class='0' field='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairTrainingFairnessScore:qk]' scope='rows' value='BNN Fair Training' />
            <encoding attr='space' class='0' field='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairnessScore:qk]' field-type='quantitative' max='1.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNAccuracy:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' field='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairTrainingAccuracy:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-color' scope='cols' value='#b07aa1' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='title' class='0' field='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNAccuracy:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairTrainingAccuracy:qk]' scope='rows' value='' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='font-size' id='refline1' value='7' />
            <format attr='color' id='refline1' value='#4e79a7' />
            <format attr='stroke-color' id='refline1' value='#4e79a74b' />
            <format attr='font-size' id='refline0' value='7' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='color' id='refline0' value='#000000a7' />
            <format attr='color' id='refline2' value='#555555a7' />
            <format attr='font-size' id='refline2' value='7' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='fill-color' id='refline0' value='#e9ebe0' />
            <format attr='fill-color' id='refline2' value='#e9ebe0' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='cols' value='#e6e6e6' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-color' scope='cols' value='#c0c0c0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.05x74n60qj7xvz10s3bs61di0rbl].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNAccuracy:qk]' enable-instant-analytics='true' formula='min' id='refline0' label-type='value' paired-id='refline1' scope='per-pane' symmetric='false' value-column='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNAccuracy:qk]' z-order='1' />
            <reference-line axis-column='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNAccuracy:qk]' enable-instant-analytics='true' formula='max' id='refline1' label-type='value' paired-id='refline0' scope='per-pane' symmetric='false' value-column='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNAccuracy:qk]' z-order='2' />
            <reference-line axis-column='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairTrainingAccuracy:qk]' enable-instant-analytics='true' formula='min' id='refline2' label-type='value' paired-id='refline3' scope='per-pane' symmetric='false' value-column='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairTrainingAccuracy:qk]' z-order='3' />
            <reference-line axis-column='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairTrainingAccuracy:qk]' enable-instant-analytics='true' formula='max' id='refline3' label-type='value' paired-id='refline2' scope='per-pane' symmetric='false' value-column='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairTrainingAccuracy:qk]' z-order='4' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-transparency' value='255' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='dotted' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairnessScore:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.05x74n60qj7xvz10s3bs61di0rbl].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='dotted' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairTrainingFairnessScore:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.05x74n60qj7xvz10s3bs61di0rbl].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='dotted' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNAccuracy:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.05x74n60qj7xvz10s3bs61di0rbl].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairTrainingAccuracy:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.05x74n60qj7xvz10s3bs61di0rbl].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairnessScore:qk] + ([federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNAccuracy:qk] + ([federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairTrainingFairnessScore:qk] + [federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairTrainingAccuracy:qk])))</rows>
        <cols>([federated.05x74n60qj7xvz10s3bs61di0rbl].[none:Layer:ok] / [federated.05x74n60qj7xvz10s3bs61di0rbl].[none:Neurons:ok])</cols>
      </table>
      <simple-id uuid='{C912D022-2C26-48AF-8716-52A7A8336F9A}' />
    </worksheet>
    <worksheet name='Average Difference'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average Difference for BNN and BNN with fair training, epsilon = 0.2</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='mean_eps_0.20' name='federated.05x74n60qj7xvz10s3bs61di0rbl' />
          </datasources>
          <datasource-dependencies datasource='federated.05x74n60qj7xvz10s3bs61di0rbl'>
            <column caption='BNN Avg Diff' datatype='real' name='[BNNAvgDiff]' role='measure' type='quantitative' />
            <column caption='BNN Fair Training Avg Diff' datatype='real' name='[BNNFairTrainingAvgDiff]' role='measure' type='quantitative' />
            <column datatype='real' name='[Layer]' role='measure' type='quantitative' />
            <column datatype='real' name='[Neurons]' role='measure' type='quantitative' />
            <column-instance column='[Layer]' derivation='None' name='[none:Layer:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Neurons]' derivation='None' name='[none:Neurons:ok]' pivot='key' type='ordinal' />
            <column-instance column='[BNNAvgDiff]' derivation='Sum' name='[sum:BNNAvgDiff:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNFairTrainingAvgDiff]' derivation='Sum' name='[sum:BNNFairTrainingAvgDiff:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-color' scope='cols' value='#b07aa1' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <encoding attr='space' class='0' field='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairTrainingAvgDiff:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' field='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNAvgDiff:qk]' field-type='quantitative' max='1.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNAvgDiff:qk]' scope='rows' value='Average Difference' />
            <format attr='title' class='0' field='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairTrainingAvgDiff:qk]' scope='rows' value='' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='font-size' id='refline1' value='7' />
            <format attr='color' id='refline1' value='#4e79a7' />
            <format attr='stroke-color' id='refline1' value='#4e79a74b' />
            <format attr='stroke-color' id='refline0' value='#e157594b' />
            <format attr='color' id='refline0' value='#e15759' />
            <format attr='font-size' id='refline0' value='7' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='cols' value='#e6e6e6' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-color' scope='cols' value='#c0c0c0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.05x74n60qj7xvz10s3bs61di0rbl].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNAvgDiff:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.05x74n60qj7xvz10s3bs61di0rbl].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairTrainingAvgDiff:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.05x74n60qj7xvz10s3bs61di0rbl].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNAvgDiff:qk] + [federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairTrainingAvgDiff:qk])</rows>
        <cols>([federated.05x74n60qj7xvz10s3bs61di0rbl].[none:Layer:ok] / [federated.05x74n60qj7xvz10s3bs61di0rbl].[none:Neurons:ok])</cols>
      </table>
      <simple-id uuid='{C3BD5EF3-87CE-43FD-9136-C9B55012B864}' />
    </worksheet>
    <worksheet name='Entropy'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Mean Predictive Entropy for BNN and BNN with fair training, epsilon = 0.2</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='mean_eps_0.20' name='federated.05x74n60qj7xvz10s3bs61di0rbl' />
          </datasources>
          <datasource-dependencies datasource='federated.05x74n60qj7xvz10s3bs61di0rbl'>
            <column caption='BNN Fair Training Fairness Score' datatype='real' name='[BNNFairTrainingFairnessScore]' role='measure' type='quantitative' />
            <column caption='BNN Fair Training Mean Entropy' datatype='real' name='[BNNFairTrainingMeanEntropy]' role='measure' type='quantitative' />
            <column caption='BNN Fairness Score' datatype='real' name='[BNNFairnessScore]' role='measure' type='quantitative' />
            <column caption='BNN Mean Entropy' datatype='real' name='[BNNMeanEntropy]' role='measure' type='quantitative' />
            <column datatype='real' name='[Layer]' role='measure' type='quantitative' />
            <column datatype='real' name='[Neurons]' role='measure' type='quantitative' />
            <column-instance column='[Layer]' derivation='None' name='[none:Layer:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Neurons]' derivation='None' name='[none:Neurons:ok]' pivot='key' type='ordinal' />
            <column-instance column='[BNNFairTrainingFairnessScore]' derivation='Sum' name='[sum:BNNFairTrainingFairnessScore:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNFairTrainingMeanEntropy]' derivation='Sum' name='[sum:BNNFairTrainingMeanEntropy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNFairnessScore]' derivation='Sum' name='[sum:BNNFairnessScore:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNMeanEntropy]' derivation='Sum' name='[sum:BNNMeanEntropy:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairnessScore:qk]' scope='rows' value='BNN' />
            <format attr='title' class='0' field='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairTrainingFairnessScore:qk]' scope='rows' value='BNN Fair Training' />
            <encoding attr='space' class='0' field='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairnessScore:qk]' field-type='quantitative' max='1.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairTrainingMeanEntropy:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' field='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNMeanEntropy:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='0' field='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNMeanEntropy:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairTrainingMeanEntropy:qk]' scope='rows' value='' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-color' scope='cols' value='#b07aa1' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='font-size' id='refline1' value='7' />
            <format attr='color' id='refline1' value='#4e79a7' />
            <format attr='stroke-color' id='refline1' value='#4e79a74b' />
            <format attr='font-size' id='refline0' value='7' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='color' id='refline0' value='#000000a7' />
            <format attr='color' id='refline2' value='#555555a7' />
            <format attr='font-size' id='refline2' value='7' />
            <format attr='font-size' id='refline4' value='7' />
            <format attr='color' id='refline4' value='#555555a7' />
            <format attr='font-size' id='refline6' value='7' />
            <format attr='color' id='refline6' value='#555555a7' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='fill-color' id='refline0' value='#e9ebe0' />
            <format attr='fill-color' id='refline2' value='#e9ebe0' />
            <format attr='fill-color' id='refline4' value='#f5eddc' />
            <format attr='fill-color' id='refline6' value='#f5eddc' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='cols' value='#e6e6e6' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-color' scope='cols' value='#c0c0c0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.05x74n60qj7xvz10s3bs61di0rbl].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNMeanEntropy:qk]' enable-instant-analytics='true' formula='min' id='refline4' label-type='value' paired-id='refline5' scope='per-pane' symmetric='false' value-column='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNMeanEntropy:qk]' z-order='1' />
            <reference-line axis-column='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNMeanEntropy:qk]' enable-instant-analytics='true' formula='max' id='refline5' label-type='value' paired-id='refline4' scope='per-pane' symmetric='false' value-column='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNMeanEntropy:qk]' z-order='2' />
            <reference-line axis-column='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairTrainingMeanEntropy:qk]' enable-instant-analytics='true' formula='min' id='refline6' label-type='value' paired-id='refline7' scope='per-pane' symmetric='false' value-column='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairTrainingMeanEntropy:qk]' z-order='3' />
            <reference-line axis-column='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairTrainingMeanEntropy:qk]' enable-instant-analytics='true' formula='max' id='refline7' label-type='value' paired-id='refline6' scope='per-pane' symmetric='false' value-column='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairTrainingMeanEntropy:qk]' z-order='4' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-transparency' value='255' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='dotted' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairnessScore:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.05x74n60qj7xvz10s3bs61di0rbl].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='dotted' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairTrainingFairnessScore:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.05x74n60qj7xvz10s3bs61di0rbl].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='dotted' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairTrainingMeanEntropy:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.05x74n60qj7xvz10s3bs61di0rbl].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNMeanEntropy:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.05x74n60qj7xvz10s3bs61di0rbl].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairnessScore:qk] + ([federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNMeanEntropy:qk] + ([federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairTrainingFairnessScore:qk] + [federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairTrainingMeanEntropy:qk])))</rows>
        <cols>([federated.05x74n60qj7xvz10s3bs61di0rbl].[none:Layer:ok] / [federated.05x74n60qj7xvz10s3bs61di0rbl].[none:Neurons:ok])</cols>
      </table>
      <simple-id uuid='{B405BE64-1601-44CE-9AE8-C85CEB69604D}' />
    </worksheet>
    <worksheet name='Precision'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Precision for BNN and BNN with fair training, epsilon = 0.2</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='mean_eps_0.20' name='federated.05x74n60qj7xvz10s3bs61di0rbl' />
          </datasources>
          <datasource-dependencies datasource='federated.05x74n60qj7xvz10s3bs61di0rbl'>
            <column caption='BNN Fair Training Fairness Score' datatype='real' name='[BNNFairTrainingFairnessScore]' role='measure' type='quantitative' />
            <column caption='BNN Fair Training Precision' datatype='real' name='[BNNFairTrainingPrecision]' role='measure' type='quantitative' />
            <column caption='BNN Fairness Score' datatype='real' name='[BNNFairnessScore]' role='measure' type='quantitative' />
            <column caption='BNN Precision' datatype='real' name='[BNNPrecision]' role='measure' type='quantitative' />
            <column datatype='real' name='[Layer]' role='measure' type='quantitative' />
            <column datatype='real' name='[Neurons]' role='measure' type='quantitative' />
            <column-instance column='[Layer]' derivation='None' name='[none:Layer:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Neurons]' derivation='None' name='[none:Neurons:ok]' pivot='key' type='ordinal' />
            <column-instance column='[BNNFairTrainingFairnessScore]' derivation='Sum' name='[sum:BNNFairTrainingFairnessScore:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNFairTrainingPrecision]' derivation='Sum' name='[sum:BNNFairTrainingPrecision:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNFairnessScore]' derivation='Sum' name='[sum:BNNFairnessScore:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNPrecision]' derivation='Sum' name='[sum:BNNPrecision:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairnessScore:qk]' scope='rows' value='BNN' />
            <format attr='title' class='0' field='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairTrainingFairnessScore:qk]' scope='rows' value='BNN Fair Training' />
            <encoding attr='space' class='0' field='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairnessScore:qk]' field-type='quantitative' max='1.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairTrainingPrecision:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' field='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNPrecision:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='0' field='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNPrecision:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairTrainingPrecision:qk]' scope='rows' value='' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-color' scope='cols' value='#b07aa1' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='font-size' id='refline1' value='7' />
            <format attr='color' id='refline1' value='#4e79a7' />
            <format attr='stroke-color' id='refline1' value='#4e79a74b' />
            <format attr='font-size' id='refline0' value='7' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='color' id='refline0' value='#000000a7' />
            <format attr='color' id='refline2' value='#555555a7' />
            <format attr='font-size' id='refline2' value='7' />
            <format attr='font-size' id='refline4' value='7' />
            <format attr='color' id='refline4' value='#555555a7' />
            <format attr='color' id='refline6' value='#555555a7' />
            <format attr='font-size' id='refline6' value='7' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='fill-color' id='refline0' value='#e9ebe0' />
            <format attr='fill-color' id='refline2' value='#e9ebe0' />
            <format attr='fill-color' id='refline4' value='#e9ebe0' />
            <format attr='fill-color' id='refline6' value='#dfedeb' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='cols' value='#e6e6e6' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-color' scope='cols' value='#c0c0c0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.05x74n60qj7xvz10s3bs61di0rbl].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNPrecision:qk]' enable-instant-analytics='true' formula='min' id='refline4' label-type='value' paired-id='refline5' scope='per-pane' symmetric='false' value-column='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNPrecision:qk]' z-order='1' />
            <reference-line axis-column='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNPrecision:qk]' enable-instant-analytics='true' formula='max' id='refline5' label-type='value' paired-id='refline4' scope='per-pane' symmetric='false' value-column='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNPrecision:qk]' z-order='2' />
            <reference-line axis-column='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairTrainingPrecision:qk]' enable-instant-analytics='true' formula='min' id='refline6' label-type='value' paired-id='refline7' scope='per-pane' symmetric='false' value-column='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairTrainingPrecision:qk]' z-order='3' />
            <reference-line axis-column='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairTrainingPrecision:qk]' enable-instant-analytics='true' formula='max' id='refline7' label-type='value' paired-id='refline6' scope='per-pane' symmetric='false' value-column='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairTrainingPrecision:qk]' z-order='4' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-transparency' value='255' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='dotted' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairnessScore:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.05x74n60qj7xvz10s3bs61di0rbl].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='dotted' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairTrainingFairnessScore:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.05x74n60qj7xvz10s3bs61di0rbl].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='dotted' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairTrainingPrecision:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.05x74n60qj7xvz10s3bs61di0rbl].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNPrecision:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.05x74n60qj7xvz10s3bs61di0rbl].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairnessScore:qk] + ([federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNPrecision:qk] + ([federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairTrainingFairnessScore:qk] + [federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairTrainingPrecision:qk])))</rows>
        <cols>([federated.05x74n60qj7xvz10s3bs61di0rbl].[none:Layer:ok] / [federated.05x74n60qj7xvz10s3bs61di0rbl].[none:Neurons:ok])</cols>
      </table>
      <simple-id uuid='{BA0BB207-75D3-475B-9125-541DDC7D6722}' />
    </worksheet>
    <worksheet name='Recall'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Recall for BNN and BNN with fair training, epsilon = 0.2</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='mean_eps_0.20' name='federated.05x74n60qj7xvz10s3bs61di0rbl' />
          </datasources>
          <datasource-dependencies datasource='federated.05x74n60qj7xvz10s3bs61di0rbl'>
            <column caption='BNN Fair Training Fairness Score' datatype='real' name='[BNNFairTrainingFairnessScore]' role='measure' type='quantitative' />
            <column caption='BNN Fair Training Recall' datatype='real' name='[BNNFairTrainingRecall]' role='measure' type='quantitative' />
            <column caption='BNN Fairness Score' datatype='real' name='[BNNFairnessScore]' role='measure' type='quantitative' />
            <column caption='BNN Recall' datatype='real' name='[BNNRecall]' role='measure' type='quantitative' />
            <column datatype='real' name='[Layer]' role='measure' type='quantitative' />
            <column datatype='real' name='[Neurons]' role='measure' type='quantitative' />
            <column-instance column='[Layer]' derivation='None' name='[none:Layer:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Neurons]' derivation='None' name='[none:Neurons:ok]' pivot='key' type='ordinal' />
            <column-instance column='[BNNFairTrainingFairnessScore]' derivation='Sum' name='[sum:BNNFairTrainingFairnessScore:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNFairTrainingRecall]' derivation='Sum' name='[sum:BNNFairTrainingRecall:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNFairnessScore]' derivation='Sum' name='[sum:BNNFairnessScore:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNRecall]' derivation='Sum' name='[sum:BNNRecall:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairnessScore:qk]' scope='rows' value='BNN' />
            <format attr='title' class='0' field='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairTrainingFairnessScore:qk]' scope='rows' value='BNN Fair Training' />
            <encoding attr='space' class='0' field='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairnessScore:qk]' field-type='quantitative' max='1.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairTrainingRecall:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' field='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNRecall:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-color' scope='cols' value='#b07aa1' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='title' class='0' field='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNRecall:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairTrainingRecall:qk]' scope='rows' value='' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='font-size' id='refline1' value='7' />
            <format attr='color' id='refline1' value='#4e79a7' />
            <format attr='stroke-color' id='refline1' value='#4e79a74b' />
            <format attr='font-size' id='refline0' value='7' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='color' id='refline0' value='#000000a7' />
            <format attr='color' id='refline2' value='#555555a7' />
            <format attr='font-size' id='refline2' value='7' />
            <format attr='color' id='refline4' value='#555555a7' />
            <format attr='font-size' id='refline4' value='7' />
            <format attr='font-size' id='refline6' value='7' />
            <format attr='color' id='refline6' value='#555555a7' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='fill-color' id='refline0' value='#e9ebe0' />
            <format attr='fill-color' id='refline2' value='#e9ebe0' />
            <format attr='fill-color' id='refline4' value='#e9ebe0' />
            <format attr='fill-color' id='refline6' value='#dfe7e8' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='cols' value='#e6e6e6' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-color' scope='cols' value='#c0c0c0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.05x74n60qj7xvz10s3bs61di0rbl].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNRecall:qk]' enable-instant-analytics='true' formula='min' id='refline4' label-type='value' paired-id='refline5' scope='per-pane' symmetric='false' value-column='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNRecall:qk]' z-order='1' />
            <reference-line axis-column='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNRecall:qk]' enable-instant-analytics='true' formula='max' id='refline5' label-type='value' paired-id='refline4' scope='per-pane' symmetric='false' value-column='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNRecall:qk]' z-order='2' />
            <reference-line axis-column='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairTrainingRecall:qk]' enable-instant-analytics='true' formula='min' id='refline6' label-type='value' paired-id='refline7' scope='per-pane' symmetric='false' value-column='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairTrainingRecall:qk]' z-order='3' />
            <reference-line axis-column='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairTrainingRecall:qk]' enable-instant-analytics='true' formula='max' id='refline7' label-type='value' paired-id='refline6' scope='per-pane' symmetric='false' value-column='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairTrainingRecall:qk]' z-order='4' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-transparency' value='255' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='dotted' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairnessScore:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.05x74n60qj7xvz10s3bs61di0rbl].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='dotted' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairTrainingFairnessScore:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.05x74n60qj7xvz10s3bs61di0rbl].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='dotted' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairTrainingRecall:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.05x74n60qj7xvz10s3bs61di0rbl].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNRecall:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.05x74n60qj7xvz10s3bs61di0rbl].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairnessScore:qk] + ([federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNRecall:qk] + ([federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairTrainingFairnessScore:qk] + [federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairTrainingRecall:qk])))</rows>
        <cols>([federated.05x74n60qj7xvz10s3bs61di0rbl].[none:Layer:ok] / [federated.05x74n60qj7xvz10s3bs61di0rbl].[none:Neurons:ok])</cols>
      </table>
      <simple-id uuid='{63CC8DED-6CE9-466B-954A-97A71886489F}' />
    </worksheet>
    <worksheet name='Threshold-Fairness'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Threshold-Fairness Score for BNN and BNN with fair training, epsilon = 0.2
</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='mean_eps_0.20' name='federated.05x74n60qj7xvz10s3bs61di0rbl' />
          </datasources>
          <datasource-dependencies datasource='federated.05x74n60qj7xvz10s3bs61di0rbl'>
            <column caption='BNN Fair Training Fairness Score' datatype='real' name='[BNNFairTrainingFairnessScore]' role='measure' type='quantitative' />
            <column caption='BNN Fairness Score' datatype='real' name='[BNNFairnessScore]' role='measure' type='quantitative' />
            <column datatype='real' name='[Layer]' role='measure' type='quantitative' />
            <column datatype='real' name='[Neurons]' role='measure' type='quantitative' />
            <column-instance column='[Layer]' derivation='None' name='[none:Layer:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Neurons]' derivation='None' name='[none:Neurons:ok]' pivot='key' type='ordinal' />
            <column-instance column='[BNNFairTrainingFairnessScore]' derivation='Sum' name='[sum:BNNFairTrainingFairnessScore:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNFairnessScore]' derivation='Sum' name='[sum:BNNFairnessScore:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairTrainingFairnessScore:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='0' field='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairnessScore:qk]' scope='rows' value='Threshold-Fairness Score' />
            <format attr='title' class='0' field='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairTrainingFairnessScore:qk]' scope='rows' value='' />
            <encoding attr='space' class='0' field='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairnessScore:qk]' field-type='quantitative' max='1.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-color' scope='cols' value='#b07aa1' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='font-size' id='refline1' value='7' />
            <format attr='color' id='refline1' value='#4e79a7' />
            <format attr='stroke-color' id='refline1' value='#4e79a74b' />
            <format attr='stroke-color' id='refline0' value='#e157594b' />
            <format attr='color' id='refline0' value='#e15759' />
            <format attr='font-size' id='refline0' value='7' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='cols' value='#e6e6e6' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-color' scope='cols' value='#c0c0c0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.05x74n60qj7xvz10s3bs61di0rbl].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairnessScore:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='value' probability='95' scope='per-pane' value-column='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairnessScore:qk]' z-order='1' />
            <reference-line axis-column='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairTrainingFairnessScore:qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='value' probability='95' scope='per-pane' value-column='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairTrainingFairnessScore:qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairnessScore:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.05x74n60qj7xvz10s3bs61di0rbl].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairTrainingFairnessScore:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.05x74n60qj7xvz10s3bs61di0rbl].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairnessScore:qk] + [federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairTrainingFairnessScore:qk])</rows>
        <cols>([federated.05x74n60qj7xvz10s3bs61di0rbl].[none:Layer:ok] / [federated.05x74n60qj7xvz10s3bs61di0rbl].[none:Neurons:ok])</cols>
      </table>
      <simple-id uuid='{CBC7FDF1-0510-4134-9D63-BBB9D8CAE02D}' />
    </worksheet>
    <worksheet name='Time'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Training Time for BNN and BNN with fair training, epsilon = 0.2
</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='mean_eps_0.20' name='federated.05x74n60qj7xvz10s3bs61di0rbl' />
          </datasources>
          <datasource-dependencies datasource='federated.05x74n60qj7xvz10s3bs61di0rbl'>
            <column caption='BNN Fair Training Time' datatype='real' name='[BNNFairTrainingTime]' role='measure' type='quantitative' />
            <column caption='BNN Time' datatype='real' name='[BNNTime]' role='measure' type='quantitative' />
            <column datatype='real' name='[Layer]' role='measure' type='quantitative' />
            <column datatype='real' name='[Neurons]' role='measure' type='quantitative' />
            <column-instance column='[Layer]' derivation='None' name='[none:Layer:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Neurons]' derivation='None' name='[none:Neurons:ok]' pivot='key' type='ordinal' />
            <column-instance column='[BNNFairTrainingTime]' derivation='Sum' name='[sum:BNNFairTrainingTime:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BNNTime]' derivation='Sum' name='[sum:BNNTime:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairTrainingTime:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='0' field='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNTime:qk]' scope='rows' value='Time (s)' />
            <format attr='title' class='0' field='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairTrainingTime:qk]' scope='rows' value='' />
            <encoding attr='space' class='0' field='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNTime:qk]' field-type='quantitative' max='750.0' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='stroke-color' id='refline1' value='#4e79a74b' />
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-color' id='refline0' value='#e157594b' />
            <format attr='text-align' id='refline1' value='left' />
            <format attr='font-size' id='refline1' value='7' />
            <format attr='text-align' id='refline0' value='left' />
            <format attr='font-size' id='refline0' value='7' />
            <format attr='color' id='refline0' value='#e15759' />
            <format attr='color' id='refline1' value='#4e79a7' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='cols' value='#e6e6e6' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.05x74n60qj7xvz10s3bs61di0rbl].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNTime:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='value' probability='95' scope='per-pane' value-column='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNTime:qk]' z-order='1' />
            <reference-line axis-column='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairTrainingTime:qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='value' probability='95' scope='per-pane' value-column='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairTrainingTime:qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNTime:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.05x74n60qj7xvz10s3bs61di0rbl].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairTrainingTime:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.05x74n60qj7xvz10s3bs61di0rbl].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNTime:qk] + [federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:BNNFairTrainingTime:qk])</rows>
        <cols>([federated.05x74n60qj7xvz10s3bs61di0rbl].[none:Layer:ok] / [federated.05x74n60qj7xvz10s3bs61di0rbl].[none:Neurons:ok])</cols>
      </table>
      <simple-id uuid='{601A6876-B6A0-40BA-8740-FAC3DA3F8C7E}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' name='Time'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.05x74n60qj7xvz10s3bs61di0rbl].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.05x74n60qj7xvz10s3bs61di0rbl].[sum:Neurons:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1C260552-E024-4632-9B94-1AA0B435400D}' />
    </window>
    <window class='worksheet' name='Threshold-Fairness'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.05x74n60qj7xvz10s3bs61di0rbl].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.05x74n60qj7xvz10s3bs61di0rbl].[:Measure Names]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{1FA881E5-644F-4A88-977D-197046A4A069}' />
    </window>
    <window class='worksheet' name='Accuracy'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.05x74n60qj7xvz10s3bs61di0rbl].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.05x74n60qj7xvz10s3bs61di0rbl].[:Measure Names]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{9CED1678-763C-4A6D-A014-E3F982B2FC82}' />
    </window>
    <window class='worksheet' name='Precision'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.05x74n60qj7xvz10s3bs61di0rbl].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.05x74n60qj7xvz10s3bs61di0rbl].[:Measure Names]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{5315E46A-17DA-415E-B626-9F8EA54964EC}' />
    </window>
    <window class='worksheet' name='Recall'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.05x74n60qj7xvz10s3bs61di0rbl].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.05x74n60qj7xvz10s3bs61di0rbl].[:Measure Names]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{61FEE19E-98FC-4852-BD3D-661338525226}' />
    </window>
    <window class='worksheet' name='Entropy'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.05x74n60qj7xvz10s3bs61di0rbl].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.05x74n60qj7xvz10s3bs61di0rbl].[:Measure Names]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{EF03BC02-7D6E-46DF-AF43-6DB306392B96}' />
    </window>
    <window class='worksheet' maximized='true' name='Average Difference'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.05x74n60qj7xvz10s3bs61di0rbl].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.05x74n60qj7xvz10s3bs61di0rbl].[:Measure Names]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{CB0DD1D2-7AC6-46E5-95C6-5ABE51EA3D92}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Accuracy' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Average Difference' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Entropy' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Precision' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Recall' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Threshold-Fairness' width='192'>
      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
      WKjzESkqAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Time' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
